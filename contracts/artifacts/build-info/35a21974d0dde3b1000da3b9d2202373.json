{
	"id": "35a21974d0dde3b1000da3b9d2202373",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Sharedwallet.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity 0.8.1;\r\n\r\ncontract SharedWallet {\r\n\r\n    address owner;\r\n    \r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"You are not allowed\");\r\n    _;\r\n}\r\n\r\n    function withdrawMoney(address payable _to, uint _amount) public {\r\n        _to.transfer(_amount);\r\n    }\r\n\r\n    receive() external payable {\r\n\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Sharedwallet.sol": {
				"SharedWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Sharedwallet.sol\":58:434  contract SharedWallet {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Sharedwallet.sol\":115:166  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Sharedwallet.sol\":140:145  owner */\n  0x00\n    /* \"contracts/Sharedwallet.sol\":140:158  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Sharedwallet.sol\":148:158  msg.sender */\n  caller\n    /* \"contracts/Sharedwallet.sol\":140:158  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Sharedwallet.sol\":58:434  contract SharedWallet {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Sharedwallet.sol\":58:434  contract SharedWallet {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf274c897\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Sharedwallet.sol\":281:386  function withdrawMoney(address payable _to, uint _amount) public {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n    tag_10:\n        /* \"contracts/Sharedwallet.sol\":357:378  _to.transfer(_amount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Sharedwallet.sol\":357:369  _to.transfer */\n      dup4\n      and\n      swap1\n        /* \"contracts/Sharedwallet.sol\":357:378  _to.transfer(_amount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/Sharedwallet.sol\":370:377  _amount */\n      dup4\n      swap1\n        /* \"contracts/Sharedwallet.sol\":357:378  _to.transfer(_amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/Sharedwallet.sol\":370:377  _amount */\n      dup6\n        /* \"contracts/Sharedwallet.sol\":357:369  _to.transfer */\n      dup9\n        /* \"contracts/Sharedwallet.sol\":357:378  _to.transfer(_amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_13:\n      pop\n        /* \"contracts/Sharedwallet.sol\":281:386  function withdrawMoney(address payable _to, uint _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:396   */\n    tag_9:\n      0x00\n      dup1\n        /* \"#utility.yul\":151:153   */\n      0x40\n        /* \"#utility.yul\":139:148   */\n      dup4\n        /* \"#utility.yul\":130:137   */\n      dup6\n        /* \"#utility.yul\":126:149   */\n      sub\n        /* \"#utility.yul\":122:154   */\n      slt\n        /* \"#utility.yul\":119:121   */\n      iszero\n      tag_16\n      jumpi\n        /* \"#utility.yul\":172:178   */\n      dup2\n        /* \"#utility.yul\":164:170   */\n      dup3\n        /* \"#utility.yul\":157:179   */\n      revert\n        /* \"#utility.yul\":119:121   */\n    tag_16:\n        /* \"#utility.yul\":203:226   */\n      dup3\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":255:286   */\n      dup2\n      and\n        /* \"#utility.yul\":245:287   */\n      dup2\n      eq\n        /* \"#utility.yul\":235:237   */\n      tag_17\n      jumpi\n        /* \"#utility.yul\":306:312   */\n      dup3\n        /* \"#utility.yul\":298:304   */\n      dup4\n        /* \"#utility.yul\":291:313   */\n      revert\n        /* \"#utility.yul\":235:237   */\n    tag_17:\n        /* \"#utility.yul\":334:339   */\n      swap5\n        /* \"#utility.yul\":386:388   */\n      0x20\n        /* \"#utility.yul\":371:389   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":358:390   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":109:396   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203dd741746b8c4db7ae1cf6cee462576e8cb6b049c99a870f9179a8d9cc7657cf64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b0319163317905560eb806100316000396000f3fe608060405260043610601f5760003560e01c8063f274c89714602a576025565b36602557005b600080fd5b348015603557600080fd5b50604560413660046081565b6047565b005b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015607c573d6000803e3d6000fd5b505050565b600080604083850312156092578182fd5b82356001600160a01b038116811460a7578283fd5b94602093909301359350505056fea26469706673582212203dd741746b8c4db7ae1cf6cee462576e8cb6b049c99a870f9179a8d9cc7657cf64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0xEB DUP1 PUSH2 0x31 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF274C897 EQ PUSH1 0x2A JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x45 PUSH1 0x41 CALLDATASIZE PUSH1 0x4 PUSH1 0x81 JUMP JUMPDEST PUSH1 0x47 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0x7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0x92 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0xA7 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xD7 COINBASE PUSH21 0x6B8C4DB7AE1CF6CEE462576E8CB6B049C99A870F91 PUSH26 0xA8D9CC7657CF64736F6C63430008010033000000000000000000 ",
							"sourceMap": "58:376:0:-:0;;;115:51;;;;;;;;;-1:-1:-1;140:5:0;:18;;-1:-1:-1;;;;;;140:18:0;148:10;140:18;;;58:376;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:398:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:287:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "155:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "164:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "172:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "157:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "157:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "157:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "130:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "151:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "122:32:1"
															},
															"nodeType": "YulIf",
															"src": "119:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "190:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "216:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "203:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "194:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "289:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "298:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "306:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "248:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "259:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "274:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "279:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "270:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "270:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "283:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "266:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "266:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "255:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "255:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "245:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "245:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:50:1"
															},
															"nodeType": "YulIf",
															"src": "235:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "324:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "334:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "324:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "348:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "371:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "371:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "358:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "348:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "67:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "78:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "90:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "98:6:1",
														"type": ""
													}
												],
												"src": "14:382:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601f5760003560e01c8063f274c89714602a576025565b36602557005b600080fd5b348015603557600080fd5b50604560413660046081565b6047565b005b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015607c573d6000803e3d6000fd5b505050565b600080604083850312156092578182fd5b82356001600160a01b038116811460a7578283fd5b94602093909301359350505056fea26469706673582212203dd741746b8c4db7ae1cf6cee462576e8cb6b049c99a870f9179a8d9cc7657cf64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF274C897 EQ PUSH1 0x2A JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x45 PUSH1 0x41 CALLDATASIZE PUSH1 0x4 PUSH1 0x81 JUMP JUMPDEST PUSH1 0x47 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0x7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0x92 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0xA7 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xD7 COINBASE PUSH21 0x6B8C4DB7AE1CF6CEE462576E8CB6B049C99A870F91 PUSH26 0xA8D9CC7657CF64736F6C63430008010033000000000000000000 ",
							"sourceMap": "58:376:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:105;;;;;;;;;;-1:-1:-1;281:105:0;;;;;:::i;:::-;;:::i;:::-;;;357:21;;-1:-1:-1;;;;;357:12:0;;;:21;;;;;370:7;;357:21;;;;370:7;357:12;:21;;;;;;;;;;;;;;;;;;;;;281:105;;:::o;14:382:1:-;;;151:2;139:9;130:7;126:23;122:32;119:2;;;172:6;164;157:22;119:2;203:23;;-1:-1:-1;;;;;255:31:1;;245:42;;235:2;;306:6;298;291:22;235:2;334:5;386:2;371:18;;;;358:32;;-1:-1:-1;;;109:287:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "47000",
								"executionCost": "20934",
								"totalCost": "67934"
							},
							"external": {
								"withdrawMoney(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 434,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 115,
									"end": 166,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 115,
									"end": 166,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 166,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 115,
									"end": 166,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 166,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 115,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 166,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 166,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 115,
									"end": 166,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 166,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 140,
									"end": 145,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 158,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 140,
									"end": 158,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 148,
									"end": 158,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 434,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 434,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 434,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 434,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 434,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203dd741746b8c4db7ae1cf6cee462576e8cb6b049c99a870f9179a8d9cc7657cf64736f6c63430008010033",
									".code": [
										{
											"begin": 58,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "F274C897"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 434,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 281,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 357,
											"end": 369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 357,
											"end": 369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 357,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 357,
											"end": 378,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 370,
											"end": 377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 377,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 357,
											"end": 369,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 357,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 386,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 396,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 14,
											"end": 396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 396,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 130,
											"end": 137,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 126,
											"end": 149,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 122,
											"end": 154,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 119,
											"end": 121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 119,
											"end": 121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 119,
											"end": 121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 172,
											"end": 178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 164,
											"end": 170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 157,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 119,
											"end": 121,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 119,
											"end": 121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 203,
											"end": 226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 203,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 255,
											"end": 286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 255,
											"end": 286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 245,
											"end": 287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 245,
											"end": 287,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 235,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 235,
											"end": 237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 298,
											"end": 304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 291,
											"end": 313,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 235,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 235,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 334,
											"end": 339,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 386,
											"end": 388,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 389,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 371,
											"end": 389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 389,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 371,
											"end": 389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 390,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 390,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 109,
											"end": 396,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"withdrawMoney(address,uint256)": "f274c897"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Sharedwallet.sol\":\"SharedWallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Sharedwallet.sol\":{\"keccak256\":\"0xf4f16e28eb940f8a6fea5253c04908b1b4c5dcde0a40ae1ee220cb5a08435305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11bb8d5b80a1fec0a0382c1728ec2e3c18b8009e72bcb898d2a2b6add5b88afc\",\"dweb:/ipfs/QmdoLfKMinCtPiJBVDhHgZXnbn25hwuAKU9ysbVwzfn7Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Sharedwallet.sol:SharedWallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Sharedwallet.sol": {
				"ast": {
					"absolutePath": "contracts/Sharedwallet.sol",
					"exportedSymbols": {
						"SharedWallet": [
							43
						]
					},
					"id": 44,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "SharedWallet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "89:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "89:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "129:37:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "140:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "148:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "148:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "140:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "140:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "129:0:0"
									},
									"scope": 43,
									"src": "115:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "199:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "218:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "218:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "232:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "218:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420616c6c6f776564",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "239:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c",
																"typeString": "literal_string \"You are not allowed\""
															},
															"value": "You are not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c",
																"typeString": "literal_string \"You are not allowed\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "210:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "210:51:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "268:1:0"
											}
										]
									},
									"id": 24,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:2:0"
									},
									"src": "178:95:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "346:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 34,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "370:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 31,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "357:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "357:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "357:21:0"
											}
										]
									},
									"functionSelector": "f274c897",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "304:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "304:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "325:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:35:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:0:0"
									},
									"scope": 43,
									"src": "281:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "421:10:0",
										"statements": []
									},
									"id": 42,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "401:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:0:0"
									},
									"scope": 43,
									"src": "394:37:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 44,
							"src": "58:376:0"
						}
					],
					"src": "32:402:0"
				},
				"id": 0
			}
		}
	}
}