{
	"id": "a1139f2acb9832df780b160fff117533",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/02_SharedWallet/Allowance.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\n\r\ncontract Allowance  is Ownable {\r\n    \r\n    event AllowanceChanged(address indexed _forWho, \r\n                            address indexed _byWhom, \r\n                            uint _oldAmount, \r\n                            uint _newAmount);\r\n    \r\n    function isOwner() internal view returns(bool) {\r\n        return owner() == msg.sender;\r\n    }\r\n\r\n    mapping(address => uint) public allowance;\r\n    \r\n    function setAllowance(address _who, uint _amount) public onlyOwner {\r\n        emit AllowanceChanged(_who, msg.sender, allowance[_who], _amount);\r\n        allowance[_who] = _amount;\r\n    }\r\n\r\n    function addAllowance(address _who, uint _amount) public onlyOwner {\r\n        allowance[_who] += _amount;\r\n    }\r\n\r\n    function reduceAllowance(address _who, uint _amount) public onlyOwner {\r\n        allowance[_who] -= _amount;\r\n    }\r\n\r\n\r\n    modifier ownerOrAllowed(uint _amount) {\r\n        require(isOwner() || allowance[msg.sender] >= _amount, \"You are not allowed!\");\r\n        _;\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/02_SharedWallet/Allowance.sol": {
				"Allowance": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_forWho",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_byWhom",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_oldAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newAmount",
									"type": "uint256"
								}
							],
							"name": "AllowanceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "reduceAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/02_SharedWallet/Allowance.sol\":168:1167  contract Allowance  is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/02_SharedWallet/Allowance.sol\":168:1167  contract Allowance  is Ownable {... */\n  jump(tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/02_SharedWallet/Allowance.sol\":168:1167  contract Allowance  is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/02_SharedWallet/Allowance.sol\":168:1167  contract Allowance  is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8fdf08df\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf3c40c4b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      0x310ec4a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e5beab9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/02_SharedWallet/Allowance.sol\":577:764  function setAllowance(address _who, uint _amount) public onlyOwner {... */\n    tag_3:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/02_SharedWallet/Allowance.sol\":523:564  mapping(address => uint) public allowance */\n    tag_4:\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":788:813   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":776:778   */\n      0x20\n        /* \"#utility.yul\":761:779   */\n      add\n        /* \"contracts/02_SharedWallet/Allowance.sol\":523:564  mapping(address => uint) public allowance */\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_11\n      tag_22\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_6:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":970:1021   */\n      dup2\n      mstore\n        /* \"#utility.yul\":958:960   */\n      0x20\n        /* \"#utility.yul\":943:961   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_19\n        /* \"#utility.yul\":824:1027   */\n      jump\n        /* \"contracts/02_SharedWallet/Allowance.sol\":892:1007  function reduceAllowance(address _who, uint _amount) public onlyOwner {... */\n    tag_7:\n      tag_11\n      tag_28\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_11\n      tag_31\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"contracts/02_SharedWallet/Allowance.sol\":772:884  function addAllowance(address _who, uint _amount) public onlyOwner {... */\n    tag_9:\n      tag_11\n      tag_34\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n        /* \"contracts/02_SharedWallet/Allowance.sol\":577:764  function setAllowance(address _who, uint _amount) public onlyOwner {... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_SharedWallet/Allowance.sol\":660:720  AllowanceChanged(_who, msg.sender, allowance[_who], _amount) */\n      dup3\n      and\n        /* \"contracts/02_SharedWallet/Allowance.sol\":695:710  allowance[_who] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/02_SharedWallet/Allowance.sol\":695:704  allowance */\n      0x01\n        /* \"contracts/02_SharedWallet/Allowance.sol\":695:710  allowance[_who] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/02_SharedWallet/Allowance.sol\":660:720  AllowanceChanged(_who, msg.sender, allowance[_who], _amount) */\n      dup3\n      mload\n        /* \"#utility.yul\":1567:1592   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1608:1626   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1601:1635   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/02_SharedWallet/Allowance.sol\":683:693  msg.sender */\n      caller\n      swap3\n        /* \"contracts/02_SharedWallet/Allowance.sol\":660:720  AllowanceChanged(_who, msg.sender, allowance[_who], _amount) */\n      swap2\n      0x3691d1a86d99355e52b689ca70a7bdf6d80763237a6aa06e5fa43964eac7244b\n      swap2\n        /* \"#utility.yul\":1540:1558   */\n      add\n        /* \"contracts/02_SharedWallet/Allowance.sol\":660:720  AllowanceChanged(_who, msg.sender, allowance[_who], _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_SharedWallet/Allowance.sol\":731:746  allowance[_who] */\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/02_SharedWallet/Allowance.sol\":731:740  allowance */\n      0x01\n        /* \"contracts/02_SharedWallet/Allowance.sol\":731:746  allowance[_who] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/02_SharedWallet/Allowance.sol\":731:756  allowance[_who] = _amount */\n      sstore\n        /* \"contracts/02_SharedWallet/Allowance.sol\":577:764  function setAllowance(address _who, uint _amount) public onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_52\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/02_SharedWallet/Allowance.sol\":892:1007  function reduceAllowance(address _who, uint _amount) public onlyOwner {... */\n    tag_29:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_SharedWallet/Allowance.sol\":973:988  allowance[_who] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/02_SharedWallet/Allowance.sol\":973:982  allowance */\n      0x01\n        /* \"contracts/02_SharedWallet/Allowance.sol\":973:988  allowance[_who] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/02_SharedWallet/Allowance.sol\":973:999  allowance[_who] -= _amount */\n      dup1\n      sload\n        /* \"contracts/02_SharedWallet/Allowance.sol\":992:999  _amount */\n      dup4\n      swap3\n        /* \"contracts/02_SharedWallet/Allowance.sol\":973:988  allowance[_who] */\n      swap1\n        /* \"contracts/02_SharedWallet/Allowance.sol\":973:999  allowance[_who] -= _amount */\n      tag_61\n      swap1\n        /* \"contracts/02_SharedWallet/Allowance.sol\":992:999  _amount */\n      dup5\n      swap1\n        /* \"contracts/02_SharedWallet/Allowance.sol\":973:999  allowance[_who] -= _amount */\n      tag_62\n      jump\t// in\n    tag_61:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/02_SharedWallet/Allowance.sol\":892:1007  function reduceAllowance(address _who, uint _amount) public onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2110:2112   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2092:2113   */\n      mstore\n        /* \"#utility.yul\":2149:2151   */\n      0x26\n        /* \"#utility.yul\":2129:2147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2122:2152   */\n      mstore\n        /* \"#utility.yul\":2188:2222   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2168:2186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2161:2223   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2239:2257   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2232:2268   */\n      mstore\n        /* \"#utility.yul\":2285:2304   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_41\n        /* \"#utility.yul\":1908:2310   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/02_SharedWallet/Allowance.sol\":772:884  function addAllowance(address _who, uint _amount) public onlyOwner {... */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_SharedWallet/Allowance.sol\":850:865  allowance[_who] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/02_SharedWallet/Allowance.sol\":850:859  allowance */\n      0x01\n        /* \"contracts/02_SharedWallet/Allowance.sol\":850:865  allowance[_who] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/02_SharedWallet/Allowance.sol\":850:876  allowance[_who] += _amount */\n      dup1\n      sload\n        /* \"contracts/02_SharedWallet/Allowance.sol\":869:876  _amount */\n      dup4\n      swap3\n        /* \"contracts/02_SharedWallet/Allowance.sol\":850:865  allowance[_who] */\n      swap1\n        /* \"contracts/02_SharedWallet/Allowance.sol\":850:876  allowance[_who] += _amount */\n      tag_61\n      swap1\n        /* \"contracts/02_SharedWallet/Allowance.sol\":869:876  _amount */\n      dup5\n      swap1\n        /* \"contracts/02_SharedWallet/Allowance.sol\":850:876  allowance[_who] += _amount */\n      tag_80\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_83:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_87:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_13:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_89:\n        /* \"#utility.yul\":360:389   */\n      tag_90\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_83\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":451:637   */\n    tag_17:\n        /* \"#utility.yul\":510:516   */\n      0x00\n        /* \"#utility.yul\":563:565   */\n      0x20\n        /* \"#utility.yul\":551:560   */\n      dup3\n        /* \"#utility.yul\":542:549   */\n      dup5\n        /* \"#utility.yul\":538:561   */\n      sub\n        /* \"#utility.yul\":534:566   */\n      slt\n        /* \"#utility.yul\":531:583   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":579:580   */\n      0x00\n        /* \"#utility.yul\":576:577   */\n      dup1\n        /* \"#utility.yul\":569:581   */\n      revert\n        /* \"#utility.yul\":531:583   */\n    tag_92:\n        /* \"#utility.yul\":602:631   */\n      tag_93\n        /* \"#utility.yul\":621:630   */\n      dup3\n        /* \"#utility.yul\":602:631   */\n      tag_83\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":592:631   */\n      swap4\n        /* \"#utility.yul\":451:637   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1388   */\n    tag_42:\n        /* \"#utility.yul\":1234:1236   */\n      0x20\n        /* \"#utility.yul\":1216:1237   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1253:1271   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1246:1276   */\n      mstore\n        /* \"#utility.yul\":1312:1346   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1307:1309   */\n      0x40\n        /* \"#utility.yul\":1292:1310   */\n      dup3\n      add\n        /* \"#utility.yul\":1285:1347   */\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x60\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1032:1388   */\n      jump\t// out\n        /* \"#utility.yul\":1646:1773   */\n    tag_84:\n        /* \"#utility.yul\":1707:1717   */\n      0x4e487b71\n        /* \"#utility.yul\":1702:1705   */\n      0xe0\n        /* \"#utility.yul\":1698:1718   */\n      shl\n        /* \"#utility.yul\":1695:1696   */\n      0x00\n        /* \"#utility.yul\":1688:1719   */\n      mstore\n        /* \"#utility.yul\":1738:1742   */\n      0x11\n        /* \"#utility.yul\":1735:1736   */\n      0x04\n        /* \"#utility.yul\":1728:1743   */\n      mstore\n        /* \"#utility.yul\":1762:1766   */\n      0x24\n        /* \"#utility.yul\":1759:1760   */\n      0x00\n        /* \"#utility.yul\":1752:1767   */\n      revert\n        /* \"#utility.yul\":1778:1903   */\n    tag_62:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1846:1847   */\n      dup3\n        /* \"#utility.yul\":1843:1844   */\n      dup3\n        /* \"#utility.yul\":1840:1848   */\n      lt\n        /* \"#utility.yul\":1837:1871   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":1851:1869   */\n      tag_101\n      tag_84\n      jump\t// in\n    tag_101:\n      pop\n        /* \"#utility.yul\":1888:1897   */\n      sub\n      swap1\n        /* \"#utility.yul\":1778:1903   */\n      jump\t// out\n        /* \"#utility.yul\":2315:2443   */\n    tag_80:\n        /* \"#utility.yul\":2355:2358   */\n      0x00\n        /* \"#utility.yul\":2386:2387   */\n      dup3\n        /* \"#utility.yul\":2382:2388   */\n      not\n        /* \"#utility.yul\":2379:2380   */\n      dup3\n        /* \"#utility.yul\":2376:2389   */\n      gt\n        /* \"#utility.yul\":2373:2412   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":2392:2410   */\n      tag_105\n      tag_84\n      jump\t// in\n    tag_105:\n      pop\n        /* \"#utility.yul\":2428:2437   */\n      add\n      swap1\n        /* \"#utility.yul\":2315:2443   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f20d6e874f47e819c5d03053233b3565a0bc9eada6ddd5dc257703f0489e840d64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_132": {
									"entryPoint": null,
									"id": 132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_225": {
									"entryPoint": null,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_212": {
									"entryPoint": 31,
									"id": 212,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104b18061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d25780638fdf08df146100ed578063f2fde38b14610100578063f3c40c4b1461011357600080fd5b8063310ec4a7146100825780633e5beab914610097578063715018a6146100ca575b600080fd5b6100956100903660046103b5565b610126565b005b6100b76100a53660046103df565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6100956101cb565b6000546040516001600160a01b0390911681526020016100c1565b6100956100fb3660046103b5565b610201565b61009561010e3660046103df565b61025c565b6100956101213660046103b5565b6102f7565b6000546001600160a01b031633146101595760405162461bcd60e51b815260040161015090610401565b60405180910390fd5b6001600160a01b0382166000818152600160209081526040918290205482519081529081018490523392917f3691d1a86d99355e52b689ca70a7bdf6d80763237a6aa06e5fa43964eac7244b910160405180910390a36001600160a01b03909116600090815260016020526040902055565b6000546001600160a01b031633146101f55760405162461bcd60e51b815260040161015090610401565b6101ff6000610349565b565b6000546001600160a01b0316331461022b5760405162461bcd60e51b815260040161015090610401565b6001600160a01b0382166000908152600160205260408120805483929061025390849061044c565b90915550505050565b6000546001600160a01b031633146102865760405162461bcd60e51b815260040161015090610401565b6001600160a01b0381166102eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610150565b6102f481610349565b50565b6000546001600160a01b031633146103215760405162461bcd60e51b815260040161015090610401565b6001600160a01b03821660009081526001602052604081208054839290610253908490610463565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103b057600080fd5b919050565b600080604083850312156103c857600080fd5b6103d183610399565b946020939093013593505050565b6000602082840312156103f157600080fd5b6103fa82610399565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561045e5761045e610436565b500390565b6000821982111561047657610476610436565b50019056fea2646970667358221220f20d6e874f47e819c5d03053233b3565a0bc9eada6ddd5dc257703f0489e840d64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x4B1 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x8FDF08DF EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF3C40C4B EQ PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x310EC4A7 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC1 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH2 0x95 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x159 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP3 SWAP2 PUSH32 0x3691D1A86D99355E52B689CA70A7BDF6D80763237A6AA06E5FA43964EAC7244B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x0 PUSH2 0x349 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x22B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x253 SWAP1 DUP5 SWAP1 PUSH2 0x44C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x286 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x349 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x253 SWAP1 DUP5 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D1 DUP4 PUSH2 0x399 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FA DUP3 PUSH2 0x399 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x45E JUMPI PUSH2 0x45E PUSH2 0x436 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x476 JUMPI PUSH2 0x476 PUSH2 0x436 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xD PUSH15 0x874F47E819C5D03053233B3565A0BC SWAP15 0xAD 0xA6 0xDD 0xD5 0xDC 0x25 PUSH24 0x3F0489E840D64736F6C634300080D003300000000000000 ",
							"sourceMap": "168:999:0:-:0;;;;;;;;;;;;-1:-1:-1;921:32:1;719:10:2;921:18:1;:32::i;:::-;168:999:0;;2270:187:1;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;168:999:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_225": {
									"entryPoint": null,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_212": {
									"entryPoint": 841,
									"id": 212,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAllowance_72": {
									"entryPoint": 759,
									"id": 72,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reduceAllowance_88": {
									"entryPoint": 513,
									"id": 88,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_169": {
									"entryPoint": 459,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAllowance_56": {
									"entryPoint": 294,
									"id": 56,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_192": {
									"entryPoint": 604,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2445:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:3"
															},
															"nodeType": "YulIf",
															"src": "111:70:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "14:173:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:3"
															},
															"nodeType": "YulIf",
															"src": "289:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:3",
														"type": ""
													}
												],
												"src": "192:254:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:116:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "567:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "579:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "569:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "569:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "569:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "542:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "551:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "538:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "538:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "534:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:32:3"
															},
															"nodeType": "YulIf",
															"src": "531:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "592:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "621:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "602:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "592:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "487:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "498:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "510:6:3",
														"type": ""
													}
												],
												"src": "451:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "743:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "753:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "765:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "776:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "761:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "761:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "753:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "795:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "806:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "788:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "788:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "712:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "723:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "734:4:3",
														"type": ""
													}
												],
												"src": "642:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "925:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "935:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "947:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "935:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "977:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "992:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1008:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1013:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1004:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1004:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1017:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1000:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1000:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "988:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "894:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "905:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "916:4:3",
														"type": ""
													}
												],
												"src": "824:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1206:182:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1223:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1234:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1216:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1216:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1257:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1268:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1253:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1273:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1246:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1246:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1296:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1307:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1292:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1292:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1312:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1285:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1285:62:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1183:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1197:4:3",
														"type": ""
													}
												],
												"src": "1032:356:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1522:119:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1532:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1544:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1555:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1540:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1540:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1532:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1574:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1585:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1567:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1567:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1567:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1623:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1628:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1601:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1483:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1494:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1502:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1513:4:3",
														"type": ""
													}
												],
												"src": "1393:248:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1678:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1695:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1702:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1707:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1698:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1688:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1688:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1738:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1728:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1728:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1728:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1759:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1762:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1646:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1827:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1849:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1851:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1851:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1851:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1843:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1846:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1840:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1840:8:3"
															},
															"nodeType": "YulIf",
															"src": "1837:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1880:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1892:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1895:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1888:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1880:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1809:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1812:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1818:4:3",
														"type": ""
													}
												],
												"src": "1778:125:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:228:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2099:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2110:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2133:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2144:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2129:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2129:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2149:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2122:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2122:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2122:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2172:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2183:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2168:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2168:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2188:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2161:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2161:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2161:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2243:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2254:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2239:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2239:18:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2259:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2232:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2232:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2277:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2289:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2300:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2285:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2285:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2277:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2059:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2073:4:3",
														"type": ""
													}
												],
												"src": "1908:402:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2363:80:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2390:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2392:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2392:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2392:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2379:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2386:1:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2382:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2382:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2376:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:13:3"
															},
															"nodeType": "YulIf",
															"src": "2373:39:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2421:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2432:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2435:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2428:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2421:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2346:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2349:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2355:3:3",
														"type": ""
													}
												],
												"src": "2315:128:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d25780638fdf08df146100ed578063f2fde38b14610100578063f3c40c4b1461011357600080fd5b8063310ec4a7146100825780633e5beab914610097578063715018a6146100ca575b600080fd5b6100956100903660046103b5565b610126565b005b6100b76100a53660046103df565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6100956101cb565b6000546040516001600160a01b0390911681526020016100c1565b6100956100fb3660046103b5565b610201565b61009561010e3660046103df565b61025c565b6100956101213660046103b5565b6102f7565b6000546001600160a01b031633146101595760405162461bcd60e51b815260040161015090610401565b60405180910390fd5b6001600160a01b0382166000818152600160209081526040918290205482519081529081018490523392917f3691d1a86d99355e52b689ca70a7bdf6d80763237a6aa06e5fa43964eac7244b910160405180910390a36001600160a01b03909116600090815260016020526040902055565b6000546001600160a01b031633146101f55760405162461bcd60e51b815260040161015090610401565b6101ff6000610349565b565b6000546001600160a01b0316331461022b5760405162461bcd60e51b815260040161015090610401565b6001600160a01b0382166000908152600160205260408120805483929061025390849061044c565b90915550505050565b6000546001600160a01b031633146102865760405162461bcd60e51b815260040161015090610401565b6001600160a01b0381166102eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610150565b6102f481610349565b50565b6000546001600160a01b031633146103215760405162461bcd60e51b815260040161015090610401565b6001600160a01b03821660009081526001602052604081208054839290610253908490610463565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103b057600080fd5b919050565b600080604083850312156103c857600080fd5b6103d183610399565b946020939093013593505050565b6000602082840312156103f157600080fd5b6103fa82610399565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561045e5761045e610436565b500390565b6000821982111561047657610476610436565b50019056fea2646970667358221220f20d6e874f47e819c5d03053233b3565a0bc9eada6ddd5dc257703f0489e840d64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x8FDF08DF EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF3C40C4B EQ PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x310EC4A7 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC1 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH2 0x95 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x159 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP3 SWAP2 PUSH32 0x3691D1A86D99355E52B689CA70A7BDF6D80763237A6AA06E5FA43964EAC7244B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x0 PUSH2 0x349 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x22B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x253 SWAP1 DUP5 SWAP1 PUSH2 0x44C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x286 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x349 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x253 SWAP1 DUP5 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D1 DUP4 PUSH2 0x399 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FA DUP3 PUSH2 0x399 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x45E JUMPI PUSH2 0x45E PUSH2 0x436 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x476 JUMPI PUSH2 0x476 PUSH2 0x436 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xD PUSH15 0x874F47E819C5D03053233B3565A0BC SWAP15 0xAD 0xA6 0xDD 0xD5 0xDC 0x25 PUSH24 0x3F0489E840D64736F6C634300080D003300000000000000 ",
							"sourceMap": "168:999:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;577:187;;;;;;:::i;:::-;;:::i;:::-;;523:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;788:25:3;;;776:2;761:18;523:41:0;;;;;;;;1668:101:1;;;:::i;1036:85::-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:1;;;970:51:3;;958:2;943:18;1036:85:1;824:203:3;892:115:0;;;;;;:::i;:::-;;:::i;1918:198:1:-;;;;;;:::i;:::-;;:::i;772:112:0:-;;;;;;:::i;:::-;;:::i;577:187::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:2;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;660:60:0;::::1;695:15;::::0;;;:9:::1;:15;::::0;;;;;;;;;660:60;;1567:25:3;;;1608:18;;;1601:34;;;683:10:0::1;::::0;660:60;::::1;::::0;1540:18:3;660:60:0::1;;;;;;;-1:-1:-1::0;;;;;731:15:0;;::::1;;::::0;;;:9:::1;:15;::::0;;;;:25;577:187::o;1668:101:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:2;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;892:115:0:-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:2;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;973:15:0;::::1;;::::0;;;:9:::1;:15;::::0;;;;:26;;992:7;;973:15;:26:::1;::::0;992:7;;973:26:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;892:115:0:o;1918:198:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:2;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:1;;2110:2:3;1998:73:1::1;::::0;::::1;2092:21:3::0;2149:2;2129:18;;;2122:30;2188:34;2168:18;;;2161:62;-1:-1:-1;;;2239:18:3;;;2232:36;2285:19;;1998:73:1::1;1908:402:3::0;1998:73:1::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;772:112:0:-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:2;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;850:15:0;::::1;;::::0;;;:9:::1;:15;::::0;;;;:26;;869:7;;850:15;:26:::1;::::0;869:7;;850:26:::1;:::i;2270:187:1:-:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:173:3:-;82:20;;-1:-1:-1;;;;;131:31:3;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:3:o;451:186::-;510:6;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;602:29;621:9;602:29;:::i;:::-;592:39;451:186;-1:-1:-1;;;451:186:3:o;1032:356::-;1234:2;1216:21;;;1253:18;;;1246:30;1312:34;1307:2;1292:18;;1285:62;1379:2;1364:18;;1032:356::o;1646:127::-;1707:10;1702:3;1698:20;1695:1;1688:31;1738:4;1735:1;1728:15;1762:4;1759:1;1752:15;1778:125;1818:4;1846:1;1843;1840:8;1837:34;;;1851:18;;:::i;:::-;-1:-1:-1;1888:9:3;;1778:125::o;2315:128::-;2355:3;2386:1;2382:6;2379:1;2376:13;2373:39;;;2392:18;;:::i;:::-;-1:-1:-1;2428:9:3;;2315:128::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "240200",
								"executionCost": "26122",
								"totalCost": "266322"
							},
							"external": {
								"addAllowance(address,uint256)": "26918",
								"allowance(address)": "2531",
								"owner()": "2301",
								"reduceAllowance(address,uint256)": "26871",
								"renounceOwnership()": "28159",
								"setAllowance(address,uint256)": "28948",
								"transferOwnership(address)": "28353"
							},
							"internal": {
								"isOwner()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 1167,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 1167,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f20d6e874f47e819c5d03053233b3565a0bc9eada6ddd5dc257703f0489e840d64736f6c634300080d0033",
									".code": [
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "8FDF08DF"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "F3C40C4B"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "310EC4A7"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "3E5BEAB9"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1167,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 577,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 764,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 776,
											"end": 778,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 523,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 564,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 824,
											"end": 1027,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 772,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 772,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 772,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 772,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 772,
											"end": 884,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 772,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 772,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 772,
											"end": 884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 772,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 772,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 772,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 772,
											"end": 884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 577,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 660,
											"end": 720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 695,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 695,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 695,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 695,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 695,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 710,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 695,
											"end": 710,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1567,
											"end": 1592,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1567,
											"end": 1592,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1567,
											"end": 1592,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1635,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1635,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 683,
											"end": 693,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 683,
											"end": 693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "3691D1A86D99355E52B689CA70A7BDF6D80763237A6AA06E5FA43964EAC7244B"
										},
										{
											"begin": 660,
											"end": 720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 660,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 720,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 731,
											"end": 746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 731,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 731,
											"end": 740,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 731,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 731,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 746,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 731,
											"end": 756,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 764,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 973,
											"end": 988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 973,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 973,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 973,
											"end": 988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 973,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 973,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 973,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 973,
											"end": 988,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 973,
											"end": 999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 999,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 992,
											"end": 999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 992,
											"end": 999,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 973,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 999,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 992,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 973,
											"end": 999,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 892,
											"end": 1007,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2112,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2149,
											"end": 2151,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2152,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2222,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2168,
											"end": 2186,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2168,
											"end": 2186,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2186,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2285,
											"end": 2304,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2285,
											"end": 2304,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1908,
											"end": 2310,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 772,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 772,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 850,
											"end": 865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 850,
											"end": 865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 850,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 850,
											"end": 865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 850,
											"end": 865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 850,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 850,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 850,
											"end": 865,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 850,
											"end": 876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 850,
											"end": 876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 869,
											"end": 876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 869,
											"end": 876,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 850,
											"end": 865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 850,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 850,
											"end": 876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 869,
											"end": 876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 869,
											"end": 876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 850,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 850,
											"end": 876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 451,
											"end": 637,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 451,
											"end": 637,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 510,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 565,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 551,
											"end": 560,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 542,
											"end": 549,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 538,
											"end": 561,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 534,
											"end": 566,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 531,
											"end": 583,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 531,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 531,
											"end": 583,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 579,
											"end": 580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 577,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 569,
											"end": 581,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 531,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 531,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 602,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 621,
											"end": 630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 602,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 602,
											"end": 631,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 602,
											"end": 631,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 602,
											"end": 631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 592,
											"end": 631,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 451,
											"end": 637,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 451,
											"end": 637,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1032,
											"end": 1388,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1032,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1216,
											"end": 1237,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1237,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1237,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1276,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1346,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1307,
											"end": 1309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1292,
											"end": 1310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1285,
											"end": 1347,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1388,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1646,
											"end": 1773,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1646,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1702,
											"end": 1705,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1719,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1728,
											"end": 1743,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1762,
											"end": 1766,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1767,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1903,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1778,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1844,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1871,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1837,
											"end": 1871,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 1897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1903,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2315,
											"end": 2443,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2315,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2389,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2412,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2373,
											"end": 2412,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2392,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2392,
											"end": 2410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2410,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2392,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2428,
											"end": 2437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2428,
											"end": 2437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2443,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addAllowance(address,uint256)": "f3c40c4b",
							"allowance(address)": "3e5beab9",
							"owner()": "8da5cb5b",
							"reduceAllowance(address,uint256)": "8fdf08df",
							"renounceOwnership()": "715018a6",
							"setAllowance(address,uint256)": "310ec4a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_forWho\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_byWhom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newAmount\",\"type\":\"uint256\"}],\"name\":\"AllowanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reduceAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/02_SharedWallet/Allowance.sol\":\"Allowance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/02_SharedWallet/Allowance.sol\":{\"keccak256\":\"0xee7cc72566023beb4b3e4fbeab7c9a98828ac739390ac646bc75e82cfa252cdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d86a25ea381661bc167a2d8840b2624824c6917542b17dbc5b9b55d9d882a989\",\"dweb:/ipfs/QmZDG4r8WgmxbjAA1CwZwqWzcJjAn6onzygjf13KAsJD98\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 116,
								"contract": "contracts/02_SharedWallet/Allowance.sol:Allowance",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 30,
								"contract": "contracts/02_SharedWallet/Allowance.sol:Allowance",
								"label": "allowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 116,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/02_SharedWallet/Allowance.sol": {
				"ast": {
					"absolutePath": "contracts/02_SharedWallet/Allowance.sol",
					"exportedSymbols": {
						"Allowance": [
							108
						],
						"Context": [
							235
						],
						"Ownable": [
							213
						]
					},
					"id": 109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 109,
							"sourceUnit": 214,
							"src": "59:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 213,
										"src": "191:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "191:7:0"
								}
							],
							"canonicalName": "Allowance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 108,
							"linearizedBaseContracts": [
								108,
								213,
								235
							],
							"name": "Allowance",
							"nameLocation": "177:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "3691d1a86d99355e52b689ca70a7bdf6d80763237a6aa06e5fa43964eac7244b",
									"id": 14,
									"name": "AllowanceChanged",
									"nameLocation": "218:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "_forWho",
												"nameLocation": "251:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "235:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "_byWhom",
												"nameLocation": "306:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "290:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "_oldAmount",
												"nameLocation": "350:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "345:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newAmount",
												"nameLocation": "397:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "392:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "392:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:174:0"
									},
									"src": "212:197:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "468:47:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 19,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "486:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "486:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "497:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "497:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "486:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 18,
												"id": 24,
												"nodeType": "Return",
												"src": "479:28:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "430:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "437:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "462:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "462:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:6:0"
									},
									"scope": 108,
									"src": "421:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3e5beab9",
									"id": 30,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "555:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "523:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 29,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "531:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "523:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 28,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "542:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "644:120:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 40,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "677:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 41,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "683:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "683:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 43,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "695:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 45,
															"indexExpression": {
																"id": 44,
																"name": "_who",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "705:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "695:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 46,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "712:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 39,
														"name": "AllowanceChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "660:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "660:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "EmitStatement",
												"src": "655:65:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 49,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "731:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 51,
														"indexExpression": {
															"id": 50,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "741:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "731:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 52,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "731:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "731:25:0"
											}
										]
									},
									"functionSelector": "310ec4a7",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 37,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 36,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "634:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "634:9:0"
										}
									],
									"name": "setAllowance",
									"nameLocation": "586:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "607:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "599:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "618:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "613:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "613:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:28:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "644:0:0"
									},
									"scope": 108,
									"src": "577:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "839:45:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 65,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "850:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 67,
														"indexExpression": {
															"id": 66,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "860:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "850:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 68,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "869:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "850:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "850:26:0"
											}
										]
									},
									"functionSelector": "f3c40c4b",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 63,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 62,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "829:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "829:9:0"
										}
									],
									"name": "addAllowance",
									"nameLocation": "781:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "802:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "794:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:28:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:0:0"
									},
									"scope": 108,
									"src": "772:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "962:45:0",
										"statements": [
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 81,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "973:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 83,
														"indexExpression": {
															"id": 82,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "983:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "973:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 84,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "973:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "973:26:0"
											}
										]
									},
									"functionSelector": "8fdf08df",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 79,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 78,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "952:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "952:9:0"
										}
									],
									"name": "reduceAllowance",
									"nameLocation": "901:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "925:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "917:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "931:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:28:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:0"
									},
									"scope": 108,
									"src": "892:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1055:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 93,
																	"name": "isOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1074:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1074:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 95,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "1087:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 98,
																	"indexExpression": {
																		"expression": {
																			"id": 96,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1097:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 97,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1097:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1087:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 99,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "1112:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1087:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1074:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420616c6c6f77656421",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1121:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9f18e7152ecb482b05bc745430c2e40c72dfba99431368b9d2fc7e8b7ebead8",
																"typeString": "literal_string \"You are not allowed!\""
															},
															"value": "You are not allowed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9f18e7152ecb482b05bc745430c2e40c72dfba99431368b9d2fc7e8b7ebead8",
																"typeString": "literal_string \"You are not allowed!\""
															}
														],
														"id": 92,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1066:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1066:78:0"
											},
											{
												"id": 105,
												"nodeType": "PlaceholderStatement",
												"src": "1155:1:0"
											}
										]
									},
									"id": 107,
									"name": "ownerOrAllowed",
									"nameLocation": "1026:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1046:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1041:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1041:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:14:0"
									},
									"src": "1017:147:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 109,
							"src": "168:999:0",
							"usedErrors": []
						}
					],
					"src": "32:1135:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							235
						],
						"Ownable": [
							213
						]
					},
					"id": 214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 214,
							"sourceUnit": 236,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 113,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 235,
										"src": "668:7:1"
									},
									"id": 114,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 213,
							"linearizedBaseContracts": [
								213,
								235
							],
							"name": "Ownable",
							"nameLocation": "657:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 116,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 213,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 115,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 122,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 127,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 132,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 213,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 138,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 137,
												"id": 139,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 213,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 145,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 147,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 155,
									"name": "onlyOwner",
									"nameLocation": "1218:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 162,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 213,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 178,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 179,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 175,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 213,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 198,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"id": 200,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 202,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 203,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 207,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 208,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 206,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 213,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 214,
							"src": "639:1820:1",
							"usedErrors": []
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							235
						]
					},
					"id": 236,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 216,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 235,
							"linearizedBaseContracts": [
								235
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 221,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 220,
												"id": 223,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 235,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 230,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 229,
												"id": 232,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 235,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 236,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			}
		}
	}
}