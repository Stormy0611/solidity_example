{
	"id": "99d382b5de5f3f9c349430db783e6b66",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/02_simple/SharedWallet.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity 0.8.1;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\n\r\ncontract SharedWallet is Ownable {\r\n    \r\n    function isOwner() internal view returns(bool) {\r\n        return owner() == msg.sender;\r\n    }\r\n\r\n    mapping(address => uint) public allowance;\r\n    \r\n    function setAllowance(address _who, uint _amount) public onlyOwner {\r\n        allowance[_who] += _amount;\r\n    }\r\n\r\n    function addAllowance(address _who, uint _amount) public onlyOwner {\r\n        allowance[_who] += _amount;\r\n    }\r\n\r\n    function reduceAllowance(address _who, uint _amount) public onlyOwner {\r\n        allowance[_who] -= _amount;\r\n    }\r\n\r\n\r\n    modifier ownerOrAllowed(uint _amount) {\r\n        require(isOwner() || allowance[msg.sender] >= _amount, \"You are not allowed!\");\r\n        _;\r\n    }\r\n\r\n    function withdrawMoney(address payable _to, uint _amount) public ownerOrAllowed(_amount) {\r\n        require(_amount <= address(this).balance, \"Contract doesn't own enough money\");\r\n        if(!isOwner()) {\r\n            reduceAllowance(msg.sender, _amount);\r\n        }\r\n        _to.transfer(_amount);\r\n    }\r\n\r\n    receive() external payable {\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/02_simple/SharedWallet.sol": {
				"SharedWallet": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "reduceAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/02_simple/SharedWallet.sol\":167:1241  contract SharedWallet is Ownable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:950  _msgSender */\n  tag_6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/02_simple/SharedWallet.sol\":167:1241  contract SharedWallet is Ownable {\r... */\n  jump(tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/02_simple/SharedWallet.sol\":167:1241  contract SharedWallet is Ownable {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/02_simple/SharedWallet.sol\":167:1241  contract SharedWallet is Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8fdf08df\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8fdf08df\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf274c897\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf3c40c4b\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x310ec4a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e5beab9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/02_simple/SharedWallet.sol\":369:481  function setAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/02_simple/SharedWallet.sol\":315:356  mapping(address => uint) public allowance */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_15\n      tag_28\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"contracts/02_simple/SharedWallet.sol\":609:724  function reduceAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_15\n      tag_36\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n        /* \"contracts/02_simple/SharedWallet.sol\":889:1195  function withdrawMoney(address payable _to, uint _amount) public ownerOrAllowed(_amount) {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_15\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_15\n      tag_45\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"contracts/02_simple/SharedWallet.sol\":369:481  function setAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_52\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_54\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":447:462  allowance[_who] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/02_simple/SharedWallet.sol\":447:456  allowance */\n      0x01\n        /* \"contracts/02_simple/SharedWallet.sol\":447:462  allowance[_who] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/02_simple/SharedWallet.sol\":447:473  allowance[_who] += _amount */\n      dup1\n      sload\n        /* \"contracts/02_simple/SharedWallet.sol\":466:473  _amount */\n      dup4\n      swap3\n        /* \"contracts/02_simple/SharedWallet.sol\":447:462  allowance[_who] */\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":447:473  allowance[_who] += _amount */\n      tag_59\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":466:473  _amount */\n      dup5\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":447:473  allowance[_who] += _amount */\n      tag_60\n      jump\t// in\n    tag_59:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/02_simple/SharedWallet.sol\":369:481  function setAllowance(address _who, uint _amount) public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/02_simple/SharedWallet.sol\":315:356  mapping(address => uint) public allowance */\n    tag_23:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/02_simple/SharedWallet.sol\":609:724  function reduceAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":690:705  allowance[_who] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/02_simple/SharedWallet.sol\":690:699  allowance */\n      0x01\n        /* \"contracts/02_simple/SharedWallet.sol\":690:705  allowance[_who] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/02_simple/SharedWallet.sol\":690:716  allowance[_who] -= _amount */\n      dup1\n      sload\n        /* \"contracts/02_simple/SharedWallet.sol\":709:716  _amount */\n      dup4\n      swap3\n        /* \"contracts/02_simple/SharedWallet.sol\":690:705  allowance[_who] */\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":690:716  allowance[_who] -= _amount */\n      tag_59\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":709:716  _amount */\n      dup5\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":690:716  allowance[_who] -= _amount */\n      tag_77\n      jump\t// in\n        /* \"contracts/02_simple/SharedWallet.sol\":889:1195  function withdrawMoney(address payable _to, uint _amount) public ownerOrAllowed(_amount) {\r... */\n    tag_42:\n        /* \"contracts/02_simple/SharedWallet.sol\":969:976  _amount */\n      dup1\n        /* \"contracts/02_simple/SharedWallet.sol\":791:800  isOwner() */\n      tag_79\n        /* \"contracts/02_simple/SharedWallet.sol\":791:798  isOwner */\n      tag_80\n        /* \"contracts/02_simple/SharedWallet.sol\":791:800  isOwner() */\n      jump\t// in\n    tag_79:\n        /* \"contracts/02_simple/SharedWallet.sol\":791:836  isOwner() || allowance[msg.sender] >= _amount */\n      dup1\n      tag_81\n      jumpi\n      pop\n        /* \"contracts/02_simple/SharedWallet.sol\":814:824  msg.sender */\n      caller\n        /* \"contracts/02_simple/SharedWallet.sol\":804:825  allowance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/02_simple/SharedWallet.sol\":804:813  allowance */\n      0x01\n        /* \"contracts/02_simple/SharedWallet.sol\":804:825  allowance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/02_simple/SharedWallet.sol\":804:836  allowance[msg.sender] >= _amount */\n      dup2\n      gt\n      iszero\n        /* \"contracts/02_simple/SharedWallet.sol\":791:836  isOwner() || allowance[msg.sender] >= _amount */\n    tag_81:\n        /* \"contracts/02_simple/SharedWallet.sol\":783:861  require(isOwner() || allowance[msg.sender] >= _amount, \"You are not allowed!\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_84\n      jump\t// in\n    tag_82:\n        /* \"contracts/02_simple/SharedWallet.sol\":1008:1029  address(this).balance */\n      selfbalance\n        /* \"contracts/02_simple/SharedWallet.sol\":997:1004  _amount */\n      dup3\n        /* \"contracts/02_simple/SharedWallet.sol\":997:1029  _amount <= address(this).balance */\n      gt\n      iszero\n        /* \"contracts/02_simple/SharedWallet.sol\":989:1067  require(_amount <= address(this).balance, \"Contract doesn't own enough money\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_88\n      jump\t// in\n    tag_86:\n        /* \"contracts/02_simple/SharedWallet.sol\":1082:1091  isOwner() */\n      tag_89\n        /* \"contracts/02_simple/SharedWallet.sol\":1082:1089  isOwner */\n      tag_80\n        /* \"contracts/02_simple/SharedWallet.sol\":1082:1091  isOwner() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/02_simple/SharedWallet.sol\":1078:1156  if(!isOwner()) {\r... */\n      tag_91\n      jumpi\n        /* \"contracts/02_simple/SharedWallet.sol\":1108:1144  reduceAllowance(msg.sender, _amount) */\n      tag_91\n        /* \"contracts/02_simple/SharedWallet.sol\":1124:1134  msg.sender */\n      caller\n        /* \"contracts/02_simple/SharedWallet.sol\":1136:1143  _amount */\n      dup4\n        /* \"contracts/02_simple/SharedWallet.sol\":1108:1123  reduceAllowance */\n      tag_37\n        /* \"contracts/02_simple/SharedWallet.sol\":1108:1144  reduceAllowance(msg.sender, _amount) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/02_simple/SharedWallet.sol\":1166:1187  _to.transfer(_amount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":1166:1178  _to.transfer */\n      dup5\n      and\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":1166:1187  _to.transfer(_amount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":1179:1186  _amount */\n      dup5\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":1166:1187  _to.transfer(_amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/02_simple/SharedWallet.sol\":1179:1186  _amount */\n      dup6\n        /* \"contracts/02_simple/SharedWallet.sol\":1166:1178  _to.transfer */\n      dup9\n        /* \"contracts/02_simple/SharedWallet.sol\":1166:1187  _to.transfer(_amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n        /* \"contracts/02_simple/SharedWallet.sol\":889:1195  function withdrawMoney(address payable _to, uint _amount) public ownerOrAllowed(_amount) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_102\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_103\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/02_simple/SharedWallet.sol\":213:307  function isOwner() internal view returns(bool) {\r... */\n    tag_80:\n        /* \"contracts/02_simple/SharedWallet.sol\":254:258  bool */\n      0x00\n        /* \"contracts/02_simple/SharedWallet.sol\":289:299  msg.sender */\n      caller\n        /* \"contracts/02_simple/SharedWallet.sol\":278:285  owner() */\n      tag_114\n        /* \"contracts/02_simple/SharedWallet.sol\":278:283  owner */\n      tag_31\n        /* \"contracts/02_simple/SharedWallet.sol\":278:285  owner() */\n      jump\t// in\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":278:299  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/02_simple/SharedWallet.sol\":271:299  return owner() == msg.sender */\n      swap1\n      pop\n        /* \"contracts/02_simple/SharedWallet.sol\":213:307  function isOwner() internal view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:273   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_117:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:243   */\n      tag_118\n        /* \"#utility.yul\":237:242   */\n      dup2\n        /* \"#utility.yul\":210:243   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":262:267   */\n      swap4\n        /* \"#utility.yul\":84:273   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":278:613   */\n    tag_41:\n      0x00\n      dup1\n        /* \"#utility.yul\":415:417   */\n      0x40\n        /* \"#utility.yul\":403:412   */\n      dup4\n        /* \"#utility.yul\":394:401   */\n      dup6\n        /* \"#utility.yul\":390:413   */\n      sub\n        /* \"#utility.yul\":386:418   */\n      slt\n        /* \"#utility.yul\":383:385   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":436:442   */\n      dup1\n        /* \"#utility.yul\":428:434   */\n      dup2\n        /* \"#utility.yul\":421:443   */\n      revert\n        /* \"#utility.yul\":383:385   */\n    tag_121:\n        /* \"#utility.yul\":480:489   */\n      dup3\n        /* \"#utility.yul\":467:490   */\n      calldataload\n        /* \"#utility.yul\":499:532   */\n      tag_122\n        /* \"#utility.yul\":526:531   */\n      dup2\n        /* \"#utility.yul\":499:532   */\n      tag_119\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":551:556   */\n      swap5\n        /* \"#utility.yul\":603:605   */\n      0x20\n        /* \"#utility.yul\":588:606   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":575:607   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":373:613   */\n      jump\t// out\n        /* \"#utility.yul\":618:945   */\n    tag_17:\n      0x00\n      dup1\n        /* \"#utility.yul\":747:749   */\n      0x40\n        /* \"#utility.yul\":735:744   */\n      dup4\n        /* \"#utility.yul\":726:733   */\n      dup6\n        /* \"#utility.yul\":722:745   */\n      sub\n        /* \"#utility.yul\":718:750   */\n      slt\n        /* \"#utility.yul\":715:717   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":768:774   */\n      dup2\n        /* \"#utility.yul\":760:766   */\n      dup3\n        /* \"#utility.yul\":753:775   */\n      revert\n        /* \"#utility.yul\":950:1153   */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1114:1146   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1096:1147   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1084:1086   */\n      0x20\n        /* \"#utility.yul\":1069:1087   */\n      add\n      swap1\n        /* \"#utility.yul\":1051:1153   */\n      jump\t// out\n        /* \"#utility.yul\":1158:1560   */\n    tag_102:\n        /* \"#utility.yul\":1360:1362   */\n      0x20\n        /* \"#utility.yul\":1342:1363   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1399:1401   */\n      0x26\n        /* \"#utility.yul\":1379:1397   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1372:1402   */\n      mstore\n        /* \"#utility.yul\":1438:1472   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1433:1435   */\n      0x40\n        /* \"#utility.yul\":1418:1436   */\n      dup3\n      add\n        /* \"#utility.yul\":1411:1473   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1504:1506   */\n      0x60\n        /* \"#utility.yul\":1489:1507   */\n      dup3\n      add\n        /* \"#utility.yul\":1482:1518   */\n      mstore\n        /* \"#utility.yul\":1550:1553   */\n      0x80\n        /* \"#utility.yul\":1535:1554   */\n      add\n      swap1\n        /* \"#utility.yul\":1332:1560   */\n      jump\t// out\n        /* \"#utility.yul\":1565:1962   */\n    tag_88:\n        /* \"#utility.yul\":1767:1769   */\n      0x20\n        /* \"#utility.yul\":1749:1770   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1806:1808   */\n      0x21\n        /* \"#utility.yul\":1786:1804   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1779:1809   */\n      mstore\n        /* \"#utility.yul\":1845:1879   */\n      0x436f6e747261637420646f65736e2774206f776e20656e6f756768206d6f6e65\n        /* \"#utility.yul\":1840:1842   */\n      0x40\n        /* \"#utility.yul\":1825:1843   */\n      dup3\n      add\n        /* \"#utility.yul\":1818:1880   */\n      mstore\n      shl(0xf8, 0x79)\n        /* \"#utility.yul\":1911:1913   */\n      0x60\n        /* \"#utility.yul\":1896:1914   */\n      dup3\n      add\n        /* \"#utility.yul\":1889:1920   */\n      mstore\n        /* \"#utility.yul\":1952:1955   */\n      0x80\n        /* \"#utility.yul\":1937:1956   */\n      add\n      swap1\n        /* \"#utility.yul\":1739:1962   */\n      jump\t// out\n        /* \"#utility.yul\":1967:2323   */\n    tag_57:\n        /* \"#utility.yul\":2169:2171   */\n      0x20\n        /* \"#utility.yul\":2151:2172   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2188:2206   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2181:2211   */\n      mstore\n        /* \"#utility.yul\":2247:2281   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2242:2244   */\n      0x40\n        /* \"#utility.yul\":2227:2245   */\n      dup3\n      add\n        /* \"#utility.yul\":2220:2282   */\n      mstore\n        /* \"#utility.yul\":2314:2316   */\n      0x60\n        /* \"#utility.yul\":2299:2317   */\n      add\n      swap1\n        /* \"#utility.yul\":2141:2323   */\n      jump\t// out\n        /* \"#utility.yul\":2328:2672   */\n    tag_84:\n        /* \"#utility.yul\":2530:2532   */\n      0x20\n        /* \"#utility.yul\":2512:2533   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2569:2571   */\n      0x14\n        /* \"#utility.yul\":2549:2567   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2542:2572   */\n      mstore\n      shl(0x60, 0x596f7520617265206e6f7420616c6c6f77656421)\n        /* \"#utility.yul\":2603:2605   */\n      0x40\n        /* \"#utility.yul\":2588:2606   */\n      dup3\n      add\n        /* \"#utility.yul\":2581:2631   */\n      mstore\n        /* \"#utility.yul\":2663:2665   */\n      0x60\n        /* \"#utility.yul\":2648:2666   */\n      add\n      swap1\n        /* \"#utility.yul\":2502:2672   */\n      jump\t// out\n        /* \"#utility.yul\":2677:2854   */\n    tag_25:\n        /* \"#utility.yul\":2823:2848   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2811:2813   */\n      0x20\n        /* \"#utility.yul\":2796:2814   */\n      add\n      swap1\n        /* \"#utility.yul\":2778:2854   */\n      jump\t// out\n        /* \"#utility.yul\":2859:2987   */\n    tag_60:\n      0x00\n        /* \"#utility.yul\":2930:2931   */\n      dup3\n        /* \"#utility.yul\":2926:2932   */\n      not\n        /* \"#utility.yul\":2923:2924   */\n      dup3\n        /* \"#utility.yul\":2920:2933   */\n      gt\n        /* \"#utility.yul\":2917:2919   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":2936:2954   */\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      pop\n        /* \"#utility.yul\":2972:2981   */\n      add\n      swap1\n        /* \"#utility.yul\":2907:2987   */\n      jump\t// out\n        /* \"#utility.yul\":2992:3117   */\n    tag_77:\n      0x00\n        /* \"#utility.yul\":3060:3061   */\n      dup3\n        /* \"#utility.yul\":3057:3058   */\n      dup3\n        /* \"#utility.yul\":3054:3062   */\n      lt\n        /* \"#utility.yul\":3051:3053   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":3065:3083   */\n      tag_138\n      tag_135\n      jump\t// in\n    tag_138:\n      pop\n        /* \"#utility.yul\":3102:3111   */\n      sub\n      swap1\n        /* \"#utility.yul\":3041:3117   */\n      jump\t// out\n        /* \"#utility.yul\":3122:3249   */\n    tag_135:\n        /* \"#utility.yul\":3183:3193   */\n      0x4e487b71\n        /* \"#utility.yul\":3178:3181   */\n      0xe0\n        /* \"#utility.yul\":3174:3194   */\n      shl\n        /* \"#utility.yul\":3171:3172   */\n      0x00\n        /* \"#utility.yul\":3164:3195   */\n      mstore\n        /* \"#utility.yul\":3214:3218   */\n      0x11\n        /* \"#utility.yul\":3211:3212   */\n      0x04\n        /* \"#utility.yul\":3204:3219   */\n      mstore\n        /* \"#utility.yul\":3238:3242   */\n      0x24\n        /* \"#utility.yul\":3235:3236   */\n      0x00\n        /* \"#utility.yul\":3228:3243   */\n      revert\n        /* \"#utility.yul\":3254:3387   */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3331:3362   */\n      dup2\n      and\n        /* \"#utility.yul\":3321:3363   */\n      dup2\n      eq\n        /* \"#utility.yul\":3311:3313   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":3377:3378   */\n      0x00\n        /* \"#utility.yul\":3374:3375   */\n      dup1\n        /* \"#utility.yul\":3367:3379   */\n      revert\n\n    auxdata: 0xa26469706673582212204c7852e219d68479c60a8aa9920d93f7613d29a5b9523ac7fe60ee3613519ea764736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61064d806100896000396000f3fe60806040526004361061007f5760003560e01c80638fdf08df1161004e5780638fdf08df1461011a578063f274c8971461013a578063f2fde38b1461015a578063f3c40c4b1461008b57610086565b8063310ec4a71461008b5780633e5beab9146100ad578063715018a6146100e35780638da5cb5b146100f857610086565b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a63660046104a4565b61017a565b005b3480156100b957600080fd5b506100cd6100c8366004610456565b6101f3565b6040516100da91906105b4565b60405180910390f35b3480156100ef57600080fd5b506100ab610205565b34801561010457600080fd5b5061010d610250565b6040516100da91906104b6565b34801561012657600080fd5b506100ab6101353660046104a4565b61025f565b34801561014657600080fd5b506100ab610155366004610479565b6102c6565b34801561016657600080fd5b506100ab610175366004610456565b610377565b6101826103e8565b6001600160a01b0316610193610250565b6001600160a01b0316146101c25760405162461bcd60e51b81526004016101b990610551565b60405180910390fd5b6001600160a01b038216600090815260016020526040812080548392906101ea9084906105bd565b90915550505050565b60016020526000908152604090205481565b61020d6103e8565b6001600160a01b031661021e610250565b6001600160a01b0316146102445760405162461bcd60e51b81526004016101b990610551565b61024e60006103ec565b565b6000546001600160a01b031690565b6102676103e8565b6001600160a01b0316610278610250565b6001600160a01b03161461029e5760405162461bcd60e51b81526004016101b990610551565b6001600160a01b038216600090815260016020526040812080548392906101ea9084906105d5565b806102cf61043c565b806102e95750336000908152600160205260409020548111155b6103055760405162461bcd60e51b81526004016101b990610586565b478211156103255760405162461bcd60e51b81526004016101b990610510565b61032d61043c565b61033b5761033b338361025f565b6040516001600160a01b0384169083156108fc029084906000818181858888f19350505050158015610371573d6000803e3d6000fd5b50505050565b61037f6103e8565b6001600160a01b0316610390610250565b6001600160a01b0316146103b65760405162461bcd60e51b81526004016101b990610551565b6001600160a01b0381166103dc5760405162461bcd60e51b81526004016101b9906104ca565b6103e5816103ec565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600033610447610250565b6001600160a01b031614905090565b600060208284031215610467578081fd5b813561047281610602565b9392505050565b6000806040838503121561048b578081fd5b823561049681610602565b946020939093013593505050565b6000806040838503121561048b578182fd5b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526021908201527f436f6e747261637420646f65736e2774206f776e20656e6f756768206d6f6e656040820152607960f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260149082015273596f7520617265206e6f7420616c6c6f7765642160601b604082015260600190565b90815260200190565b600082198211156105d0576105d06105ec565b500190565b6000828210156105e7576105e76105ec565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146103e557600080fdfea26469706673582212204c7852e219d68479c60a8aa9920d93f7613d29a5b9523ac7fe60ee3613519ea764736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21 PUSH2 0x1C PUSH2 0x26 JUMP JUMPDEST PUSH2 0x2A JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x64D DUP1 PUSH2 0x89 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8FDF08DF GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8FDF08DF EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xF3C40C4B EQ PUSH2 0x8B JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x310EC4A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF8 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x456 JUMP JUMPDEST PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x205 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x4B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x479 JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x456 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x193 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1EA SWAP1 DUP5 SWAP1 PUSH2 0x5BD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21E PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH2 0x24E PUSH1 0x0 PUSH2 0x3EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x267 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x278 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1EA SWAP1 DUP5 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST DUP1 PUSH2 0x2CF PUSH2 0x43C JUMP JUMPDEST DUP1 PUSH2 0x2E9 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x586 JUMP JUMPDEST SELFBALANCE DUP3 GT ISZERO PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x32D PUSH2 0x43C JUMP JUMPDEST PUSH2 0x33B JUMPI PUSH2 0x33B CALLER DUP4 PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x371 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x37F PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x390 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x3E5 DUP2 PUSH2 0x3EC JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x447 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x467 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x472 DUP2 PUSH2 0x602 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x496 DUP2 PUSH2 0x602 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420646F65736E2774206F776E20656E6F756768206D6F6E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x596F7520617265206E6F7420616C6C6F77656421 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x5EC JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5E7 JUMPI PUSH2 0x5E7 PUSH2 0x5EC JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH25 0x52E219D68479C60A8AA9920D93F7613D29A5B9523AC7FE60EE CALLDATASIZE SGT MLOAD SWAP15 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "167:1074:0:-:0;;;;;;;;;;;;-1:-1:-1;921:32:1;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;167:1074:0;;640:96:2;719:10;640:96;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;167:1074:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3389:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:189:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:2:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "237:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "252:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "262:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "252:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:259:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "373:240:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "419:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "428:6:3"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "436:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "421:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "421:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "421:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "394:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "403:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "390:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "390:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "415:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "386:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:32:3"
															},
															"nodeType": "YulIf",
															"src": "383:2:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "454:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "480:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "467:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "458:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "526:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "499:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "499:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "499:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "551:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "592:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "603:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "588:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "588:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "575:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "331:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "342:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "354:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "362:6:3",
														"type": ""
													}
												],
												"src": "278:335:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "705:240:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "751:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "760:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "768:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "753:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "753:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "753:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "726:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "735:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "722:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "722:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "747:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "718:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:32:3"
															},
															"nodeType": "YulIf",
															"src": "715:2:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "786:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "812:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "799:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "790:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "858:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "831:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "831:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "831:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "873:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "883:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "873:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "897:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "924:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "935:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "920:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "920:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "907:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "897:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "663:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "674:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "686:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "694:6:3",
														"type": ""
													}
												],
												"src": "618:327:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1051:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1061:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1073:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1084:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1069:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1069:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1061:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1103:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1118:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1134:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1139:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1130:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1130:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1143:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1126:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1126:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1114:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1114:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1096:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1096:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1020:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1031:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1042:4:3",
														"type": ""
													}
												],
												"src": "950:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1332:228:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1383:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1394:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1379:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1379:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1399:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1372:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1372:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1372:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1422:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1433:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1438:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1411:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1493:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1504:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1489:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1489:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1509:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1482:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1482:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1482:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1527:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1539:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1535:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1535:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1527:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1309:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1323:4:3",
														"type": ""
													}
												],
												"src": "1158:402:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1739:223:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1756:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1767:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1749:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1790:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1801:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1786:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1786:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1806:2:3",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1779:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1779:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1829:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1840:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1825:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1845:34:3",
																		"type": "",
																		"value": "Contract doesn't own enough mone"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1818:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1900:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1911:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1896:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1916:3:3",
																		"type": "",
																		"value": "y"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:31:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1929:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1941:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1937:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1929:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a67ac57806224cd53bc844bb5ddb22cb59fdd52500ecc88ac63908f00606d0f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1716:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1730:4:3",
														"type": ""
													}
												],
												"src": "1565:397:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2141:182:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2158:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2151:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2151:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2181:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2231:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2242:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2247:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2220:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2220:62:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2291:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2303:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2314:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2299:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2291:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2118:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2132:4:3",
														"type": ""
													}
												],
												"src": "1967:356:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2502:170:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2519:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2530:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2512:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2512:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2512:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2553:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2564:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2549:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2549:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2569:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2542:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2592:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2603:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2608:22:3",
																		"type": "",
																		"value": "You are not allowed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2581:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2581:50:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2581:50:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2640:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2652:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2663:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2648:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2648:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2640:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f9f18e7152ecb482b05bc745430c2e40c72dfba99431368b9d2fc7e8b7ebead8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2479:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2493:4:3",
														"type": ""
													}
												],
												"src": "2328:344:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2778:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2788:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2800:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2811:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2796:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2796:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2788:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2830:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2841:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2823:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2823:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2823:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2747:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2758:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2769:4:3",
														"type": ""
													}
												],
												"src": "2677:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2907:80:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2934:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2936:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2936:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2936:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2923:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2930:1:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2926:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2926:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2920:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:13:3"
															},
															"nodeType": "YulIf",
															"src": "2917:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2965:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2976:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2979:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2972:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2965:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2890:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2893:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2899:3:3",
														"type": ""
													}
												],
												"src": "2859:128:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3041:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3063:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3065:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3065:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3065:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3057:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3060:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3054:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:8:3"
															},
															"nodeType": "YulIf",
															"src": "3051:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3094:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3106:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3109:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3102:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3094:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3023:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3026:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3032:4:3",
														"type": ""
													}
												],
												"src": "2992:125:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3154:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3171:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3178:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3183:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3174:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3174:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3164:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3164:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3164:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3211:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3214:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3235:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3238:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3228:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3228:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3228:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3122:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3301:86:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3365:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3374:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3377:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3367:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3367:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3367:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3324:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3335:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3350:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3355:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3346:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3346:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3359:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "3342:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3342:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3331:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3331:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3321:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3321:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3314:50:3"
															},
															"nodeType": "YulIf",
															"src": "3311:2:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3290:5:3",
														"type": ""
													}
												],
												"src": "3254:133:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a67ac57806224cd53bc844bb5ddb22cb59fdd52500ecc88ac63908f00606d0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Contract doesn't own enough mone\")\n        mstore(add(headStart, 96), \"y\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f9f18e7152ecb482b05bc745430c2e40c72dfba99431368b9d2fc7e8b7ebead8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"You are not allowed!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007f5760003560e01c80638fdf08df1161004e5780638fdf08df1461011a578063f274c8971461013a578063f2fde38b1461015a578063f3c40c4b1461008b57610086565b8063310ec4a71461008b5780633e5beab9146100ad578063715018a6146100e35780638da5cb5b146100f857610086565b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a63660046104a4565b61017a565b005b3480156100b957600080fd5b506100cd6100c8366004610456565b6101f3565b6040516100da91906105b4565b60405180910390f35b3480156100ef57600080fd5b506100ab610205565b34801561010457600080fd5b5061010d610250565b6040516100da91906104b6565b34801561012657600080fd5b506100ab6101353660046104a4565b61025f565b34801561014657600080fd5b506100ab610155366004610479565b6102c6565b34801561016657600080fd5b506100ab610175366004610456565b610377565b6101826103e8565b6001600160a01b0316610193610250565b6001600160a01b0316146101c25760405162461bcd60e51b81526004016101b990610551565b60405180910390fd5b6001600160a01b038216600090815260016020526040812080548392906101ea9084906105bd565b90915550505050565b60016020526000908152604090205481565b61020d6103e8565b6001600160a01b031661021e610250565b6001600160a01b0316146102445760405162461bcd60e51b81526004016101b990610551565b61024e60006103ec565b565b6000546001600160a01b031690565b6102676103e8565b6001600160a01b0316610278610250565b6001600160a01b03161461029e5760405162461bcd60e51b81526004016101b990610551565b6001600160a01b038216600090815260016020526040812080548392906101ea9084906105d5565b806102cf61043c565b806102e95750336000908152600160205260409020548111155b6103055760405162461bcd60e51b81526004016101b990610586565b478211156103255760405162461bcd60e51b81526004016101b990610510565b61032d61043c565b61033b5761033b338361025f565b6040516001600160a01b0384169083156108fc029084906000818181858888f19350505050158015610371573d6000803e3d6000fd5b50505050565b61037f6103e8565b6001600160a01b0316610390610250565b6001600160a01b0316146103b65760405162461bcd60e51b81526004016101b990610551565b6001600160a01b0381166103dc5760405162461bcd60e51b81526004016101b9906104ca565b6103e5816103ec565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600033610447610250565b6001600160a01b031614905090565b600060208284031215610467578081fd5b813561047281610602565b9392505050565b6000806040838503121561048b578081fd5b823561049681610602565b946020939093013593505050565b6000806040838503121561048b578182fd5b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526021908201527f436f6e747261637420646f65736e2774206f776e20656e6f756768206d6f6e656040820152607960f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260149082015273596f7520617265206e6f7420616c6c6f7765642160601b604082015260600190565b90815260200190565b600082198211156105d0576105d06105ec565b500190565b6000828210156105e7576105e76105ec565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146103e557600080fdfea26469706673582212204c7852e219d68479c60a8aa9920d93f7613d29a5b9523ac7fe60ee3613519ea764736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8FDF08DF GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8FDF08DF EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xF3C40C4B EQ PUSH2 0x8B JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x310EC4A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF8 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x456 JUMP JUMPDEST PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x205 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x4B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x479 JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x456 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x193 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1EA SWAP1 DUP5 SWAP1 PUSH2 0x5BD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21E PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH2 0x24E PUSH1 0x0 PUSH2 0x3EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x267 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x278 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1EA SWAP1 DUP5 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST DUP1 PUSH2 0x2CF PUSH2 0x43C JUMP JUMPDEST DUP1 PUSH2 0x2E9 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x586 JUMP JUMPDEST SELFBALANCE DUP3 GT ISZERO PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x32D PUSH2 0x43C JUMP JUMPDEST PUSH2 0x33B JUMPI PUSH2 0x33B CALLER DUP4 PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x371 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x37F PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x390 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x3E5 DUP2 PUSH2 0x3EC JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x447 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x467 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x472 DUP2 PUSH2 0x602 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x496 DUP2 PUSH2 0x602 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420646F65736E2774206F776E20656E6F756768206D6F6E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x596F7520617265206E6F7420616C6C6F77656421 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x5EC JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5E7 JUMPI PUSH2 0x5E7 PUSH2 0x5EC JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH25 0x52E219D68479C60A8AA9920D93F7613D29A5B9523AC7FE60EE CALLDATASIZE SGT MLOAD SWAP15 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "167:1074:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:112;;;;;;;;;;-1:-1:-1;369:112:0;;;;;:::i;:::-;;:::i;:::-;;315:41;;;;;;;;;;-1:-1:-1;315:41:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:1;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;609:115:0:-;;;;;;;;;;-1:-1:-1;609:115:0;;;;;:::i;:::-;;:::i;889:306::-;;;;;;;;;;-1:-1:-1;889:306:0;;;;;:::i;:::-;;:::i;1918:198:1:-;;;;;;;;;;-1:-1:-1;1918:198:1;;;;;:::i;:::-;;:::i;369:112:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;447:15:0;::::1;;::::0;;;:9:::1;:15;::::0;;;;:26;;466:7;;447:15;:26:::1;::::0;466:7;;447:26:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;369:112:0:o;315:41::-;;;;;;;;;;;;;:::o;1668:101:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;1036:85;:::o;609:115:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;690:15:0;::::1;;::::0;;;:9:::1;:15;::::0;;;;:26;;709:7;;690:15;:26:::1;::::0;709:7;;690:26:::1;:::i;889:306::-:0;969:7;791:9;:7;:9::i;:::-;:45;;;-1:-1:-1;814:10:0;804:21;;;;:9;:21;;;;;;:32;-1:-1:-1;804:32:0;791:45;783:78;;;;-1:-1:-1;;;783:78:0;;;;;;;:::i;:::-;1008:21:::1;997:7;:32;;989:78;;;;-1:-1:-1::0;;;989:78:0::1;;;;;;;:::i;:::-;1082:9;:7;:9::i;:::-;1078:78;;1108:36;1124:10;1136:7;1108:15;:36::i;:::-;1166:21;::::0;-1:-1:-1;;;;;1166:12:0;::::1;::::0;:21;::::1;;;::::0;1179:7;;1166:21:::1;::::0;;;1179:7;1166:12;:21;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;889:306:::0;;;:::o;1918:198:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:1::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:2:-;719:10;640:96;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;213:94:0:-;254:4;289:10;278:7;:5;:7::i;:::-;-1:-1:-1;;;;;278:21:0;;271:28;;213:94;:::o;14:259:3:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:3:o;278:335::-;;;415:2;403:9;394:7;390:23;386:32;383:2;;;436:6;428;421:22;383:2;480:9;467:23;499:33;526:5;499:33;:::i;:::-;551:5;603:2;588:18;;;;575:32;;-1:-1:-1;;;373:240:3:o;618:327::-;;;747:2;735:9;726:7;722:23;718:32;715:2;;;768:6;760;753:22;950:203;-1:-1:-1;;;;;1114:32:3;;;;1096:51;;1084:2;1069:18;;1051:102::o;1158:402::-;1360:2;1342:21;;;1399:2;1379:18;;;1372:30;1438:34;1433:2;1418:18;;1411:62;-1:-1:-1;;;1504:2:3;1489:18;;1482:36;1550:3;1535:19;;1332:228::o;1565:397::-;1767:2;1749:21;;;1806:2;1786:18;;;1779:30;1845:34;1840:2;1825:18;;1818:62;-1:-1:-1;;;1911:2:3;1896:18;;1889:31;1952:3;1937:19;;1739:223::o;1967:356::-;2169:2;2151:21;;;2188:18;;;2181:30;2247:34;2242:2;2227:18;;2220:62;2314:2;2299:18;;2141:182::o;2328:344::-;2530:2;2512:21;;;2569:2;2549:18;;;2542:30;-1:-1:-1;;;2603:2:3;2588:18;;2581:50;2663:2;2648:18;;2502:170::o;2677:177::-;2823:25;;;2811:2;2796:18;;2778:76::o;2859:128::-;;2930:1;2926:6;2923:1;2920:13;2917:2;;;2936:18;;:::i;:::-;-1:-1:-1;2972:9:3;;2907:80::o;2992:125::-;;3060:1;3057;3054:8;3051:2;;;3065:18;;:::i;:::-;-1:-1:-1;3102:9:3;;3041:76::o;3122:127::-;3183:10;3178:3;3174:20;3171:1;3164:31;3214:4;3211:1;3204:15;3238:4;3235:1;3228:15;3254:133;-1:-1:-1;;;;;3331:31:3;;3321:42;;3311:2;;3377:1;3374;3367:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "322600",
								"executionCost": "22830",
								"totalCost": "345430"
							},
							"external": {
								"addAllowance(address,uint256)": "22302",
								"allowance(address)": "1269",
								"owner()": "1137",
								"reduceAllowance(address,uint256)": "22233",
								"renounceOwnership()": "23549",
								"setAllowance(address,uint256)": "22237",
								"transferOwnership(address)": "infinite",
								"withdrawMoney(address,uint256)": "infinite"
							},
							"internal": {
								"isOwner()": "891"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 1241,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1241,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c7852e219d68479c60a8aa9920d93f7613d29a5b9523ac7fe60ee3613519ea764736f6c63430008010033",
									".code": [
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "8FDF08DF"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "8FDF08DF"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "F274C897"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "F3C40C4B"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "310EC4A7"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "3E5BEAB9"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1241,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 369,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 369,
											"end": 481,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 369,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 369,
											"end": 481,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 369,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 369,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 369,
											"end": 481,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 369,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 369,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 369,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 369,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 369,
											"end": 481,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 724,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 609,
											"end": 724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 609,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 609,
											"end": 724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 724,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 609,
											"end": 724,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 609,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 609,
											"end": 724,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 369,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 447,
											"end": 462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 447,
											"end": 462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 447,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 447,
											"end": 462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 447,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 447,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 447,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 447,
											"end": 462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 447,
											"end": 473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 466,
											"end": 473,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 447,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 447,
											"end": 473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 473,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 466,
											"end": 473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 447,
											"end": 473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 473,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 447,
											"end": 473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 447,
											"end": 473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 447,
											"end": 473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 369,
											"end": 481,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 315,
											"end": 356,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 609,
											"end": 724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 690,
											"end": 705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 690,
											"end": 705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 690,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 699,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 690,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 705,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 690,
											"end": 716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 716,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 709,
											"end": 716,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 690,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 690,
											"end": 716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 716,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 709,
											"end": 716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 690,
											"end": 716,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 969,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 791,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 814,
											"end": 824,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 804,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 804,
											"end": 825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 804,
											"end": 825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 804,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 804,
											"end": 825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 804,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 804,
											"end": 825,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 804,
											"end": 825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 804,
											"end": 836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 804,
											"end": 836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 791,
											"end": 836,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 783,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 783,
											"end": 861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 783,
											"end": 861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 783,
											"end": 861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 783,
											"end": 861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 783,
											"end": 861,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 783,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 783,
											"end": 861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 783,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 783,
											"end": 861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 861,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 783,
											"end": 861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1029,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1029,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 989,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1082,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1082,
											"end": 1091,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1082,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1078,
											"end": 1156,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1124,
											"end": 1134,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1108,
											"end": 1144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1108,
											"end": 1144,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1108,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1195,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 213,
											"end": 307,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 213,
											"end": 307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 278,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 278,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 278,
											"end": 285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 278,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 278,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 278,
											"end": 299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 278,
											"end": 299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 271,
											"end": 299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 271,
											"end": 299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 213,
											"end": 307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 307,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 273,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 14,
											"end": 273,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14,
											"end": 273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 210,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 210,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 210,
											"end": 243,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 243,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 210,
											"end": 243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 262,
											"end": 267,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 84,
											"end": 273,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 273,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 278,
											"end": 613,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 278,
											"end": 613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 278,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 412,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 394,
											"end": 401,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 390,
											"end": 413,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 383,
											"end": 385,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 383,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 383,
											"end": 385,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 436,
											"end": 442,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 428,
											"end": 434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 421,
											"end": 443,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 383,
											"end": 385,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 383,
											"end": 385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 480,
											"end": 489,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 467,
											"end": 490,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 499,
											"end": 532,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 499,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 551,
											"end": 556,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 603,
											"end": 605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 606,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 588,
											"end": 606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 588,
											"end": 606,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 588,
											"end": 606,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 575,
											"end": 607,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 575,
											"end": 607,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 373,
											"end": 613,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 618,
											"end": 945,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 618,
											"end": 945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 945,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 747,
											"end": 749,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 744,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 726,
											"end": 733,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 722,
											"end": 745,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 718,
											"end": 750,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 715,
											"end": 717,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 715,
											"end": 717,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 768,
											"end": 774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 760,
											"end": 766,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 753,
											"end": 775,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 950,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 950,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1147,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1147,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1153,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1158,
											"end": 1560,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1158,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1504,
											"end": 1506,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1518,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1535,
											"end": 1554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1560,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1565,
											"end": 1962,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1565,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1749,
											"end": 1770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1749,
											"end": 1770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1879,
											"name": "PUSH",
											"source": 3,
											"value": "436F6E747261637420646F65736E2774206F776E20656E6F756768206D6F6E65"
										},
										{
											"begin": 1840,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1843,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1911,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 1920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 1955,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1937,
											"end": 1956,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1937,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1967,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2282,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2316,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2323,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2328,
											"end": 2672,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2328,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2532,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2533,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2533,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2571,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "596F7520617265206E6F7420616C6C6F77656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2603,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2606,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2631,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2665,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2672,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2677,
											"end": 2854,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2677,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2813,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2854,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2859,
											"end": 2987,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2859,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2859,
											"end": 2987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2923,
											"end": 2924,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2933,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2907,
											"end": 2987,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2992,
											"end": 3117,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2992,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2992,
											"end": 3117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3057,
											"end": 3058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3062,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3065,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3065,
											"end": 3083,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3065,
											"end": 3083,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3065,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3102,
											"end": 3111,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3102,
											"end": 3111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3041,
											"end": 3117,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3249,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3122,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 3178,
											"end": 3181,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3174,
											"end": 3194,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3195,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3218,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3211,
											"end": 3212,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3204,
											"end": 3219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3236,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3243,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3387,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3254,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3363,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3311,
											"end": 3313,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3379,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addAllowance(address,uint256)": "f3c40c4b",
							"allowance(address)": "3e5beab9",
							"owner()": "8da5cb5b",
							"reduceAllowance(address,uint256)": "8fdf08df",
							"renounceOwnership()": "715018a6",
							"setAllowance(address,uint256)": "310ec4a7",
							"transferOwnership(address)": "f2fde38b",
							"withdrawMoney(address,uint256)": "f274c897"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reduceAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/02_simple/SharedWallet.sol\":\"SharedWallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/02_simple/SharedWallet.sol\":{\"keccak256\":\"0xae0705a5a5616f95b82c1db5203f58e7bcc9dac696dcceec291ade463244d20c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ac27b02db273720dd4fd5c71cbf95b3a944bec88d8aa2256cd5b206fae5def9\",\"dweb:/ipfs/Qma8Xr444gm2pmEtaWfPUQNJEnZmPmMCdC2peYivLjiT5G\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 139,
								"contract": "contracts/02_simple/SharedWallet.sol:SharedWallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 20,
								"contract": "contracts/02_simple/SharedWallet.sol:SharedWallet",
								"label": "allowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 139,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/02_simple/SharedWallet.sol": {
				"ast": {
					"absolutePath": "contracts/02_simple/SharedWallet.sol",
					"exportedSymbols": {
						"Context": [
							258
						],
						"Ownable": [
							236
						],
						"SharedWallet": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 237,
							"src": "58:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 236,
										"src": "192:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "192:7:0"
								}
							],
							"contractDependencies": [
								236,
								258
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								236,
								258
							],
							"name": "SharedWallet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "260:47:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 9,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "278:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "278:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "289:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "289:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "278:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 14,
												"nodeType": "Return",
												"src": "271:28:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:6:0"
									},
									"scope": 131,
									"src": "213:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3e5beab9",
									"id": 20,
									"mutability": "mutable",
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "315:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 19,
										"keyType": {
											"id": 17,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "323:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "315:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 18,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "334:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "436:45:0",
										"statements": [
											{
												"expression": {
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 29,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "447:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 31,
														"indexExpression": {
															"id": 30,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "457:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "447:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 32,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "466:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "447:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "447:26:0"
											}
										]
									},
									"functionSelector": "310ec4a7",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 27,
											"modifierName": {
												"id": 26,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 178,
												"src": "426:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "426:9:0"
										}
									],
									"name": "setAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "391:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "405:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:28:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:0:0"
									},
									"scope": 131,
									"src": "369:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "556:45:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 45,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "567:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 47,
														"indexExpression": {
															"id": 46,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "577:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "567:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 48,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "586:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "567:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "567:26:0"
											}
										]
									},
									"functionSelector": "f3c40c4b",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 43,
											"modifierName": {
												"id": 42,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 178,
												"src": "546:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "546:9:0"
										}
									],
									"name": "addAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "511:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "525:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:28:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:0:0"
									},
									"scope": 131,
									"src": "489:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "679:45:0",
										"statements": [
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 61,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "690:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 63,
														"indexExpression": {
															"id": 62,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "700:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "690:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 64,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "690:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "690:26:0"
											}
										]
									},
									"functionSelector": "8fdf08df",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"modifierName": {
												"id": 58,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 178,
												"src": "669:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "669:9:0"
										}
									],
									"name": "reduceAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "634:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "648:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "648:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:28:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "679:0:0"
									},
									"scope": 131,
									"src": "609:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "772:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 73,
																	"name": "isOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "791:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "791:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 75,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "804:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 78,
																	"indexExpression": {
																		"expression": {
																			"id": 76,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "814:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "814:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "804:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 79,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "829:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "804:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "791:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420616c6c6f77656421",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "838:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9f18e7152ecb482b05bc745430c2e40c72dfba99431368b9d2fc7e8b7ebead8",
																"typeString": "literal_string \"You are not allowed!\""
															},
															"value": "You are not allowed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9f18e7152ecb482b05bc745430c2e40c72dfba99431368b9d2fc7e8b7ebead8",
																"typeString": "literal_string \"You are not allowed!\""
															}
														],
														"id": 72,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "783:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "783:78:0"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "872:1:0"
											}
										]
									},
									"id": 87,
									"name": "ownerOrAllowed",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "758:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:14:0"
									},
									"src": "734:147:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "978:217:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "997:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 101,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1016:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SharedWallet_$131",
																				"typeString": "contract SharedWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SharedWallet_$131",
																				"typeString": "contract SharedWallet"
																			}
																		],
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1008:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 99,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1008:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1008:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1008:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "997:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420646f65736e2774206f776e20656e6f756768206d6f6e6579",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1031:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a67ac57806224cd53bc844bb5ddb22cb59fdd52500ecc88ac63908f00606d0f",
																"typeString": "literal_string \"Contract doesn't own enough money\""
															},
															"value": "Contract doesn't own enough money"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a67ac57806224cd53bc844bb5ddb22cb59fdd52500ecc88ac63908f00606d0f",
																"typeString": "literal_string \"Contract doesn't own enough money\""
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "989:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "989:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "989:78:0"
											},
											{
												"condition": {
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1081:10:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 108,
															"name": "isOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "1082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1082:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 118,
												"nodeType": "IfStatement",
												"src": "1078:78:0",
												"trueBody": {
													"id": 117,
													"nodeType": "Block",
													"src": "1093:63:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 112,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1124:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1124:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 114,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "1136:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 111,
																	"name": "reduceAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 68,
																	"src": "1108:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1108:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 116,
															"nodeType": "ExpressionStatement",
															"src": "1108:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 119,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1166:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1166:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1166:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1166:21:0"
											}
										]
									},
									"functionSelector": "f274c897",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 94,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 95,
											"modifierName": {
												"id": 93,
												"name": "ownerOrAllowed",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "954:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "954:23:0"
										}
									],
									"name": "withdrawMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "912:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "912:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "933:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "933:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "911:35:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:0:0"
									},
									"scope": 131,
									"src": "889:306:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1230:8:0",
										"statements": []
									},
									"id": 130,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:2:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1230:0:0"
									},
									"scope": 131,
									"src": "1203:35:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 132,
							"src": "167:1074:0"
						}
					],
					"src": "32:1209:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							258
						],
						"Ownable": [
							236
						]
					},
					"id": 237,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 134,
							"nodeType": "ImportDirective",
							"scope": 237,
							"sourceUnit": 259,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 136,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 258,
										"src": "668:7:1"
									},
									"id": 137,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"contractDependencies": [
								258
							],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 236,
							"linearizedBaseContracts": [
								236,
								258
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 236,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 138,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 145,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 150,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 149,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 155,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 236,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 139,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 236,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 168,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 170,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 176,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 178,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 185,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 182,
											"modifierName": {
												"id": 181,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 178,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 236,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 201,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 202,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 211,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 210,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 198,
											"modifierName": {
												"id": 197,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 178,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 236,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 234,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 221,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 224,
												"initialValue": {
													"id": 223,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 139,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 225,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 226,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 230,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 229,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 236,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 237,
							"src": "639:1820:1"
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							258
						]
					},
					"id": 259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 238,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 239,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 244,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 243,
												"id": 246,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 258,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 253,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 252,
												"id": 255,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 258,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 259,
							"src": "608:235:2"
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			}
		}
	}
}