{
	"id": "df2692a3125c60c7aa28d14e8060e467",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/02_simple/SharedWallet.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity 0.8.1;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\n\r\ncontract Allowance  is Ownable {\r\n    \r\n    event AllowanceChanged(address indexed _forWho, \r\n                            address indexed _byWhom, \r\n                            uint _oldAmount, \r\n                            uint _newAmount);\r\n    \r\n    function isOwner() internal view returns(bool) {\r\n        return owner() == msg.sender;\r\n    }\r\n\r\n    mapping(address => uint) public allowance;\r\n    \r\n    function setAllowance(address _who, uint _amount) public onlyOwner {\r\n        allowance[_who] = _amount;\r\n        emit AllowanceChanged(_who, msg.sender, allowance[_who], _amount);\r\n    }\r\n\r\n    function addAllowance(address _who, uint _amount) public onlyOwner {\r\n        allowance[_who] += _amount;\r\n    }\r\n\r\n    function reduceAllowance(address _who, uint _amount) public onlyOwner {\r\n        allowance[_who] -= _amount;\r\n    }\r\n\r\n\r\n    modifier ownerOrAllowed(uint _amount) {\r\n        require(isOwner() || allowance[msg.sender] >= _amount, \"You are not allowed!\");\r\n        _;\r\n    }\r\n}\r\n\r\ncontract SharedWallet is Allowance {\r\n    \r\n    event MoneySent(address indexed _beneficiary, uint _amount);\r\n    event MoneyReceived(address indexed _from, uint _amount);\r\n\r\n    function withdrawMoney(address payable _to, uint _amount) public ownerOrAllowed(_amount) {\r\n        require(_amount <= address(this).balance, \"Contract doesn't own enough money\");\r\n        if(!isOwner()) {\r\n            reduceAllowance(msg.sender, _amount);\r\n        }\r\n        _to.transfer(_amount);\r\n        \r\n    }\r\n    \r\n    receive() external payable {\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/02_simple/SharedWallet.sol": {
				"Allowance": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_forWho",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_byWhom",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_oldAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newAmount",
									"type": "uint256"
								}
							],
							"name": "AllowanceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "reduceAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/02_simple/SharedWallet.sol\":167:1166  contract Allowance  is Ownable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:950  _msgSender */\n  tag_6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/02_simple/SharedWallet.sol\":167:1166  contract Allowance  is Ownable {\r... */\n  jump(tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/02_simple/SharedWallet.sol\":167:1166  contract Allowance  is Ownable {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/02_simple/SharedWallet.sol\":167:1166  contract Allowance  is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8fdf08df\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf3c40c4b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x310ec4a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e5beab9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/02_simple/SharedWallet.sol\":576:763  function setAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_3:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/02_simple/SharedWallet.sol\":522:563  mapping(address => uint) public allowance */\n    tag_4:\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_11\n      tag_22\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n        /* \"contracts/02_simple/SharedWallet.sol\":891:1006  function reduceAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_7:\n      tag_11\n      tag_28\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_11\n      tag_31\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"contracts/02_simple/SharedWallet.sol\":771:883  function addAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_9:\n      tag_11\n      tag_34\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n        /* \"contracts/02_simple/SharedWallet.sol\":576:763  function setAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_37\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_37:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_39:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":654:669  allowance[_who] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/02_simple/SharedWallet.sol\":654:663  allowance */\n      0x01\n        /* \"contracts/02_simple/SharedWallet.sol\":654:669  allowance[_who] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/02_simple/SharedWallet.sol\":654:679  allowance[_who] = _amount */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/02_simple/SharedWallet.sol\":695:755  AllowanceChanged(_who, msg.sender, allowance[_who], _amount) */\n      mload\n        /* \"contracts/02_simple/SharedWallet.sol\":718:728  msg.sender */\n      caller\n      swap2\n        /* \"contracts/02_simple/SharedWallet.sol\":654:669  allowance[_who] */\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":695:755  AllowanceChanged(_who, msg.sender, allowance[_who], _amount) */\n      0x3691d1a86d99355e52b689ca70a7bdf6d80763237a6aa06e5fa43964eac7244b\n      swap1\n      tag_44\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":672:679  _amount */\n      dup6\n      swap1\n      dup2\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":695:755  AllowanceChanged(_who, msg.sender, allowance[_who], _amount) */\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/02_simple/SharedWallet.sol\":576:763  function setAllowance(address _who, uint _amount) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/02_simple/SharedWallet.sol\":522:563  mapping(address => uint) public allowance */\n    tag_18:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_48\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_52\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/02_simple/SharedWallet.sol\":891:1006  function reduceAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_29:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_56\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":972:987  allowance[_who] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/02_simple/SharedWallet.sol\":972:981  allowance */\n      0x01\n        /* \"contracts/02_simple/SharedWallet.sol\":972:987  allowance[_who] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/02_simple/SharedWallet.sol\":972:998  allowance[_who] -= _amount */\n      dup1\n      sload\n        /* \"contracts/02_simple/SharedWallet.sol\":991:998  _amount */\n      dup4\n      swap3\n        /* \"contracts/02_simple/SharedWallet.sol\":972:987  allowance[_who] */\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":972:998  allowance[_who] -= _amount */\n      tag_61\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":991:998  _amount */\n      dup5\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":972:998  allowance[_who] -= _amount */\n      tag_62\n      jump\t// in\n    tag_61:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/02_simple/SharedWallet.sol\":891:1006  function reduceAllowance(address _who, uint _amount) public onlyOwner {\r... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_71\n      jump\t// in\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/02_simple/SharedWallet.sol\":771:883  function addAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":849:864  allowance[_who] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/02_simple/SharedWallet.sol\":849:858  allowance */\n      0x01\n        /* \"contracts/02_simple/SharedWallet.sol\":849:864  allowance[_who] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/02_simple/SharedWallet.sol\":849:875  allowance[_who] += _amount */\n      dup1\n      sload\n        /* \"contracts/02_simple/SharedWallet.sol\":868:875  _amount */\n      dup4\n      swap3\n        /* \"contracts/02_simple/SharedWallet.sol\":849:864  allowance[_who] */\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":849:875  allowance[_who] += _amount */\n      tag_61\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":868:875  _amount */\n      dup5\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":849:875  allowance[_who] += _amount */\n      tag_80\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_84:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_86\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":113:115   */\n    tag_86:\n        /* \"#utility.yul\":65:189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":194:392   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_88:\n        /* \"#utility.yul\":355:386   */\n      tag_89\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_84\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:663   */\n    tag_13:\n      0x00\n      dup1\n        /* \"#utility.yul\":526:528   */\n      0x40\n        /* \"#utility.yul\":514:523   */\n      dup4\n        /* \"#utility.yul\":505:512   */\n      dup6\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:496   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      dup2\n        /* \"#utility.yul\":532:554   */\n      revert\n        /* \"#utility.yul\":494:496   */\n    tag_91:\n        /* \"#utility.yul\":575:606   */\n      tag_92\n        /* \"#utility.yul\":596:605   */\n      dup4\n        /* \"#utility.yul\":575:606   */\n      tag_84\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":565:606   */\n      swap5\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":638:656   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":625:657   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":484:663   */\n      jump\t// out\n        /* \"#utility.yul\":668:871   */\n    tag_26:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":832:864   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":814:865   */\n      dup2\n      mstore\n        /* \"#utility.yul\":802:804   */\n      0x20\n        /* \"#utility.yul\":787:805   */\n      add\n      swap1\n        /* \"#utility.yul\":769:871   */\n      jump\t// out\n        /* \"#utility.yul\":876:1278   */\n    tag_71:\n        /* \"#utility.yul\":1078:1080   */\n      0x20\n        /* \"#utility.yul\":1060:1081   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1117:1119   */\n      0x26\n        /* \"#utility.yul\":1097:1115   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1090:1120   */\n      mstore\n        /* \"#utility.yul\":1156:1190   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1151:1153   */\n      0x40\n        /* \"#utility.yul\":1136:1154   */\n      dup3\n      add\n        /* \"#utility.yul\":1129:1191   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1222:1224   */\n      0x60\n        /* \"#utility.yul\":1207:1225   */\n      dup3\n      add\n        /* \"#utility.yul\":1200:1236   */\n      mstore\n        /* \"#utility.yul\":1268:1271   */\n      0x80\n        /* \"#utility.yul\":1253:1272   */\n      add\n      swap1\n        /* \"#utility.yul\":1050:1278   */\n      jump\t// out\n        /* \"#utility.yul\":1283:1639   */\n    tag_42:\n        /* \"#utility.yul\":1485:1487   */\n      0x20\n        /* \"#utility.yul\":1467:1488   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1504:1522   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1497:1527   */\n      mstore\n        /* \"#utility.yul\":1563:1597   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1558:1560   */\n      0x40\n        /* \"#utility.yul\":1543:1561   */\n      dup3\n      add\n        /* \"#utility.yul\":1536:1598   */\n      mstore\n        /* \"#utility.yul\":1630:1632   */\n      0x60\n        /* \"#utility.yul\":1615:1633   */\n      add\n      swap1\n        /* \"#utility.yul\":1457:1639   */\n      jump\t// out\n        /* \"#utility.yul\":1644:1821   */\n    tag_20:\n        /* \"#utility.yul\":1790:1815   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1778:1780   */\n      0x20\n        /* \"#utility.yul\":1763:1781   */\n      add\n      swap1\n        /* \"#utility.yul\":1745:1821   */\n      jump\t// out\n        /* \"#utility.yul\":1826:2074   */\n    tag_45:\n        /* \"#utility.yul\":2000:2025   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2056:2058   */\n      0x20\n        /* \"#utility.yul\":2041:2059   */\n      dup3\n      add\n        /* \"#utility.yul\":2034:2068   */\n      mstore\n        /* \"#utility.yul\":1988:1990   */\n      0x40\n        /* \"#utility.yul\":1973:1991   */\n      add\n      swap1\n        /* \"#utility.yul\":1955:2074   */\n      jump\t// out\n        /* \"#utility.yul\":2079:2207   */\n    tag_80:\n      0x00\n        /* \"#utility.yul\":2150:2151   */\n      dup3\n        /* \"#utility.yul\":2146:2152   */\n      not\n        /* \"#utility.yul\":2143:2144   */\n      dup3\n        /* \"#utility.yul\":2140:2153   */\n      gt\n        /* \"#utility.yul\":2137:2139   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":2156:2174   */\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      pop\n        /* \"#utility.yul\":2192:2201   */\n      add\n      swap1\n        /* \"#utility.yul\":2127:2207   */\n      jump\t// out\n        /* \"#utility.yul\":2212:2337   */\n    tag_62:\n      0x00\n        /* \"#utility.yul\":2280:2281   */\n      dup3\n        /* \"#utility.yul\":2277:2278   */\n      dup3\n        /* \"#utility.yul\":2274:2282   */\n      lt\n        /* \"#utility.yul\":2271:2273   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2285:2303   */\n      tag_104\n      tag_101\n      jump\t// in\n    tag_104:\n      pop\n        /* \"#utility.yul\":2322:2331   */\n      sub\n      swap1\n        /* \"#utility.yul\":2261:2337   */\n      jump\t// out\n        /* \"#utility.yul\":2342:2469   */\n    tag_101:\n        /* \"#utility.yul\":2403:2413   */\n      0x4e487b71\n        /* \"#utility.yul\":2398:2401   */\n      0xe0\n        /* \"#utility.yul\":2394:2414   */\n      shl\n        /* \"#utility.yul\":2391:2392   */\n      0x00\n        /* \"#utility.yul\":2384:2415   */\n      mstore\n        /* \"#utility.yul\":2434:2438   */\n      0x11\n        /* \"#utility.yul\":2431:2432   */\n      0x04\n        /* \"#utility.yul\":2424:2439   */\n      mstore\n        /* \"#utility.yul\":2458:2462   */\n      0x24\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2448:2463   */\n      revert\n\n    auxdata: 0xa26469706673582212200fdb06f07da3d5679413ce5e5cc5e979036d93a81e04e8dba248f3de7af8c7d764736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610549806100896000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c85780638fdf08df146100dd578063f2fde38b146100f0578063f3c40c4b146101035761007d565b8063310ec4a7146100825780633e5beab914610097578063715018a6146100c0575b600080fd5b6100956100903660046103ff565b610116565b005b6100aa6100a53660046103de565b6101ba565b6040516100b791906104b7565b60405180910390f35b6100956101cc565b6100d0610217565b6040516100b79190610428565b6100956100eb3660046103ff565b610226565b6100956100fe3660046103de565b610296565b6100956101113660046103ff565b610307565b61011e61036e565b6001600160a01b031661012f610217565b6001600160a01b03161461015e5760405162461bcd60e51b815260040161015590610482565b60405180910390fd5b6001600160a01b03821660008181526001602052604090819020839055513391907f3691d1a86d99355e52b689ca70a7bdf6d80763237a6aa06e5fa43964eac7244b906101ae90859081906104c0565b60405180910390a35050565b60016020526000908152604090205481565b6101d461036e565b6001600160a01b03166101e5610217565b6001600160a01b03161461020b5760405162461bcd60e51b815260040161015590610482565b6102156000610372565b565b6000546001600160a01b031690565b61022e61036e565b6001600160a01b031661023f610217565b6001600160a01b0316146102655760405162461bcd60e51b815260040161015590610482565b6001600160a01b0382166000908152600160205260408120805483929061028d9084906104e6565b90915550505050565b61029e61036e565b6001600160a01b03166102af610217565b6001600160a01b0316146102d55760405162461bcd60e51b815260040161015590610482565b6001600160a01b0381166102fb5760405162461bcd60e51b81526004016101559061043c565b61030481610372565b50565b61030f61036e565b6001600160a01b0316610320610217565b6001600160a01b0316146103465760405162461bcd60e51b815260040161015590610482565b6001600160a01b0382166000908152600160205260408120805483929061028d9084906104ce565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103d957600080fd5b919050565b6000602082840312156103ef578081fd5b6103f8826103c2565b9392505050565b60008060408385031215610411578081fd5b61041a836103c2565b946020939093013593505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b918252602082015260400190565b600082198211156104e1576104e16104fd565b500190565b6000828210156104f8576104f86104fd565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200fdb06f07da3d5679413ce5e5cc5e979036d93a81e04e8dba248f3de7af8c7d764736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21 PUSH2 0x1C PUSH2 0x26 JUMP JUMPDEST PUSH2 0x2A JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x549 DUP1 PUSH2 0x89 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8FDF08DF EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xF3C40C4B EQ PUSH2 0x103 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x310EC4A7 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x1CC JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST PUSH2 0x11E PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12F PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x15E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD CALLER SWAP2 SWAP1 PUSH32 0x3691D1A86D99355E52B689CA70A7BDF6D80763237A6AA06E5FA43964EAC7244B SWAP1 PUSH2 0x1AE SWAP1 DUP6 SWAP1 DUP2 SWAP1 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E5 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH2 0x215 PUSH1 0x0 PUSH2 0x372 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23F PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x265 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x28D SWAP1 DUP5 SWAP1 PUSH2 0x4E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x29E PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AF PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x43C JUMP JUMPDEST PUSH2 0x304 DUP2 PUSH2 0x372 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x30F PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x320 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x28D SWAP1 DUP5 SWAP1 PUSH2 0x4CE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3F8 DUP3 PUSH2 0x3C2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x411 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x41A DUP4 PUSH2 0x3C2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4E1 JUMPI PUSH2 0x4E1 PUSH2 0x4FD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4F8 JUMPI PUSH2 0x4F8 PUSH2 0x4FD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xDB MOD CREATE PUSH30 0xA3D5679413CE5E5CC5E979036D93A81E04E8DBA248F3DE7AF8C7D764736F PUSH13 0x63430008010033000000000000 ",
							"sourceMap": "167:999:0:-:0;;;;;;;;;;;;-1:-1:-1;921:32:1;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;167:999:0;;640:96:2;719:10;640:96;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;167:999:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2471:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:3"
															},
															"nodeType": "YulIf",
															"src": "113:2:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:3",
														"type": ""
													}
												],
												"src": "14:175:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:3"
															},
															"nodeType": "YulIf",
															"src": "274:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:3",
														"type": ""
													}
												],
												"src": "194:198:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:179:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:3"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "547:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "505:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "514:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:32:3"
															},
															"nodeType": "YulIf",
															"src": "494:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "575:20:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:31:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "615:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "625:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "442:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "453:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "465:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "473:6:3",
														"type": ""
													}
												],
												"src": "397:266:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "769:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "779:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "791:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "802:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "787:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "779:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "821:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "836:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "852:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "857:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "848:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "848:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "861:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "844:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "844:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "832:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "814:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "814:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "814:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "738:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "760:4:3",
														"type": ""
													}
												],
												"src": "668:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1050:228:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1078:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1060:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1101:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1112:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1097:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1097:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1117:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1090:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1140:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1151:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1136:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1136:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1156:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1129:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1129:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1129:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1211:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1222:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1227:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1200:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1245:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1257:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1268:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1253:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1245:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1027:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1041:4:3",
														"type": ""
													}
												],
												"src": "876:402:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1457:182:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1474:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1485:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1467:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1467:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1508:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1519:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1497:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1497:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1547:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1558:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1563:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1536:62:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1607:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1619:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1630:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1615:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1615:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1607:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1434:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1448:4:3",
														"type": ""
													}
												],
												"src": "1283:356:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1745:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1755:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1767:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1778:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1755:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1797:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1808:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1790:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1714:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1725:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1736:4:3",
														"type": ""
													}
												],
												"src": "1644:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1955:119:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1965:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1977:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1973:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1973:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1965:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2007:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2018:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2000:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2000:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2056:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2041:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2061:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2034:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2034:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2034:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1916:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1927:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1935:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1946:4:3",
														"type": ""
													}
												],
												"src": "1826:248:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2127:80:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2154:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2156:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2156:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2156:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2143:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2150:1:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2146:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2146:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:13:3"
															},
															"nodeType": "YulIf",
															"src": "2137:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2185:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2196:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2199:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2192:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2185:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2110:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2113:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2119:3:3",
														"type": ""
													}
												],
												"src": "2079:128:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2261:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2283:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2285:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2285:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2285:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2277:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2280:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2274:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:8:3"
															},
															"nodeType": "YulIf",
															"src": "2271:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2314:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2326:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2329:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2314:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2243:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2246:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2252:4:3",
														"type": ""
													}
												],
												"src": "2212:125:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2374:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2391:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2398:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2403:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2394:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2384:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2384:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2431:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2434:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2424:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2424:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2424:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2455:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2448:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2448:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2342:127:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c85780638fdf08df146100dd578063f2fde38b146100f0578063f3c40c4b146101035761007d565b8063310ec4a7146100825780633e5beab914610097578063715018a6146100c0575b600080fd5b6100956100903660046103ff565b610116565b005b6100aa6100a53660046103de565b6101ba565b6040516100b791906104b7565b60405180910390f35b6100956101cc565b6100d0610217565b6040516100b79190610428565b6100956100eb3660046103ff565b610226565b6100956100fe3660046103de565b610296565b6100956101113660046103ff565b610307565b61011e61036e565b6001600160a01b031661012f610217565b6001600160a01b03161461015e5760405162461bcd60e51b815260040161015590610482565b60405180910390fd5b6001600160a01b03821660008181526001602052604090819020839055513391907f3691d1a86d99355e52b689ca70a7bdf6d80763237a6aa06e5fa43964eac7244b906101ae90859081906104c0565b60405180910390a35050565b60016020526000908152604090205481565b6101d461036e565b6001600160a01b03166101e5610217565b6001600160a01b03161461020b5760405162461bcd60e51b815260040161015590610482565b6102156000610372565b565b6000546001600160a01b031690565b61022e61036e565b6001600160a01b031661023f610217565b6001600160a01b0316146102655760405162461bcd60e51b815260040161015590610482565b6001600160a01b0382166000908152600160205260408120805483929061028d9084906104e6565b90915550505050565b61029e61036e565b6001600160a01b03166102af610217565b6001600160a01b0316146102d55760405162461bcd60e51b815260040161015590610482565b6001600160a01b0381166102fb5760405162461bcd60e51b81526004016101559061043c565b61030481610372565b50565b61030f61036e565b6001600160a01b0316610320610217565b6001600160a01b0316146103465760405162461bcd60e51b815260040161015590610482565b6001600160a01b0382166000908152600160205260408120805483929061028d9084906104ce565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103d957600080fd5b919050565b6000602082840312156103ef578081fd5b6103f8826103c2565b9392505050565b60008060408385031215610411578081fd5b61041a836103c2565b946020939093013593505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b918252602082015260400190565b600082198211156104e1576104e16104fd565b500190565b6000828210156104f8576104f86104fd565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200fdb06f07da3d5679413ce5e5cc5e979036d93a81e04e8dba248f3de7af8c7d764736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8FDF08DF EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xF3C40C4B EQ PUSH2 0x103 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x310EC4A7 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x1CC JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST PUSH2 0x11E PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12F PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x15E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD CALLER SWAP2 SWAP1 PUSH32 0x3691D1A86D99355E52B689CA70A7BDF6D80763237A6AA06E5FA43964EAC7244B SWAP1 PUSH2 0x1AE SWAP1 DUP6 SWAP1 DUP2 SWAP1 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E5 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH2 0x215 PUSH1 0x0 PUSH2 0x372 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23F PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x265 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x28D SWAP1 DUP5 SWAP1 PUSH2 0x4E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x29E PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AF PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x43C JUMP JUMPDEST PUSH2 0x304 DUP2 PUSH2 0x372 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x30F PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x320 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x28D SWAP1 DUP5 SWAP1 PUSH2 0x4CE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3F8 DUP3 PUSH2 0x3C2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x411 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x41A DUP4 PUSH2 0x3C2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4E1 JUMPI PUSH2 0x4E1 PUSH2 0x4FD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4F8 JUMPI PUSH2 0x4F8 PUSH2 0x4FD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xDB MOD CREATE PUSH30 0xA3D5679413CE5E5CC5E979036D93A81E04E8DBA248F3DE7AF8C7D764736F PUSH13 0x63430008010033000000000000 ",
							"sourceMap": "167:999:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:187;;;;;;:::i;:::-;;:::i;:::-;;522:41;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:1;;;:::i;1036:85::-;;;:::i;:::-;;;;;;;:::i;891:115:0:-;;;;;;:::i;:::-;;:::i;1918:198:1:-;;;;;;:::i;:::-;;:::i;771:112:0:-;;;;;;:::i;:::-;;:::i;576:187::-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;654:15:0;::::1;;::::0;;;:9:::1;:15;::::0;;;;;;:25;;;695:60;718:10:::1;::::0;654:15;695:60:::1;::::0;::::1;::::0;672:7;;;;695:60:::1;:::i;:::-;;;;;;;;576:187:::0;;:::o;522:41::-;;;;;;;;;;;;;:::o;1668:101:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;1036:85;:::o;891:115:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;972:15:0;::::1;;::::0;;;:9:::1;:15;::::0;;;;:26;;991:7;;972:15;:26:::1;::::0;991:7;;972:26:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;891:115:0:o;1918:198:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:1::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;771:112:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;849:15:0;::::1;;::::0;;;:9:::1;:15;::::0;;;;:26;;868:7;;849:15;:26:::1;::::0;868:7;;849:26:::1;:::i;640:96:2:-:0;719:10;640:96;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;14:175:3:-;84:20;;-1:-1:-1;;;;;133:31:3;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:3:o;397:266::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;653:2;638:18;;;;625:32;;-1:-1:-1;;;484:179:3:o;668:203::-;-1:-1:-1;;;;;832:32:3;;;;814:51;;802:2;787:18;;769:102::o;876:402::-;1078:2;1060:21;;;1117:2;1097:18;;;1090:30;1156:34;1151:2;1136:18;;1129:62;-1:-1:-1;;;1222:2:3;1207:18;;1200:36;1268:3;1253:19;;1050:228::o;1283:356::-;1485:2;1467:21;;;1504:18;;;1497:30;1563:34;1558:2;1543:18;;1536:62;1630:2;1615:18;;1457:182::o;1644:177::-;1790:25;;;1778:2;1763:18;;1745:76::o;1826:248::-;2000:25;;;2056:2;2041:18;;2034:34;1988:2;1973:18;;1955:119::o;2079:128::-;;2150:1;2146:6;2143:1;2140:13;2137:2;;;2156:18;;:::i;:::-;-1:-1:-1;2192:9:3;;2127:80::o;2212:125::-;;2280:1;2277;2274:8;2271:2;;;2285:18;;:::i;:::-;-1:-1:-1;2322:9:3;;2261:76::o;2342:127::-;2403:10;2398:3;2394:20;2391:1;2384:31;2434:4;2431:1;2424:15;2458:4;2455:1;2448:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "270600",
								"executionCost": "22780",
								"totalCost": "293380"
							},
							"external": {
								"addAllowance(address,uint256)": "22308",
								"allowance(address)": "1275",
								"owner()": "1070",
								"reduceAllowance(address,uint256)": "22261",
								"renounceOwnership()": "23549",
								"setAllowance(address,uint256)": "23485",
								"transferOwnership(address)": "23743"
							},
							"internal": {
								"isOwner()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 1166,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1166,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200fdb06f07da3d5679413ce5e5cc5e979036d93a81e04e8dba248f3de7af8c7d764736f6c63430008010033",
									".code": [
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "8FDF08DF"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "F3C40C4B"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "310EC4A7"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "3E5BEAB9"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 1166,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 654,
											"end": 669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 654,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 654,
											"end": 679,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 654,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 718,
											"end": 728,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 718,
											"end": 728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "3691D1A86D99355E52B689CA70A7BDF6D80763237A6AA06E5FA43964EAC7244B"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 679,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 672,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 972,
											"end": 987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 972,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 972,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 991,
											"end": 998,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 991,
											"end": 998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 849,
											"end": 864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 849,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 849,
											"end": 875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 868,
											"end": 875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 868,
											"end": 875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 849,
											"end": 875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 868,
											"end": 875,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 868,
											"end": 875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 849,
											"end": 875,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 113,
											"end": 115,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 65,
											"end": 189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 65,
											"end": 189,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 397,
											"end": 663,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 526,
											"end": 528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 505,
											"end": 512,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 501,
											"end": 524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 497,
											"end": 529,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 494,
											"end": 496,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 532,
											"end": 554,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 494,
											"end": 496,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 565,
											"end": 606,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 625,
											"end": 657,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 625,
											"end": 657,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 484,
											"end": 663,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 871,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 668,
											"end": 871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 832,
											"end": 864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 832,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 832,
											"end": 864,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 814,
											"end": 865,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 814,
											"end": 865,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 802,
											"end": 804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 787,
											"end": 805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 769,
											"end": 871,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 876,
											"end": 1278,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 876,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1081,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1081,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1119,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1190,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1151,
											"end": 1153,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1224,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1236,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1278,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1283,
											"end": 1639,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1283,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1487,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1488,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1488,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1558,
											"end": 1560,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1561,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1598,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1632,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1639,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1644,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1780,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1781,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1781,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1821,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1826,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1826,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2025,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2068,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2074,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2079,
											"end": 2207,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2079,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2127,
											"end": 2207,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2212,
											"end": 2337,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2212,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2281,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2282,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2285,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2285,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2285,
											"end": 2303,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2285,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2337,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2342,
											"end": 2469,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2342,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2413,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2398,
											"end": 2401,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2394,
											"end": 2414,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2391,
											"end": 2392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2438,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2431,
											"end": 2432,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2463,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addAllowance(address,uint256)": "f3c40c4b",
							"allowance(address)": "3e5beab9",
							"owner()": "8da5cb5b",
							"reduceAllowance(address,uint256)": "8fdf08df",
							"renounceOwnership()": "715018a6",
							"setAllowance(address,uint256)": "310ec4a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_forWho\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_byWhom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newAmount\",\"type\":\"uint256\"}],\"name\":\"AllowanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reduceAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/02_simple/SharedWallet.sol\":\"Allowance\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/02_simple/SharedWallet.sol\":{\"keccak256\":\"0x1f16523efefae575e8599493ed1184ad388f45a37be4eab1ee79ef7b1c5c61c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc5cb79dd41688bdadeee772cf1867505e0e59b1495bd18329ef52c2b358713\",\"dweb:/ipfs/QmeHQuroPGrXn79vGuNpc4ZBNH6jYLneZCtQVDVbUCjNHo\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 174,
								"contract": "contracts/02_simple/SharedWallet.sol:Allowance",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 30,
								"contract": "contracts/02_simple/SharedWallet.sol:Allowance",
								"label": "allowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SharedWallet": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_forWho",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_byWhom",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_oldAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newAmount",
									"type": "uint256"
								}
							],
							"name": "AllowanceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "MoneyReceived",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "MoneySent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "reduceAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/02_simple/SharedWallet.sol\":1170:1715  contract SharedWallet is Allowance {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:950  _msgSender */\n  tag_6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/02_simple/SharedWallet.sol\":1170:1715  contract SharedWallet is Allowance {\r... */\n  jump(tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/02_simple/SharedWallet.sol\":1170:1715  contract SharedWallet is Allowance {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/02_simple/SharedWallet.sol\":1170:1715  contract SharedWallet is Allowance {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8fdf08df\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8fdf08df\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf274c897\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf3c40c4b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x310ec4a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e5beab9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/02_simple/SharedWallet.sol\":576:763  function setAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/02_simple/SharedWallet.sol\":522:563  mapping(address => uint) public allowance */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_15\n      tag_28\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"contracts/02_simple/SharedWallet.sol\":891:1006  function reduceAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_15\n      tag_36\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n        /* \"contracts/02_simple/SharedWallet.sol\":1349:1665  function withdrawMoney(address payable _to, uint _amount) public ownerOrAllowed(_amount) {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_15\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_15\n      tag_45\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"contracts/02_simple/SharedWallet.sol\":771:883  function addAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_15\n      tag_49\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contracts/02_simple/SharedWallet.sol\":576:763  function setAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_52\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_54\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":654:669  allowance[_who] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/02_simple/SharedWallet.sol\":654:663  allowance */\n      0x01\n        /* \"contracts/02_simple/SharedWallet.sol\":654:669  allowance[_who] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/02_simple/SharedWallet.sol\":654:679  allowance[_who] = _amount */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/02_simple/SharedWallet.sol\":695:755  AllowanceChanged(_who, msg.sender, allowance[_who], _amount) */\n      mload\n        /* \"contracts/02_simple/SharedWallet.sol\":718:728  msg.sender */\n      caller\n      swap2\n        /* \"contracts/02_simple/SharedWallet.sol\":654:669  allowance[_who] */\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":695:755  AllowanceChanged(_who, msg.sender, allowance[_who], _amount) */\n      0x3691d1a86d99355e52b689ca70a7bdf6d80763237a6aa06e5fa43964eac7244b\n      swap1\n      tag_59\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":672:679  _amount */\n      dup6\n      swap1\n      dup2\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":695:755  AllowanceChanged(_who, msg.sender, allowance[_who], _amount) */\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/02_simple/SharedWallet.sol\":576:763  function setAllowance(address _who, uint _amount) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/02_simple/SharedWallet.sol\":522:563  mapping(address => uint) public allowance */\n    tag_23:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/02_simple/SharedWallet.sol\":891:1006  function reduceAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":972:987  allowance[_who] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/02_simple/SharedWallet.sol\":972:981  allowance */\n      0x01\n        /* \"contracts/02_simple/SharedWallet.sol\":972:987  allowance[_who] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/02_simple/SharedWallet.sol\":972:998  allowance[_who] -= _amount */\n      dup1\n      sload\n        /* \"contracts/02_simple/SharedWallet.sol\":991:998  _amount */\n      dup4\n      swap3\n        /* \"contracts/02_simple/SharedWallet.sol\":972:987  allowance[_who] */\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":972:998  allowance[_who] -= _amount */\n      tag_76\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":991:998  _amount */\n      dup5\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":972:998  allowance[_who] -= _amount */\n      tag_77\n      jump\t// in\n    tag_76:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/02_simple/SharedWallet.sol\":891:1006  function reduceAllowance(address _who, uint _amount) public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/02_simple/SharedWallet.sol\":1349:1665  function withdrawMoney(address payable _to, uint _amount) public ownerOrAllowed(_amount) {\r... */\n    tag_42:\n        /* \"contracts/02_simple/SharedWallet.sol\":1429:1436  _amount */\n      dup1\n        /* \"contracts/02_simple/SharedWallet.sol\":1073:1082  isOwner() */\n      tag_79\n        /* \"contracts/02_simple/SharedWallet.sol\":1073:1080  isOwner */\n      tag_80\n        /* \"contracts/02_simple/SharedWallet.sol\":1073:1082  isOwner() */\n      jump\t// in\n    tag_79:\n        /* \"contracts/02_simple/SharedWallet.sol\":1073:1118  isOwner() || allowance[msg.sender] >= _amount */\n      dup1\n      tag_81\n      jumpi\n      pop\n        /* \"contracts/02_simple/SharedWallet.sol\":1096:1106  msg.sender */\n      caller\n        /* \"contracts/02_simple/SharedWallet.sol\":1086:1107  allowance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/02_simple/SharedWallet.sol\":1086:1095  allowance */\n      0x01\n        /* \"contracts/02_simple/SharedWallet.sol\":1086:1107  allowance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/02_simple/SharedWallet.sol\":1086:1118  allowance[msg.sender] >= _amount */\n      dup2\n      gt\n      iszero\n        /* \"contracts/02_simple/SharedWallet.sol\":1073:1118  isOwner() || allowance[msg.sender] >= _amount */\n    tag_81:\n        /* \"contracts/02_simple/SharedWallet.sol\":1065:1143  require(isOwner() || allowance[msg.sender] >= _amount, \"You are not allowed!\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_84\n      jump\t// in\n    tag_82:\n        /* \"contracts/02_simple/SharedWallet.sol\":1468:1489  address(this).balance */\n      selfbalance\n        /* \"contracts/02_simple/SharedWallet.sol\":1457:1464  _amount */\n      dup3\n        /* \"contracts/02_simple/SharedWallet.sol\":1457:1489  _amount <= address(this).balance */\n      gt\n      iszero\n        /* \"contracts/02_simple/SharedWallet.sol\":1449:1527  require(_amount <= address(this).balance, \"Contract doesn't own enough money\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_88\n      jump\t// in\n    tag_86:\n        /* \"contracts/02_simple/SharedWallet.sol\":1542:1551  isOwner() */\n      tag_89\n        /* \"contracts/02_simple/SharedWallet.sol\":1542:1549  isOwner */\n      tag_80\n        /* \"contracts/02_simple/SharedWallet.sol\":1542:1551  isOwner() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/02_simple/SharedWallet.sol\":1538:1616  if(!isOwner()) {\r... */\n      tag_91\n      jumpi\n        /* \"contracts/02_simple/SharedWallet.sol\":1568:1604  reduceAllowance(msg.sender, _amount) */\n      tag_91\n        /* \"contracts/02_simple/SharedWallet.sol\":1584:1594  msg.sender */\n      caller\n        /* \"contracts/02_simple/SharedWallet.sol\":1596:1603  _amount */\n      dup4\n        /* \"contracts/02_simple/SharedWallet.sol\":1568:1583  reduceAllowance */\n      tag_37\n        /* \"contracts/02_simple/SharedWallet.sol\":1568:1604  reduceAllowance(msg.sender, _amount) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/02_simple/SharedWallet.sol\":1626:1647  _to.transfer(_amount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":1626:1638  _to.transfer */\n      dup5\n      and\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":1626:1647  _to.transfer(_amount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":1639:1646  _amount */\n      dup5\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":1626:1647  _to.transfer(_amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/02_simple/SharedWallet.sol\":1639:1646  _amount */\n      dup6\n        /* \"contracts/02_simple/SharedWallet.sol\":1626:1638  _to.transfer */\n      dup9\n        /* \"contracts/02_simple/SharedWallet.sol\":1626:1647  _to.transfer(_amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n        /* \"contracts/02_simple/SharedWallet.sol\":1349:1665  function withdrawMoney(address payable _to, uint _amount) public ownerOrAllowed(_amount) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_102\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_103\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/02_simple/SharedWallet.sol\":771:883  function addAllowance(address _who, uint _amount) public onlyOwner {\r... */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_106\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":849:864  allowance[_who] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/02_simple/SharedWallet.sol\":849:858  allowance */\n      0x01\n        /* \"contracts/02_simple/SharedWallet.sol\":849:864  allowance[_who] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/02_simple/SharedWallet.sol\":849:875  allowance[_who] += _amount */\n      dup1\n      sload\n        /* \"contracts/02_simple/SharedWallet.sol\":868:875  _amount */\n      dup4\n      swap3\n        /* \"contracts/02_simple/SharedWallet.sol\":849:864  allowance[_who] */\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":849:875  allowance[_who] += _amount */\n      tag_76\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":868:875  _amount */\n      dup5\n      swap1\n        /* \"contracts/02_simple/SharedWallet.sol\":849:875  allowance[_who] += _amount */\n      tag_111\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/02_simple/SharedWallet.sol\":420:514  function isOwner() internal view returns(bool) {\r... */\n    tag_80:\n        /* \"contracts/02_simple/SharedWallet.sol\":461:465  bool */\n      0x00\n        /* \"contracts/02_simple/SharedWallet.sol\":496:506  msg.sender */\n      caller\n        /* \"contracts/02_simple/SharedWallet.sol\":485:492  owner() */\n      tag_115\n        /* \"contracts/02_simple/SharedWallet.sol\":485:490  owner */\n      tag_31\n        /* \"contracts/02_simple/SharedWallet.sol\":485:492  owner() */\n      jump\t// in\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/02_simple/SharedWallet.sol\":485:506  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/02_simple/SharedWallet.sol\":478:506  return owner() == msg.sender */\n      swap1\n      pop\n        /* \"contracts/02_simple/SharedWallet.sol\":420:514  function isOwner() internal view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:273   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_118:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:243   */\n      tag_119\n        /* \"#utility.yul\":237:242   */\n      dup2\n        /* \"#utility.yul\":210:243   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":262:267   */\n      swap4\n        /* \"#utility.yul\":84:273   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":278:613   */\n    tag_41:\n      0x00\n      dup1\n        /* \"#utility.yul\":415:417   */\n      0x40\n        /* \"#utility.yul\":403:412   */\n      dup4\n        /* \"#utility.yul\":394:401   */\n      dup6\n        /* \"#utility.yul\":390:413   */\n      sub\n        /* \"#utility.yul\":386:418   */\n      slt\n        /* \"#utility.yul\":383:385   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":436:442   */\n      dup1\n        /* \"#utility.yul\":428:434   */\n      dup2\n        /* \"#utility.yul\":421:443   */\n      revert\n        /* \"#utility.yul\":383:385   */\n    tag_122:\n        /* \"#utility.yul\":480:489   */\n      dup3\n        /* \"#utility.yul\":467:490   */\n      calldataload\n        /* \"#utility.yul\":499:532   */\n      tag_123\n        /* \"#utility.yul\":526:531   */\n      dup2\n        /* \"#utility.yul\":499:532   */\n      tag_120\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":551:556   */\n      swap5\n        /* \"#utility.yul\":603:605   */\n      0x20\n        /* \"#utility.yul\":588:606   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":575:607   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":373:613   */\n      jump\t// out\n        /* \"#utility.yul\":618:945   */\n    tag_17:\n      0x00\n      dup1\n        /* \"#utility.yul\":747:749   */\n      0x40\n        /* \"#utility.yul\":735:744   */\n      dup4\n        /* \"#utility.yul\":726:733   */\n      dup6\n        /* \"#utility.yul\":722:745   */\n      sub\n        /* \"#utility.yul\":718:750   */\n      slt\n        /* \"#utility.yul\":715:717   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":768:774   */\n      dup2\n        /* \"#utility.yul\":760:766   */\n      dup3\n        /* \"#utility.yul\":753:775   */\n      revert\n        /* \"#utility.yul\":950:1153   */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1114:1146   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1096:1147   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1084:1086   */\n      0x20\n        /* \"#utility.yul\":1069:1087   */\n      add\n      swap1\n        /* \"#utility.yul\":1051:1153   */\n      jump\t// out\n        /* \"#utility.yul\":1158:1560   */\n    tag_102:\n        /* \"#utility.yul\":1360:1362   */\n      0x20\n        /* \"#utility.yul\":1342:1363   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1399:1401   */\n      0x26\n        /* \"#utility.yul\":1379:1397   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1372:1402   */\n      mstore\n        /* \"#utility.yul\":1438:1472   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1433:1435   */\n      0x40\n        /* \"#utility.yul\":1418:1436   */\n      dup3\n      add\n        /* \"#utility.yul\":1411:1473   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1504:1506   */\n      0x60\n        /* \"#utility.yul\":1489:1507   */\n      dup3\n      add\n        /* \"#utility.yul\":1482:1518   */\n      mstore\n        /* \"#utility.yul\":1550:1553   */\n      0x80\n        /* \"#utility.yul\":1535:1554   */\n      add\n      swap1\n        /* \"#utility.yul\":1332:1560   */\n      jump\t// out\n        /* \"#utility.yul\":1565:1962   */\n    tag_88:\n        /* \"#utility.yul\":1767:1769   */\n      0x20\n        /* \"#utility.yul\":1749:1770   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1806:1808   */\n      0x21\n        /* \"#utility.yul\":1786:1804   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1779:1809   */\n      mstore\n        /* \"#utility.yul\":1845:1879   */\n      0x436f6e747261637420646f65736e2774206f776e20656e6f756768206d6f6e65\n        /* \"#utility.yul\":1840:1842   */\n      0x40\n        /* \"#utility.yul\":1825:1843   */\n      dup3\n      add\n        /* \"#utility.yul\":1818:1880   */\n      mstore\n      shl(0xf8, 0x79)\n        /* \"#utility.yul\":1911:1913   */\n      0x60\n        /* \"#utility.yul\":1896:1914   */\n      dup3\n      add\n        /* \"#utility.yul\":1889:1920   */\n      mstore\n        /* \"#utility.yul\":1952:1955   */\n      0x80\n        /* \"#utility.yul\":1937:1956   */\n      add\n      swap1\n        /* \"#utility.yul\":1739:1962   */\n      jump\t// out\n        /* \"#utility.yul\":1967:2323   */\n    tag_57:\n        /* \"#utility.yul\":2169:2171   */\n      0x20\n        /* \"#utility.yul\":2151:2172   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2188:2206   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2181:2211   */\n      mstore\n        /* \"#utility.yul\":2247:2281   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2242:2244   */\n      0x40\n        /* \"#utility.yul\":2227:2245   */\n      dup3\n      add\n        /* \"#utility.yul\":2220:2282   */\n      mstore\n        /* \"#utility.yul\":2314:2316   */\n      0x60\n        /* \"#utility.yul\":2299:2317   */\n      add\n      swap1\n        /* \"#utility.yul\":2141:2323   */\n      jump\t// out\n        /* \"#utility.yul\":2328:2672   */\n    tag_84:\n        /* \"#utility.yul\":2530:2532   */\n      0x20\n        /* \"#utility.yul\":2512:2533   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2569:2571   */\n      0x14\n        /* \"#utility.yul\":2549:2567   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2542:2572   */\n      mstore\n      shl(0x60, 0x596f7520617265206e6f7420616c6c6f77656421)\n        /* \"#utility.yul\":2603:2605   */\n      0x40\n        /* \"#utility.yul\":2588:2606   */\n      dup3\n      add\n        /* \"#utility.yul\":2581:2631   */\n      mstore\n        /* \"#utility.yul\":2663:2665   */\n      0x60\n        /* \"#utility.yul\":2648:2666   */\n      add\n      swap1\n        /* \"#utility.yul\":2502:2672   */\n      jump\t// out\n        /* \"#utility.yul\":2677:2854   */\n    tag_25:\n        /* \"#utility.yul\":2823:2848   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2811:2813   */\n      0x20\n        /* \"#utility.yul\":2796:2814   */\n      add\n      swap1\n        /* \"#utility.yul\":2778:2854   */\n      jump\t// out\n        /* \"#utility.yul\":2859:3107   */\n    tag_60:\n        /* \"#utility.yul\":3033:3058   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":3089:3091   */\n      0x20\n        /* \"#utility.yul\":3074:3092   */\n      dup3\n      add\n        /* \"#utility.yul\":3067:3101   */\n      mstore\n        /* \"#utility.yul\":3021:3023   */\n      0x40\n        /* \"#utility.yul\":3006:3024   */\n      add\n      swap1\n        /* \"#utility.yul\":2988:3107   */\n      jump\t// out\n        /* \"#utility.yul\":3112:3240   */\n    tag_111:\n      0x00\n        /* \"#utility.yul\":3183:3184   */\n      dup3\n        /* \"#utility.yul\":3179:3185   */\n      not\n        /* \"#utility.yul\":3176:3177   */\n      dup3\n        /* \"#utility.yul\":3173:3186   */\n      gt\n        /* \"#utility.yul\":3170:3172   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":3189:3207   */\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      pop\n        /* \"#utility.yul\":3225:3234   */\n      add\n      swap1\n        /* \"#utility.yul\":3160:3240   */\n      jump\t// out\n        /* \"#utility.yul\":3245:3370   */\n    tag_77:\n      0x00\n        /* \"#utility.yul\":3313:3314   */\n      dup3\n        /* \"#utility.yul\":3310:3311   */\n      dup3\n        /* \"#utility.yul\":3307:3315   */\n      lt\n        /* \"#utility.yul\":3304:3306   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":3318:3336   */\n      tag_140\n      tag_137\n      jump\t// in\n    tag_140:\n      pop\n        /* \"#utility.yul\":3355:3364   */\n      sub\n      swap1\n        /* \"#utility.yul\":3294:3370   */\n      jump\t// out\n        /* \"#utility.yul\":3375:3502   */\n    tag_137:\n        /* \"#utility.yul\":3436:3446   */\n      0x4e487b71\n        /* \"#utility.yul\":3431:3434   */\n      0xe0\n        /* \"#utility.yul\":3427:3447   */\n      shl\n        /* \"#utility.yul\":3424:3425   */\n      0x00\n        /* \"#utility.yul\":3417:3448   */\n      mstore\n        /* \"#utility.yul\":3467:3471   */\n      0x11\n        /* \"#utility.yul\":3464:3465   */\n      0x04\n        /* \"#utility.yul\":3457:3472   */\n      mstore\n        /* \"#utility.yul\":3491:3495   */\n      0x24\n        /* \"#utility.yul\":3488:3489   */\n      0x00\n        /* \"#utility.yul\":3481:3496   */\n      revert\n        /* \"#utility.yul\":3507:3640   */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3584:3615   */\n      dup2\n      and\n        /* \"#utility.yul\":3574:3616   */\n      dup2\n      eq\n        /* \"#utility.yul\":3564:3566   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":3630:3631   */\n      0x00\n        /* \"#utility.yul\":3627:3628   */\n      dup1\n        /* \"#utility.yul\":3620:3632   */\n      revert\n\n    auxdata: 0xa2646970667358221220cb1d33e014dc6767e2d40f5a167ce8039c27b6d78da0938cebb500fb9deaf23664736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610716806100896000396000f3fe60806040526004361061007f5760003560e01c80638fdf08df1161004e5780638fdf08df1461011a578063f274c8971461013a578063f2fde38b1461015a578063f3c40c4b1461017a57610086565b8063310ec4a71461008b5780633e5beab9146100ad578063715018a6146100e35780638da5cb5b146100f857610086565b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a636600461055f565b61019a565b005b3480156100b957600080fd5b506100cd6100c8366004610511565b61023e565b6040516100da919061066f565b60405180910390f35b3480156100ef57600080fd5b506100ab610250565b34801561010457600080fd5b5061010d61029b565b6040516100da9190610571565b34801561012657600080fd5b506100ab61013536600461055f565b6102aa565b34801561014657600080fd5b506100ab610155366004610534565b61031a565b34801561016657600080fd5b506100ab610175366004610511565b6103cb565b34801561018657600080fd5b506100ab61019536600461055f565b61043c565b6101a26104a3565b6001600160a01b03166101b361029b565b6001600160a01b0316146101e25760405162461bcd60e51b81526004016101d99061060c565b60405180910390fd5b6001600160a01b03821660008181526001602052604090819020839055513391907f3691d1a86d99355e52b689ca70a7bdf6d80763237a6aa06e5fa43964eac7244b906102329085908190610678565b60405180910390a35050565b60016020526000908152604090205481565b6102586104a3565b6001600160a01b031661026961029b565b6001600160a01b03161461028f5760405162461bcd60e51b81526004016101d99061060c565b61029960006104a7565b565b6000546001600160a01b031690565b6102b26104a3565b6001600160a01b03166102c361029b565b6001600160a01b0316146102e95760405162461bcd60e51b81526004016101d99061060c565b6001600160a01b0382166000908152600160205260408120805483929061031190849061069e565b90915550505050565b806103236104f7565b8061033d5750336000908152600160205260409020548111155b6103595760405162461bcd60e51b81526004016101d990610641565b478211156103795760405162461bcd60e51b81526004016101d9906105cb565b6103816104f7565b61038f5761038f33836102aa565b6040516001600160a01b0384169083156108fc029084906000818181858888f193505050501580156103c5573d6000803e3d6000fd5b50505050565b6103d36104a3565b6001600160a01b03166103e461029b565b6001600160a01b03161461040a5760405162461bcd60e51b81526004016101d99061060c565b6001600160a01b0381166104305760405162461bcd60e51b81526004016101d990610585565b610439816104a7565b50565b6104446104a3565b6001600160a01b031661045561029b565b6001600160a01b03161461047b5760405162461bcd60e51b81526004016101d99061060c565b6001600160a01b03821660009081526001602052604081208054839290610311908490610686565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60003361050261029b565b6001600160a01b031614905090565b600060208284031215610522578081fd5b813561052d816106cb565b9392505050565b60008060408385031215610546578081fd5b8235610551816106cb565b946020939093013593505050565b60008060408385031215610546578182fd5b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526021908201527f436f6e747261637420646f65736e2774206f776e20656e6f756768206d6f6e656040820152607960f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260149082015273596f7520617265206e6f7420616c6c6f7765642160601b604082015260600190565b90815260200190565b918252602082015260400190565b60008219821115610699576106996106b5565b500190565b6000828210156106b0576106b06106b5565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461043957600080fdfea2646970667358221220cb1d33e014dc6767e2d40f5a167ce8039c27b6d78da0938cebb500fb9deaf23664736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21 PUSH2 0x1C PUSH2 0x26 JUMP JUMPDEST PUSH2 0x2A JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x716 DUP1 PUSH2 0x89 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8FDF08DF GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8FDF08DF EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xF3C40C4B EQ PUSH2 0x17A JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x310EC4A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF8 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x250 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x571 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B3 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD CALLER SWAP2 SWAP1 PUSH32 0x3691D1A86D99355E52B689CA70A7BDF6D80763237A6AA06E5FA43964EAC7244B SWAP1 PUSH2 0x232 SWAP1 DUP6 SWAP1 DUP2 SWAP1 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x269 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x28F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x60C JUMP JUMPDEST PUSH2 0x299 PUSH1 0x0 PUSH2 0x4A7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C3 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x311 SWAP1 DUP5 SWAP1 PUSH2 0x69E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x323 PUSH2 0x4F7 JUMP JUMPDEST DUP1 PUSH2 0x33D JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x641 JUMP JUMPDEST SELFBALANCE DUP3 GT ISZERO PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x381 PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x38F JUMPI PUSH2 0x38F CALLER DUP4 PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E4 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH2 0x439 DUP2 PUSH2 0x4A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x444 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x455 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x311 SWAP1 DUP5 SWAP1 PUSH2 0x686 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x502 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x522 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x52D DUP2 PUSH2 0x6CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x546 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x551 DUP2 PUSH2 0x6CB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x546 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420646F65736E2774206F776E20656E6F756768206D6F6E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x596F7520617265206E6F7420616C6C6F77656421 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x699 JUMPI PUSH2 0x699 PUSH2 0x6B5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x6B0 JUMPI PUSH2 0x6B0 PUSH2 0x6B5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SAR CALLER 0xE0 EQ 0xDC PUSH8 0x67E2D40F5A167CE8 SUB SWAP13 0x27 0xB6 0xD7 DUP14 LOG0 SWAP4 DUP13 0xEB 0xB5 STOP 0xFB SWAP14 0xEA CALLCODE CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "1170:545:0:-:0;;;;;;;;;;;;-1:-1:-1;921:32:1;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;1170:545:0;;640:96:2;719:10;640:96;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;1170:545:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3642:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:189:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:2:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "237:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "252:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "262:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "252:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:259:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "373:240:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "419:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "428:6:3"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "436:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "421:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "421:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "421:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "394:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "403:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "390:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "390:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "415:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "386:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:32:3"
															},
															"nodeType": "YulIf",
															"src": "383:2:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "454:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "480:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "467:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "458:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "526:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "499:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "499:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "499:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "551:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "592:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "603:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "588:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "588:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "575:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "331:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "342:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "354:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "362:6:3",
														"type": ""
													}
												],
												"src": "278:335:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "705:240:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "751:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "760:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "768:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "753:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "753:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "753:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "726:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "735:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "722:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "722:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "747:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "718:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:32:3"
															},
															"nodeType": "YulIf",
															"src": "715:2:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "786:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "812:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "799:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "790:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "858:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "831:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "831:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "831:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "873:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "883:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "873:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "897:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "924:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "935:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "920:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "920:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "907:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "897:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "663:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "674:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "686:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "694:6:3",
														"type": ""
													}
												],
												"src": "618:327:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1051:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1061:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1073:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1084:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1069:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1069:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1061:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1103:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1118:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1134:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1139:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1130:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1130:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1143:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1126:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1126:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1114:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1114:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1096:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1096:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1020:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1031:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1042:4:3",
														"type": ""
													}
												],
												"src": "950:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1332:228:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1383:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1394:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1379:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1379:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1399:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1372:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1372:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1372:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1422:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1433:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1438:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1411:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1493:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1504:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1489:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1489:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1509:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1482:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1482:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1482:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1527:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1539:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1535:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1535:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1527:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1309:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1323:4:3",
														"type": ""
													}
												],
												"src": "1158:402:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1739:223:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1756:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1767:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1749:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1790:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1801:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1786:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1786:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1806:2:3",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1779:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1779:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1829:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1840:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1825:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1845:34:3",
																		"type": "",
																		"value": "Contract doesn't own enough mone"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1818:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1900:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1911:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1896:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1916:3:3",
																		"type": "",
																		"value": "y"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:31:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1929:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1941:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1937:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1929:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a67ac57806224cd53bc844bb5ddb22cb59fdd52500ecc88ac63908f00606d0f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1716:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1730:4:3",
														"type": ""
													}
												],
												"src": "1565:397:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2141:182:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2158:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2151:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2151:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2181:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2231:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2242:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2247:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2220:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2220:62:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2291:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2303:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2314:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2299:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2291:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2118:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2132:4:3",
														"type": ""
													}
												],
												"src": "1967:356:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2502:170:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2519:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2530:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2512:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2512:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2512:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2553:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2564:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2549:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2549:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2569:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2542:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2592:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2603:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2608:22:3",
																		"type": "",
																		"value": "You are not allowed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2581:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2581:50:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2581:50:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2640:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2652:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2663:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2648:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2648:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2640:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f9f18e7152ecb482b05bc745430c2e40c72dfba99431368b9d2fc7e8b7ebead8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2479:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2493:4:3",
														"type": ""
													}
												],
												"src": "2328:344:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2778:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2788:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2800:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2811:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2796:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2796:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2788:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2830:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2841:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2823:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2823:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2823:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2747:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2758:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2769:4:3",
														"type": ""
													}
												],
												"src": "2677:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2988:119:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2998:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3010:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3006:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2998:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3040:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3051:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3033:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3033:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3078:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3089:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3074:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3074:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3094:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3067:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3067:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3067:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2949:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2960:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2968:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2979:4:3",
														"type": ""
													}
												],
												"src": "2859:248:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3160:80:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3187:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3189:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3189:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3189:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3176:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3183:1:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3179:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3179:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3173:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:13:3"
															},
															"nodeType": "YulIf",
															"src": "3170:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3218:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3229:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3232:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3143:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3146:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3152:3:3",
														"type": ""
													}
												],
												"src": "3112:128:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3294:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3316:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3318:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3318:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3318:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3310:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3313:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3307:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3307:8:3"
															},
															"nodeType": "YulIf",
															"src": "3304:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3347:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3359:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3362:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3355:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3347:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3276:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3279:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3285:4:3",
														"type": ""
													}
												],
												"src": "3245:125:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3407:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3424:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3431:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3436:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3427:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3427:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3417:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3464:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3467:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3457:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3457:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3457:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3488:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3491:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3481:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3481:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3375:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3554:86:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3618:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3627:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3630:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3620:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3620:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3620:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3577:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3588:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3603:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3608:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3599:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3599:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3612:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "3595:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3595:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3584:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3584:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3574:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3574:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3567:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3567:50:3"
															},
															"nodeType": "YulIf",
															"src": "3564:2:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3543:5:3",
														"type": ""
													}
												],
												"src": "3507:133:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a67ac57806224cd53bc844bb5ddb22cb59fdd52500ecc88ac63908f00606d0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Contract doesn't own enough mone\")\n        mstore(add(headStart, 96), \"y\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f9f18e7152ecb482b05bc745430c2e40c72dfba99431368b9d2fc7e8b7ebead8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"You are not allowed!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007f5760003560e01c80638fdf08df1161004e5780638fdf08df1461011a578063f274c8971461013a578063f2fde38b1461015a578063f3c40c4b1461017a57610086565b8063310ec4a71461008b5780633e5beab9146100ad578063715018a6146100e35780638da5cb5b146100f857610086565b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a636600461055f565b61019a565b005b3480156100b957600080fd5b506100cd6100c8366004610511565b61023e565b6040516100da919061066f565b60405180910390f35b3480156100ef57600080fd5b506100ab610250565b34801561010457600080fd5b5061010d61029b565b6040516100da9190610571565b34801561012657600080fd5b506100ab61013536600461055f565b6102aa565b34801561014657600080fd5b506100ab610155366004610534565b61031a565b34801561016657600080fd5b506100ab610175366004610511565b6103cb565b34801561018657600080fd5b506100ab61019536600461055f565b61043c565b6101a26104a3565b6001600160a01b03166101b361029b565b6001600160a01b0316146101e25760405162461bcd60e51b81526004016101d99061060c565b60405180910390fd5b6001600160a01b03821660008181526001602052604090819020839055513391907f3691d1a86d99355e52b689ca70a7bdf6d80763237a6aa06e5fa43964eac7244b906102329085908190610678565b60405180910390a35050565b60016020526000908152604090205481565b6102586104a3565b6001600160a01b031661026961029b565b6001600160a01b03161461028f5760405162461bcd60e51b81526004016101d99061060c565b61029960006104a7565b565b6000546001600160a01b031690565b6102b26104a3565b6001600160a01b03166102c361029b565b6001600160a01b0316146102e95760405162461bcd60e51b81526004016101d99061060c565b6001600160a01b0382166000908152600160205260408120805483929061031190849061069e565b90915550505050565b806103236104f7565b8061033d5750336000908152600160205260409020548111155b6103595760405162461bcd60e51b81526004016101d990610641565b478211156103795760405162461bcd60e51b81526004016101d9906105cb565b6103816104f7565b61038f5761038f33836102aa565b6040516001600160a01b0384169083156108fc029084906000818181858888f193505050501580156103c5573d6000803e3d6000fd5b50505050565b6103d36104a3565b6001600160a01b03166103e461029b565b6001600160a01b03161461040a5760405162461bcd60e51b81526004016101d99061060c565b6001600160a01b0381166104305760405162461bcd60e51b81526004016101d990610585565b610439816104a7565b50565b6104446104a3565b6001600160a01b031661045561029b565b6001600160a01b03161461047b5760405162461bcd60e51b81526004016101d99061060c565b6001600160a01b03821660009081526001602052604081208054839290610311908490610686565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60003361050261029b565b6001600160a01b031614905090565b600060208284031215610522578081fd5b813561052d816106cb565b9392505050565b60008060408385031215610546578081fd5b8235610551816106cb565b946020939093013593505050565b60008060408385031215610546578182fd5b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526021908201527f436f6e747261637420646f65736e2774206f776e20656e6f756768206d6f6e656040820152607960f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260149082015273596f7520617265206e6f7420616c6c6f7765642160601b604082015260600190565b90815260200190565b918252602082015260400190565b60008219821115610699576106996106b5565b500190565b6000828210156106b0576106b06106b5565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461043957600080fdfea2646970667358221220cb1d33e014dc6767e2d40f5a167ce8039c27b6d78da0938cebb500fb9deaf23664736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8FDF08DF GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8FDF08DF EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xF3C40C4B EQ PUSH2 0x17A JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x310EC4A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF8 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x250 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x571 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B3 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD CALLER SWAP2 SWAP1 PUSH32 0x3691D1A86D99355E52B689CA70A7BDF6D80763237A6AA06E5FA43964EAC7244B SWAP1 PUSH2 0x232 SWAP1 DUP6 SWAP1 DUP2 SWAP1 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x269 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x28F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x60C JUMP JUMPDEST PUSH2 0x299 PUSH1 0x0 PUSH2 0x4A7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C3 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x311 SWAP1 DUP5 SWAP1 PUSH2 0x69E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x323 PUSH2 0x4F7 JUMP JUMPDEST DUP1 PUSH2 0x33D JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x641 JUMP JUMPDEST SELFBALANCE DUP3 GT ISZERO PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x381 PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x38F JUMPI PUSH2 0x38F CALLER DUP4 PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E4 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH2 0x439 DUP2 PUSH2 0x4A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x444 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x455 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x311 SWAP1 DUP5 SWAP1 PUSH2 0x686 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x502 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x522 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x52D DUP2 PUSH2 0x6CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x546 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x551 DUP2 PUSH2 0x6CB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x546 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420646F65736E2774206F776E20656E6F756768206D6F6E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x596F7520617265206E6F7420616C6C6F77656421 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x699 JUMPI PUSH2 0x699 PUSH2 0x6B5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x6B0 JUMPI PUSH2 0x6B0 PUSH2 0x6B5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SAR CALLER 0xE0 EQ 0xDC PUSH8 0x67E2D40F5A167CE8 SUB SWAP13 0x27 0xB6 0xD7 DUP14 LOG0 SWAP4 DUP13 0xEB 0xB5 STOP 0xFB SWAP14 0xEA CALLCODE CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "1170:545:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:187;;;;;;;;;;-1:-1:-1;576:187:0;;;;;:::i;:::-;;:::i;:::-;;522:41;;;;;;;;;;-1:-1:-1;522:41:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:1;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;891:115:0:-;;;;;;;;;;-1:-1:-1;891:115:0;;;;;:::i;:::-;;:::i;1349:316::-;;;;;;;;;;-1:-1:-1;1349:316:0;;;;;:::i;:::-;;:::i;1918:198:1:-;;;;;;;;;;-1:-1:-1;1918:198:1;;;;;:::i;:::-;;:::i;771:112:0:-;;;;;;;;;;-1:-1:-1;771:112:0;;;;;:::i;:::-;;:::i;576:187::-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;654:15:0;::::1;;::::0;;;:9:::1;:15;::::0;;;;;;:25;;;695:60;718:10:::1;::::0;654:15;695:60:::1;::::0;::::1;::::0;672:7;;;;695:60:::1;:::i;:::-;;;;;;;;576:187:::0;;:::o;522:41::-;;;;;;;;;;;;;:::o;1668:101:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;1036:85;:::o;891:115:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;972:15:0;::::1;;::::0;;;:9:::1;:15;::::0;;;;:26;;991:7;;972:15;:26:::1;::::0;991:7;;972:26:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;891:115:0:o;1349:316::-;1429:7;1073:9;:7;:9::i;:::-;:45;;;-1:-1:-1;1096:10:0;1086:21;;;;:9;:21;;;;;;:32;-1:-1:-1;1086:32:0;1073:45;1065:78;;;;-1:-1:-1;;;1065:78:0;;;;;;;:::i;:::-;1468:21:::1;1457:7;:32;;1449:78;;;;-1:-1:-1::0;;;1449:78:0::1;;;;;;;:::i;:::-;1542:9;:7;:9::i;:::-;1538:78;;1568:36;1584:10;1596:7;1568:15;:36::i;:::-;1626:21;::::0;-1:-1:-1;;;;;1626:12:0;::::1;::::0;:21;::::1;;;::::0;1639:7;;1626:21:::1;::::0;;;1639:7;1626:12;:21;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1349:316:::0;;;:::o;1918:198:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:1::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;771:112:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;849:15:0;::::1;;::::0;;;:9:::1;:15;::::0;;;;:26;;868:7;;849:15;:26:::1;::::0;868:7;;849:26:::1;:::i;640:96:2:-:0;719:10;640:96;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;420:94:0:-;461:4;496:10;485:7;:5;:7::i;:::-;-1:-1:-1;;;;;485:21:0;;478:28;;420:94;:::o;14:259:3:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:3:o;278:335::-;;;415:2;403:9;394:7;390:23;386:32;383:2;;;436:6;428;421:22;383:2;480:9;467:23;499:33;526:5;499:33;:::i;:::-;551:5;603:2;588:18;;;;575:32;;-1:-1:-1;;;373:240:3:o;618:327::-;;;747:2;735:9;726:7;722:23;718:32;715:2;;;768:6;760;753:22;950:203;-1:-1:-1;;;;;1114:32:3;;;;1096:51;;1084:2;1069:18;;1051:102::o;1158:402::-;1360:2;1342:21;;;1399:2;1379:18;;;1372:30;1438:34;1433:2;1418:18;;1411:62;-1:-1:-1;;;1504:2:3;1489:18;;1482:36;1550:3;1535:19;;1332:228::o;1565:397::-;1767:2;1749:21;;;1806:2;1786:18;;;1779:30;1845:34;1840:2;1825:18;;1818:62;-1:-1:-1;;;1911:2:3;1896:18;;1889:31;1952:3;1937:19;;1739:223::o;1967:356::-;2169:2;2151:21;;;2188:18;;;2181:30;2247:34;2242:2;2227:18;;2220:62;2314:2;2299:18;;2141:182::o;2328:344::-;2530:2;2512:21;;;2569:2;2549:18;;;2542:30;-1:-1:-1;;;2603:2:3;2588:18;;2581:50;2663:2;2648:18;;2502:170::o;2677:177::-;2823:25;;;2811:2;2796:18;;2778:76::o;2859:248::-;3033:25;;;3089:2;3074:18;;3067:34;3021:2;3006:18;;2988:119::o;3112:128::-;;3183:1;3179:6;3176:1;3173:13;3170:2;;;3189:18;;:::i;:::-;-1:-1:-1;3225:9:3;;3160:80::o;3245:125::-;;3313:1;3310;3307:8;3304:2;;;3318:18;;:::i;:::-;-1:-1:-1;3355:9:3;;3294:76::o;3375:127::-;3436:10;3431:3;3427:20;3424:1;3417:31;3467:4;3464:1;3457:15;3491:4;3488:1;3481:15;3507:133;-1:-1:-1;;;;;3584:31:3;;3574:42;;3564:2;;3630:1;3627;3620:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "362800",
								"executionCost": "22867",
								"totalCost": "385667"
							},
							"external": {
								"addAllowance(address,uint256)": "22302",
								"allowance(address)": "1269",
								"owner()": "1137",
								"reduceAllowance(address,uint256)": "22233",
								"renounceOwnership()": "23549",
								"setAllowance(address,uint256)": "23479",
								"transferOwnership(address)": "infinite",
								"withdrawMoney(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1170,
									"end": 1715,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1170,
									"end": 1715,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb1d33e014dc6767e2d40f5a167ce8039c27b6d78da0938cebb500fb9deaf23664736f6c63430008010033",
									".code": [
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "8FDF08DF"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "8FDF08DF"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "F274C897"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "F3C40C4B"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "310EC4A7"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "3E5BEAB9"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 771,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 654,
											"end": 669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 654,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 654,
											"end": 679,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 654,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 718,
											"end": 728,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 718,
											"end": 728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 654,
											"end": 669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "3691D1A86D99355E52B689CA70A7BDF6D80763237A6AA06E5FA43964EAC7244B"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 679,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 672,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 755,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 763,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 972,
											"end": 987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 972,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 972,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 991,
											"end": 998,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 972,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 991,
											"end": 998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 891,
											"end": 1006,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1073,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1073,
											"end": 1118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1096,
											"end": 1106,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1095,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1118,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1073,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1065,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1489,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1489,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1449,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1542,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1542,
											"end": 1551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1542,
											"end": 1551,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1542,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1538,
											"end": 1616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1584,
											"end": 1594,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1603,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1568,
											"end": 1604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1568,
											"end": 1604,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1568,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1646,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1646,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1638,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 771,
											"end": 883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 849,
											"end": 864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 849,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 849,
											"end": 875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 868,
											"end": 875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 868,
											"end": 875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 849,
											"end": 864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 849,
											"end": 875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 868,
											"end": 875,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 868,
											"end": 875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 849,
											"end": 875,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 420,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 506,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 485,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 485,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 485,
											"end": 492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 485,
											"end": 492,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 485,
											"end": 492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 485,
											"end": 506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 485,
											"end": 506,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 478,
											"end": 506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 514,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 273,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 14,
											"end": 273,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14,
											"end": 273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 210,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 210,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 210,
											"end": 243,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 243,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 210,
											"end": 243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 262,
											"end": 267,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 84,
											"end": 273,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 273,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 278,
											"end": 613,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 278,
											"end": 613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 278,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 412,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 394,
											"end": 401,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 390,
											"end": 413,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 383,
											"end": 385,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 383,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 383,
											"end": 385,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 436,
											"end": 442,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 428,
											"end": 434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 421,
											"end": 443,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 383,
											"end": 385,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 383,
											"end": 385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 480,
											"end": 489,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 467,
											"end": 490,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 499,
											"end": 532,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 499,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 551,
											"end": 556,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 603,
											"end": 605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 606,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 588,
											"end": 606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 588,
											"end": 606,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 588,
											"end": 606,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 575,
											"end": 607,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 575,
											"end": 607,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 373,
											"end": 613,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 618,
											"end": 945,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 618,
											"end": 945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 945,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 747,
											"end": 749,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 744,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 726,
											"end": 733,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 722,
											"end": 745,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 718,
											"end": 750,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 715,
											"end": 717,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 715,
											"end": 717,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 768,
											"end": 774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 760,
											"end": 766,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 753,
											"end": 775,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 950,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 950,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1147,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1147,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1153,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1158,
											"end": 1560,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1158,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1397,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1411,
											"end": 1473,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1504,
											"end": 1506,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1518,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1535,
											"end": 1554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1560,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1565,
											"end": 1962,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1565,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1749,
											"end": 1770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1749,
											"end": 1770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1879,
											"name": "PUSH",
											"source": 3,
											"value": "436F6E747261637420646F65736E2774206F776E20656E6F756768206D6F6E65"
										},
										{
											"begin": 1840,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1843,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1911,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 1920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 1955,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1937,
											"end": 1956,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1937,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1962,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1967,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2282,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2316,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2323,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2328,
											"end": 2672,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2328,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2532,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2533,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2533,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2571,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "596F7520617265206E6F7420616C6C6F77656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2603,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2606,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2631,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2665,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2672,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2677,
											"end": 2854,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2677,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2813,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2854,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2859,
											"end": 3107,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2859,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3101,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2988,
											"end": 3107,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3112,
											"end": 3240,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3112,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3184,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3240,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3310,
											"end": 3311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3315,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3304,
											"end": 3306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3304,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3304,
											"end": 3306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3355,
											"end": 3364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3355,
											"end": 3364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3294,
											"end": 3370,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3375,
											"end": 3502,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3375,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3427,
											"end": 3447,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3425,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3471,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3464,
											"end": 3465,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3457,
											"end": 3472,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3495,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3488,
											"end": 3489,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3496,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3507,
											"end": 3640,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3507,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3584,
											"end": 3615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3615,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3616,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3564,
											"end": 3566,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3631,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3620,
											"end": 3632,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addAllowance(address,uint256)": "f3c40c4b",
							"allowance(address)": "3e5beab9",
							"owner()": "8da5cb5b",
							"reduceAllowance(address,uint256)": "8fdf08df",
							"renounceOwnership()": "715018a6",
							"setAllowance(address,uint256)": "310ec4a7",
							"transferOwnership(address)": "f2fde38b",
							"withdrawMoney(address,uint256)": "f274c897"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_forWho\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_byWhom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newAmount\",\"type\":\"uint256\"}],\"name\":\"AllowanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"MoneyReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"MoneySent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reduceAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/02_simple/SharedWallet.sol\":\"SharedWallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/02_simple/SharedWallet.sol\":{\"keccak256\":\"0x1f16523efefae575e8599493ed1184ad388f45a37be4eab1ee79ef7b1c5c61c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc5cb79dd41688bdadeee772cf1867505e0e59b1495bd18329ef52c2b358713\",\"dweb:/ipfs/QmeHQuroPGrXn79vGuNpc4ZBNH6jYLneZCtQVDVbUCjNHo\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 174,
								"contract": "contracts/02_simple/SharedWallet.sol:SharedWallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 30,
								"contract": "contracts/02_simple/SharedWallet.sol:SharedWallet",
								"label": "allowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 174,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/02_simple/SharedWallet.sol": {
				"ast": {
					"absolutePath": "contracts/02_simple/SharedWallet.sol",
					"exportedSymbols": {
						"Allowance": [
							108
						],
						"Context": [
							293
						],
						"Ownable": [
							271
						],
						"SharedWallet": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 167,
							"sourceUnit": 272,
							"src": "58:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 271,
										"src": "190:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "190:7:0"
								}
							],
							"contractDependencies": [
								271,
								293
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 108,
							"linearizedBaseContracts": [
								108,
								271,
								293
							],
							"name": "Allowance",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 14,
									"name": "AllowanceChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "_forWho",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "234:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "_byWhom",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "289:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "_oldAmount",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "344:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "344:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newAmount",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "391:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:174:0"
									},
									"src": "211:197:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "467:47:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 19,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "485:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "485:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "496:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "496:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "485:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 18,
												"id": 24,
												"nodeType": "Return",
												"src": "478:28:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "461:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "461:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:6:0"
									},
									"scope": 108,
									"src": "420:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3e5beab9",
									"id": 30,
									"mutability": "mutable",
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "522:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 29,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "530:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "522:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 28,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "541:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "643:120:0",
										"statements": [
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 39,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "654:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 41,
														"indexExpression": {
															"id": 40,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "664:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "654:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 42,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "672:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "654:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "654:25:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 46,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "712:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 47,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "718:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "718:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 49,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "730:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 51,
															"indexExpression": {
																"id": 50,
																"name": "_who",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "740:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "730:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 52,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "747:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 45,
														"name": "AllowanceChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "695:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "695:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "EmitStatement",
												"src": "690:65:0"
											}
										]
									},
									"functionSelector": "310ec4a7",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 37,
											"modifierName": {
												"id": 36,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "633:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "633:9:0"
										}
									],
									"name": "setAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "598:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "612:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "612:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:28:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:0:0"
									},
									"scope": 108,
									"src": "576:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "838:45:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 65,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "849:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 67,
														"indexExpression": {
															"id": 66,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "859:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "849:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 68,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "868:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "849:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "849:26:0"
											}
										]
									},
									"functionSelector": "f3c40c4b",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 63,
											"modifierName": {
												"id": 62,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "828:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "828:9:0"
										}
									],
									"name": "addAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "793:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "807:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "807:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:28:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:0"
									},
									"scope": 108,
									"src": "771:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "961:45:0",
										"statements": [
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 81,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "972:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 83,
														"indexExpression": {
															"id": 82,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "982:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "972:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 84,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "991:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "972:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "972:26:0"
											}
										]
									},
									"functionSelector": "8fdf08df",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 79,
											"modifierName": {
												"id": 78,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "951:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "951:9:0"
										}
									],
									"name": "reduceAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "916:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "930:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "930:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:28:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:0:0"
									},
									"scope": 108,
									"src": "891:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1054:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 93,
																	"name": "isOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1073:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1073:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 95,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "1086:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 98,
																	"indexExpression": {
																		"expression": {
																			"id": 96,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1096:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 97,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1096:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1086:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 99,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "1111:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1086:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1073:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420616c6c6f77656421",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1120:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9f18e7152ecb482b05bc745430c2e40c72dfba99431368b9d2fc7e8b7ebead8",
																"typeString": "literal_string \"You are not allowed!\""
															},
															"value": "You are not allowed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9f18e7152ecb482b05bc745430c2e40c72dfba99431368b9d2fc7e8b7ebead8",
																"typeString": "literal_string \"You are not allowed!\""
															}
														],
														"id": 92,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1065:78:0"
											},
											{
												"id": 105,
												"nodeType": "PlaceholderStatement",
												"src": "1154:1:0"
											}
										]
									},
									"id": 107,
									"name": "ownerOrAllowed",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1040:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:14:0"
									},
									"src": "1016:147:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 167,
							"src": "167:999:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Allowance",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 108,
										"src": "1195:9:0"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "1195:9:0"
								}
							],
							"contractDependencies": [
								108,
								271,
								293
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166,
								108,
								271,
								293
							],
							"name": "SharedWallet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 116,
									"name": "MoneySent",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"indexed": true,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1234:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1264:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:44:0"
									},
									"src": "1218:60:0"
								},
								{
									"anonymous": false,
									"id": 122,
									"name": "MoneyReceived",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "1304:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "1327:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1327:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1303:37:0"
									},
									"src": "1284:57:0"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1438:227:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 133,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "1457:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 136,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1476:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SharedWallet_$166",
																				"typeString": "contract SharedWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SharedWallet_$166",
																				"typeString": "contract SharedWallet"
																			}
																		],
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1468:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 134,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1468:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1468:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1468:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1457:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420646f65736e2774206f776e20656e6f756768206d6f6e6579",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1491:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a67ac57806224cd53bc844bb5ddb22cb59fdd52500ecc88ac63908f00606d0f",
																"typeString": "literal_string \"Contract doesn't own enough money\""
															},
															"value": "Contract doesn't own enough money"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a67ac57806224cd53bc844bb5ddb22cb59fdd52500ecc88ac63908f00606d0f",
																"typeString": "literal_string \"Contract doesn't own enough money\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1449:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1449:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1449:78:0"
											},
											{
												"condition": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1541:10:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 143,
															"name": "isOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1542:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1542:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 153,
												"nodeType": "IfStatement",
												"src": "1538:78:0",
												"trueBody": {
													"id": 152,
													"nodeType": "Block",
													"src": "1553:63:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 147,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1584:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1584:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 149,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "1596:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 146,
																	"name": "reduceAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "1568:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1568:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 151,
															"nodeType": "ExpressionStatement",
															"src": "1568:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 157,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "1639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 154,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "1626:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1626:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1626:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1626:21:0"
											}
										]
									},
									"functionSelector": "f274c897",
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 129,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 126,
													"src": "1429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 130,
											"modifierName": {
												"id": 128,
												"name": "ownerOrAllowed",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 107,
												"src": "1414:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1414:23:0"
										}
									],
									"name": "withdrawMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1372:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1372:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1393:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1393:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:35:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:0"
									},
									"scope": 166,
									"src": "1349:316:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1704:8:0",
										"statements": []
									},
									"id": 165,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1684:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1704:0:0"
									},
									"scope": 166,
									"src": "1677:35:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 167,
							"src": "1170:545:0"
						}
					],
					"src": "32:1683:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							293
						],
						"Ownable": [
							271
						]
					},
					"id": 272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 169,
							"nodeType": "ImportDirective",
							"scope": 272,
							"sourceUnit": 294,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 171,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 293,
										"src": "668:7:1"
									},
									"id": 172,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"contractDependencies": [
								293
							],
							"contractKind": "contract",
							"documentation": {
								"id": 170,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 271,
							"linearizedBaseContracts": [
								271,
								293
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 174,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 271,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 173,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 180,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 185,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 190,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 271,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 196,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 195,
												"id": 197,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 271,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 203,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 205,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 211,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 213,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 217,
											"modifierName": {
												"id": 216,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 271,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 236,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 237,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 233,
											"modifierName": {
												"id": 232,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 271,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													257
												],
												"declarations": [
													{
														"constant": false,
														"id": 257,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 269,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 256,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 259,
												"initialValue": {
													"id": 258,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 265,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 266,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 264,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 271,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 272,
							"src": "639:1820:1"
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							293
						]
					},
					"id": 294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 274,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 279,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 278,
												"id": 281,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 293,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 288,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 287,
												"id": 290,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 293,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 294,
							"src": "608:235:2"
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			}
		}
	}
}