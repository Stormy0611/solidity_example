{
	"id": "86b13e08ccf0c03b41231abe99367410",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"AllExample.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.1;\r\n\r\ncontract AllExample {\r\n    uint stateVal;\r\n    constructor() public {\r\n        stateVal = 100;\r\n    }\r\n\r\n    function getLocalVal() public pure {\r\n        uint localVal = 1000;\r\n        assert(localVal > 100);\r\n    }\r\n\r\n    function getGlobalVal() public view returns(uint) {\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"AllExample.sol": {
				"AllExample": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getGlobalVal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLocalVal",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AllExample.sol\":66:351  contract AllExample {\r... */\n  mstore(0x40, 0x80)\n    /* \"AllExample.sol\":113:167  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"AllExample.sol\":156:159  100 */\n  0x64\n    /* \"AllExample.sol\":145:153  stateVal */\n  0x00\n    /* \"AllExample.sol\":145:159  stateVal = 100 */\n  sstore\n    /* \"AllExample.sol\":66:351  contract AllExample {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AllExample.sol\":66:351  contract AllExample {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7921381a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa484b48e\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"AllExample.sol\":175:282  function getLocalVal() public pure {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"AllExample.sol\":290:348  function getGlobalVal() public view returns(uint) {\r... */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AllExample.sol\":175:282  function getLocalVal() public pure {\r... */\n    tag_6:\n      jump\t// out\n        /* \"AllExample.sol\":290:348  function getGlobalVal() public view returns(uint) {\r... */\n    tag_8:\n        /* \"AllExample.sol\":334:338  uint */\n      0x00\n        /* \"AllExample.sol\":290:348  function getGlobalVal() public view returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:191   */\n    tag_10:\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":115:191   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220544bdecf5ecb706fd4969fb05d91ff09bd65ba186ac0e34255e5eb15ae77983a64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506064600055609f806100236000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80637921381a146037578063a484b48e14603f575b600080fd5b603d6059565b005b6045605b565b604051605091906060565b60405180910390f35b565b600090565b9081526020019056fea2646970667358221220544bdecf5ecb706fd4969fb05d91ff09bd65ba186ac0e34255e5eb15ae77983a64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x64 PUSH1 0x0 SSTORE PUSH1 0x9F DUP1 PUSH2 0x23 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7921381A EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xA484B48E EQ PUSH1 0x3F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x45 PUSH1 0x5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x50 SWAP2 SWAP1 PUSH1 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0x4B 0xDE 0xCF 0x5E 0xCB PUSH17 0x6FD4969FB05D91FF09BD65BA186AC0E342 SSTORE 0xE5 0xEB ISZERO 0xAE PUSH24 0x983A64736F6C634300080100330000000000000000000000 ",
							"sourceMap": "66:285:0:-:0;;;113:54;;;;;;;;;-1:-1:-1;156:3:0;145:8;:14;66:285;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:193:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80637921381a146037578063a484b48e14603f575b600080fd5b603d6059565b005b6045605b565b604051605091906060565b60405180910390f35b565b600090565b9081526020019056fea2646970667358221220544bdecf5ecb706fd4969fb05d91ff09bd65ba186ac0e34255e5eb15ae77983a64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7921381A EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xA484B48E EQ PUSH1 0x3F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x45 PUSH1 0x5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x50 SWAP2 SWAP1 PUSH1 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0x4B 0xDE 0xCF 0x5E 0xCB PUSH17 0x6FD4969FB05D91FF09BD65BA186AC0E342 SSTORE 0xE5 0xEB ISZERO 0xAE PUSH24 0x983A64736F6C634300080100330000000000000000000000 ",
							"sourceMap": "66:285:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;175:107;;;:::i;:::-;;290:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;175:107;:::o;290:58::-;334:4;290:58;:::o;14:177:1:-;160:25;;;148:2;133:18;;115:76::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "31800",
								"executionCost": "20087",
								"totalCost": "51887"
							},
							"external": {
								"getGlobalVal()": "228",
								"getLocalVal()": "122"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 351,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 167,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 167,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 113,
									"end": 167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 167,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 113,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 167,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 113,
									"end": 167,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 156,
									"end": 159,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 145,
									"end": 153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 159,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 351,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 351,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 351,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 351,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220544bdecf5ecb706fd4969fb05d91ff09bd65ba186ac0e34255e5eb15ae77983a64736f6c63430008010033",
									".code": [
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "7921381A"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "A484B48E"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 351,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 175,
											"end": 282,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 282,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 282,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 175,
											"end": 282,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 282,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 334,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 348,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 191,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getGlobalVal()": "a484b48e",
							"getLocalVal()": "7921381a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getGlobalVal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLocalVal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AllExample.sol\":\"AllExample\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AllExample.sol\":{\"keccak256\":\"0xa1870f84ee5d29171152db9f98710857c0bc45099df6201569ae5c243143fc3b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://52755535e19bd423d502563f6a6d7cf4d5160620a74757a0c5686d54b061b403\",\"dweb:/ipfs/QmdBqbukDkuE86y6NaWDLrajsEf6MNK3GWk7ASKdBckfRW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> AllExample.sol:7:5:\n  |\n7 |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 167,
					"file": "AllExample.sol",
					"start": 113
				},
				"type": "Warning"
			}
		],
		"sources": {
			"AllExample.sol": {
				"ast": {
					"absolutePath": "AllExample.sol",
					"exportedSymbols": {
						"AllExample": [
							32
						]
					},
					"id": 33,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "AllExample",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "stateVal",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "93:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "93:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "134:33:0",
										"statements": [
											{
												"expression": {
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "stateVal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "145:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 7,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "156:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "145:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 9,
												"nodeType": "ExpressionStatement",
												"src": "145:14:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "134:0:0"
									},
									"scope": 32,
									"src": "113:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "210:72:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "localVal",
														"nodeType": "VariableDeclaration",
														"scope": 24,
														"src": "221:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 14,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "221:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"hexValue": "31303030",
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "237:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000_by_1",
														"typeString": "int_const 1000"
													},
													"value": "1000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "221:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 19,
																"name": "localVal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "259:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "313030",
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "270:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "259:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 18,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "252:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "252:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "252:22:0"
											}
										]
									},
									"functionSelector": "7921381a",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLocalVal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "195:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:0:0"
									},
									"scope": 32,
									"src": "175:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "340:8:0",
										"statements": []
									},
									"functionSelector": "a484b48e",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGlobalVal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "334:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:6:0"
									},
									"scope": 32,
									"src": "290:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 33,
							"src": "66:285:0"
						}
					],
					"src": "39:312:0"
				},
				"id": 0
			}
		}
	}
}