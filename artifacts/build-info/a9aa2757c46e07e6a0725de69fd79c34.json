{
	"id": "a9aa2757c46e07e6a0725de69fd79c34",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"AllExample.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.1;\r\n\r\ncontract test {\r\n   enum FreshJuiceSize{ SMALL, MEDIUM, LARGE }\r\n   FreshJuiceSize choice;\r\n   FreshJuiceSize constant defaultChoice = FreshJuiceSize.MEDIUM;\r\n\r\n   function setLarge() public {\r\n      choice = FreshJuiceSize.LARGE;\r\n   }\r\n   function getChoice() public view returns (FreshJuiceSize) {\r\n      return choice;\r\n   }\r\n   function getDefaultChoice() public returns (uint) {\r\n      return uint(defaultChoice);\r\n   }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"AllExample.sol": {
				"test": {
					"abi": [
						{
							"inputs": [],
							"name": "getChoice",
							"outputs": [
								{
									"internalType": "enum test.FreshJuiceSize",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDefaultChoice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setLarge",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AllExample.sol\":66:494  contract test {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AllExample.sol\":66:494  contract test {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x67cb61b6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x694ebe4f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x843f7258\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"AllExample.sol\":307:394  function getChoice() public view returns (FreshJuiceSize) {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AllExample.sol\":230:302  function setLarge() public {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"AllExample.sol\":399:491  function getDefaultChoice() public returns (uint) {\r... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n        /* \"AllExample.sol\":307:394  function getChoice() public view returns (FreshJuiceSize) {\r... */\n    tag_7:\n        /* \"AllExample.sol\":349:363  FreshJuiceSize */\n      0x00\n        /* \"AllExample.sol\":381:387  choice */\n      sload\n      0xff\n      and\n        /* \"AllExample.sol\":307:394  function getChoice() public view returns (FreshJuiceSize) {\r... */\n      swap1\n      jump\t// out\n        /* \"AllExample.sol\":230:302  function setLarge() public {\r... */\n    tag_11:\n        /* \"AllExample.sol\":266:272  choice */\n      0x00\n        /* \"AllExample.sol\":266:295  choice = FreshJuiceSize.LARGE */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"AllExample.sol\":275:295  FreshJuiceSize.LARGE */\n      0x02\n        /* \"AllExample.sol\":266:295  choice = FreshJuiceSize.LARGE */\n      or\n      swap1\n      sstore\n        /* \"AllExample.sol\":230:302  function setLarge() public {\r... */\n      jump\t// out\n        /* \"AllExample.sol\":399:491  function getDefaultChoice() public returns (uint) {\r... */\n    tag_13:\n        /* \"AllExample.sol\":201:222  FreshJuiceSize.MEDIUM */\n      0x01\n      swap1\n        /* \"AllExample.sol\":399:491  function getDefaultChoice() public returns (uint) {\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:358   */\n    tag_9:\n        /* \"#utility.yul\":162:164   */\n      0x20\n        /* \"#utility.yul\":147:165   */\n      dup2\n      add\n        /* \"#utility.yul\":195:196   */\n      0x03\n        /* \"#utility.yul\":184:197   */\n      dup4\n      lt\n        /* \"#utility.yul\":174:176   */\n      tag_23\n      jumpi\n        /* \"#utility.yul\":240:250   */\n      0x4e487b71\n        /* \"#utility.yul\":235:238   */\n      0xe0\n        /* \"#utility.yul\":231:251   */\n      shl\n        /* \"#utility.yul\":228:229   */\n      0x00\n        /* \"#utility.yul\":221:252   */\n      mstore\n        /* \"#utility.yul\":275:279   */\n      0x21\n        /* \"#utility.yul\":272:273   */\n      0x04\n        /* \"#utility.yul\":265:280   */\n      mstore\n        /* \"#utility.yul\":303:307   */\n      0x24\n        /* \"#utility.yul\":300:301   */\n      0x00\n        /* \"#utility.yul\":293:308   */\n      revert\n        /* \"#utility.yul\":174:176   */\n    tag_23:\n        /* \"#utility.yul\":327:352   */\n      swap2\n      swap1\n      mstore\n        /* \"#utility.yul\":129:358   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":363:540   */\n    tag_15:\n        /* \"#utility.yul\":509:534   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":497:499   */\n      0x20\n        /* \"#utility.yul\":482:500   */\n      add\n      swap1\n        /* \"#utility.yul\":464:540   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203ec75d03a655cefc5de78273ab375ad524e32afae5b96fccdc9b3c4b4862645e64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060f78061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806367cb61b6146041578063694ebe4f14605b578063843f7258146063575b600080fd5b60476074565b604051605291906091565b60405180910390f35b6061607d565b005b6069608c565b6040516052919060b8565b60005460ff1690565b6000805460ff19166002179055565b600190565b602081016003831060b257634e487b7160e01b600052602160045260246000fd5b91905290565b9081526020019056fea26469706673582212203ec75d03a655cefc5de78273ab375ad524e32afae5b96fccdc9b3c4b4862645e64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF7 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67CB61B6 EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x694EBE4F EQ PUSH1 0x5B JUMPI DUP1 PUSH4 0x843F7258 EQ PUSH1 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x47 PUSH1 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x52 SWAP2 SWAP1 PUSH1 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x61 PUSH1 0x7D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x69 PUSH1 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x52 SWAP2 SWAP1 PUSH1 0xB8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH1 0xB2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xC7 0x5D SUB 0xA6 SSTORE 0xCE 0xFC 0x5D 0xE7 DUP3 PUSH20 0xAB375AD524E32AFAE5B96FCCDC9B3C4B4862645E PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "66:428:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:542:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "129:229:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "139:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "151:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "162:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "147:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "139:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "207:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "228:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "235:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "240:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "231:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "231:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "221:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "221:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "221:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "272:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:4:1",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "265:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "265:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "265:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "187:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "195:1:1",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "184:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "177:21:1"
															},
															"nodeType": "YulIf",
															"src": "174:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "345:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "327:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_FreshJuiceSize_$5__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "98:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "109:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "120:4:1",
														"type": ""
													}
												],
												"src": "14:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "464:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "474:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "486:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "497:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "482:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "482:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "474:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "516:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "433:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "444:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "455:4:1",
														"type": ""
													}
												],
												"src": "363:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_enum$_FreshJuiceSize_$5__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060043610603c5760003560e01c806367cb61b6146041578063694ebe4f14605b578063843f7258146063575b600080fd5b60476074565b604051605291906091565b60405180910390f35b6061607d565b005b6069608c565b6040516052919060b8565b60005460ff1690565b6000805460ff19166002179055565b600190565b602081016003831060b257634e487b7160e01b600052602160045260246000fd5b91905290565b9081526020019056fea26469706673582212203ec75d03a655cefc5de78273ab375ad524e32afae5b96fccdc9b3c4b4862645e64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67CB61B6 EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x694EBE4F EQ PUSH1 0x5B JUMPI DUP1 PUSH4 0x843F7258 EQ PUSH1 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x47 PUSH1 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x52 SWAP2 SWAP1 PUSH1 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x61 PUSH1 0x7D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x69 PUSH1 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x52 SWAP2 SWAP1 PUSH1 0xB8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH1 0xB2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xC7 0x5D SUB 0xA6 SSTORE 0xCE 0xFC 0x5D 0xE7 DUP3 PUSH20 0xAB375AD524E32AFAE5B96FCCDC9B3C4B4862645E PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "66:428:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;230:72;;;:::i;:::-;;399:92;;;:::i;:::-;;;;;;;:::i;307:87::-;349:14;381:6;;;307:87;:::o;230:72::-;266:6;:29;;-1:-1:-1;;266:29:0;275:20;266:29;;;230:72::o;399:92::-;201:21;;399:92::o;14:344:1:-;162:2;147:18;;195:1;184:13;;174:2;;240:10;235:3;231:20;228:1;221:31;275:4;272:1;265:15;303:4;300:1;293:15;174:2;327:25;;;129:229;:::o;363:177::-;509:25;;;497:2;482:18;;464:76::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "49400",
								"executionCost": "99",
								"totalCost": "49499"
							},
							"external": {
								"getChoice()": "1038",
								"getDefaultChoice()": "250",
								"setLarge()": "20968"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 494,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 494,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 494,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 494,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 494,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 494,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 494,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 494,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 494,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 494,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 494,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 494,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 494,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 494,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 494,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203ec75d03a655cefc5de78273ab375ad524e32afae5b96fccdc9b3c4b4862645e64736f6c63430008010033",
									".code": [
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "67CB61B6"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "694EBE4F"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "843F7258"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 230,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 230,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 230,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 230,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 230,
											"end": 302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 230,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 230,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 230,
											"end": 302,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 399,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 399,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 399,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 399,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 399,
											"end": 491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 399,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 399,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 399,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 399,
											"end": 491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 399,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 399,
											"end": 491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 349,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 381,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 381,
											"end": 387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 230,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 230,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 266,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 295,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 266,
											"end": 295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 295,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 266,
											"end": 295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 295,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 230,
											"end": 302,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 399,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 399,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 491,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 358,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 14,
											"end": 358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 195,
											"end": 196,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 184,
											"end": 197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 184,
											"end": 197,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 174,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 176,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 240,
											"end": 250,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 235,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 251,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 228,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 275,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 272,
											"end": 273,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 265,
											"end": 280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 303,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 300,
											"end": 301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 174,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 327,
											"end": 352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 327,
											"end": 352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 129,
											"end": 358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 358,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 363,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 363,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 509,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 509,
											"end": 534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 497,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 540,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getChoice()": "67cb61b6",
							"getDefaultChoice()": "843f7258",
							"setLarge()": "694ebe4f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getChoice\",\"outputs\":[{\"internalType\":\"enum test.FreshJuiceSize\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultChoice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setLarge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AllExample.sol\":\"test\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AllExample.sol\":{\"keccak256\":\"0x06d4a1284870fc0ecb3201f55c3e2418ebb0a9b129e5815a0fb81d398e25453f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3be3d09ce71a12e621679d6be85a2617d1a7b6f7c5f0cf2b4d19407a92733bdb\",\"dweb:/ipfs/QmcsAQ1dje9yUxHwaMHPs1oGEd6ey2XqMU5RtPFDS6nHuo\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> AllExample.sol:16:4:\n   |\n16 |    function getDefaultChoice() public returns (uint) {\n   |    ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 491,
					"file": "AllExample.sol",
					"start": 399
				},
				"type": "Warning"
			}
		],
		"sources": {
			"AllExample.sol": {
				"ast": {
					"absolutePath": "AllExample.sol",
					"exportedSymbols": {
						"test": [
							43
						]
					},
					"id": 44,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "test",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "test.FreshJuiceSize",
									"id": 5,
									"members": [
										{
											"id": 2,
											"name": "SMALL",
											"nodeType": "EnumValue",
											"src": "107:5:0"
										},
										{
											"id": 3,
											"name": "MEDIUM",
											"nodeType": "EnumValue",
											"src": "114:6:0"
										},
										{
											"id": 4,
											"name": "LARGE",
											"nodeType": "EnumValue",
											"src": "122:5:0"
										}
									],
									"name": "FreshJuiceSize",
									"nodeType": "EnumDefinition",
									"src": "86:43:0"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "choice",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "134:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
										"typeString": "enum test.FreshJuiceSize"
									},
									"typeName": {
										"id": 7,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 6,
											"name": "FreshJuiceSize",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "134:14:0"
										},
										"referencedDeclaration": 5,
										"src": "134:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
											"typeString": "enum test.FreshJuiceSize"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "defaultChoice",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "161:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
										"typeString": "enum test.FreshJuiceSize"
									},
									"typeName": {
										"id": 10,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 9,
											"name": "FreshJuiceSize",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "161:14:0"
										},
										"referencedDeclaration": 5,
										"src": "161:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
											"typeString": "enum test.FreshJuiceSize"
										}
									},
									"value": {
										"expression": {
											"id": 11,
											"name": "FreshJuiceSize",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 5,
											"src": "201:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_FreshJuiceSize_$5_$",
												"typeString": "type(enum test.FreshJuiceSize)"
											}
										},
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "MEDIUM",
										"nodeType": "MemberAccess",
										"src": "201:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
											"typeString": "enum test.FreshJuiceSize"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "257:45:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "266:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
															"typeString": "enum test.FreshJuiceSize"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 17,
															"name": "FreshJuiceSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "275:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FreshJuiceSize_$5_$",
																"typeString": "type(enum test.FreshJuiceSize)"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "LARGE",
														"nodeType": "MemberAccess",
														"src": "275:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
															"typeString": "enum test.FreshJuiceSize"
														}
													},
													"src": "266:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
														"typeString": "enum test.FreshJuiceSize"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "266:29:0"
											}
										]
									},
									"functionSelector": "694ebe4f",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLarge",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:0:0"
									},
									"scope": 43,
									"src": "230:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "365:29:0",
										"statements": [
											{
												"expression": {
													"id": 28,
													"name": "choice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "381:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
														"typeString": "enum test.FreshJuiceSize"
													}
												},
												"functionReturnParameters": 27,
												"id": 29,
												"nodeType": "Return",
												"src": "374:13:0"
											}
										]
									},
									"functionSelector": "67cb61b6",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChoice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "349:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
													"typeString": "enum test.FreshJuiceSize"
												},
												"typeName": {
													"id": 25,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 24,
														"name": "FreshJuiceSize",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "349:14:0"
													},
													"referencedDeclaration": 5,
													"src": "349:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
														"typeString": "enum test.FreshJuiceSize"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:16:0"
									},
									"scope": 43,
									"src": "307:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "449:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "defaultChoice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "470:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
																"typeString": "enum test.FreshJuiceSize"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_FreshJuiceSize_$5",
																"typeString": "enum test.FreshJuiceSize"
															}
														],
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "465:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 36,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "465:4:0",
															"typeDescriptions": {}
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "465:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 35,
												"id": 40,
												"nodeType": "Return",
												"src": "458:26:0"
											}
										]
									},
									"functionSelector": "843f7258",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDefaultChoice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "443:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "443:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:6:0"
									},
									"scope": 43,
									"src": "399:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 44,
							"src": "66:428:0"
						}
					],
					"src": "39:455:0"
				},
				"id": 0
			}
		}
	}
}