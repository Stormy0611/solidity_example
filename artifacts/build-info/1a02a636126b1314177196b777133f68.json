{
	"id": "1a02a636126b1314177196b777133f68",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"ExceptionExample.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\ncontract ExceptionExample {\r\n\r\n    mapping(address => uint64) public balanceReceived;\r\n\r\n    function receiveMoney() public payable {\r\n        assert(msg.value == uint64(msg.value));\r\n        balanceReceived[msg.sender] += uint64(msg.value);\r\n        assert(balanceReceived[msg.sender] >= uint64(msg.value));\r\n    }\r\n    \r\n    function withdrawMoney(address payable _to, uint64 _amount) public {\r\n        require(_amount <= balanceReceived[msg.sender], \"Not Enough Funds, aborting\");\r\n        assert(balanceReceived[msg.sender] <= balanceReceived[msg.sender] - _amount);\r\n        balanceReceived[msg.sender] -= _amount;\r\n        _to.transfer(_amount);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ExceptionExample.sol": {
				"ExceptionExample": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceReceived",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiveMoney",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "_amount",
									"type": "uint64"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExceptionExample.sol\":61:722  contract ExceptionExample {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExceptionExample.sol\":61:722  contract ExceptionExample {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0ad19aeb\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x6d26ec18\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd18a42e1\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"ExceptionExample.sol\":388:719  function withdrawMoney(address payable _to, uint64 _amount) public {\r... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      0xffffffffffffffff\n      and\n      tag_8\n      jump\t// in\n    tag_6:\n      stop\n        /* \"ExceptionExample.sol\":154:376  function receiveMoney() public payable {\r... */\n    tag_3:\n      tag_6\n      tag_10\n      jump\t// in\n        /* \"ExceptionExample.sol\":96:145  mapping(address => uint64) public balanceReceived */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_14\n      jump\t// in\n    tag_12:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ExceptionExample.sol\":388:719  function withdrawMoney(address payable _to, uint64 _amount) public {\r... */\n    tag_8:\n        /* \"ExceptionExample.sol\":501:511  msg.sender */\n      caller\n        /* \"ExceptionExample.sol\":485:500  balanceReceived */\n      0x00\n        /* \"ExceptionExample.sol\":485:512  balanceReceived[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"ExceptionExample.sol\":474:512  _amount <= balanceReceived[msg.sender] */\n      swap1\n      dup3\n      and\n      gt\n      iszero\n        /* \"ExceptionExample.sol\":466:543  require(_amount <= balanceReceived[msg.sender], \"Not Enough Funds, aborting\") */\n      tag_16\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f7420456e6f7567682046756e64732c2061626f7274696e67000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_16:\n        /* \"ExceptionExample.sol\":608:618  msg.sender */\n      caller\n        /* \"ExceptionExample.sol\":592:607  balanceReceived */\n      0x00\n        /* \"ExceptionExample.sol\":592:619  balanceReceived[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"ExceptionExample.sol\":592:629  balanceReceived[msg.sender] - _amount */\n      dup3\n      dup2\n      sub\n        /* \"ExceptionExample.sol\":561:629  balanceReceived[msg.sender] <= balanceReceived[msg.sender] - _amount */\n      swap1\n      swap2\n      and\n      lt\n      iszero\n        /* \"ExceptionExample.sol\":554:630  assert(balanceReceived[msg.sender] <= balanceReceived[msg.sender] - _amount) */\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n        /* \"ExceptionExample.sol\":657:667  msg.sender */\n      caller\n        /* \"ExceptionExample.sol\":641:656  balanceReceived */\n      0x00\n        /* \"ExceptionExample.sol\":641:668  balanceReceived[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ExceptionExample.sol\":641:679  balanceReceived[msg.sender] -= _amount */\n      dup1\n      sload\n      not(0xffffffffffffffff)\n      dup2\n      and\n      0xffffffffffffffff\n      swap2\n      dup3\n      and\n      dup7\n      swap1\n      sub\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ExceptionExample.sol\":690:711  _to.transfer(_amount) */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExceptionExample.sol\":690:702  _to.transfer */\n      dup6\n      and\n      swap3\n        /* \"ExceptionExample.sol\":690:711  _to.transfer(_amount) */\n      0x08fc\n      swap3\n      dup6\n      and\n      dup1\n      iszero\n      swap4\n      swap1\n      swap4\n      mul\n      swap3\n      swap2\n      swap1\n      dup2\n        /* \"ExceptionExample.sol\":641:656  balanceReceived */\n      dup2\n        /* \"ExceptionExample.sol\":690:711  _to.transfer(_amount) */\n      dup2\n      dup6\n        /* \"ExceptionExample.sol\":690:702  _to.transfer */\n      dup9\n        /* \"ExceptionExample.sol\":690:711  _to.transfer(_amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n        /* \"ExceptionExample.sol\":388:719  function withdrawMoney(address payable _to, uint64 _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"ExceptionExample.sol\":154:376  function receiveMoney() public payable {\r... */\n    tag_10:\n        /* \"ExceptionExample.sol\":231:240  msg.value */\n      callvalue\n        /* \"ExceptionExample.sol\":211:241  msg.value == uint64(msg.value) */\n      0xffffffffffffffff\n      and\n        /* \"ExceptionExample.sol\":211:220  msg.value */\n      callvalue\n        /* \"ExceptionExample.sol\":211:241  msg.value == uint64(msg.value) */\n      eq\n        /* \"ExceptionExample.sol\":204:242  assert(msg.value == uint64(msg.value)) */\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n        /* \"ExceptionExample.sol\":269:279  msg.sender */\n      caller\n        /* \"ExceptionExample.sol\":253:268  balanceReceived */\n      0x00\n        /* \"ExceptionExample.sol\":253:280  balanceReceived[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ExceptionExample.sol\":253:301  balanceReceived[msg.sender] += uint64(msg.value) */\n      dup1\n      sload\n      not(0xffffffffffffffff)\n      dup2\n      and\n        /* \"ExceptionExample.sol\":291:300  msg.value */\n      callvalue\n        /* \"ExceptionExample.sol\":253:301  balanceReceived[msg.sender] += uint64(msg.value) */\n      0xffffffffffffffff\n      swap3\n      dup4\n      and\n      dup2\n      add\n      dup4\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"ExceptionExample.sol\":319:367  balanceReceived[msg.sender] >= uint64(msg.value) */\n      dup2\n      and\n        /* \"ExceptionExample.sol\":319:346  balanceReceived[msg.sender] */\n      swap2\n      and\n        /* \"ExceptionExample.sol\":319:367  balanceReceived[msg.sender] >= uint64(msg.value) */\n      lt\n      iszero\n        /* \"ExceptionExample.sol\":312:368  assert(balanceReceived[msg.sender] >= uint64(msg.value)) */\n      tag_22\n      jumpi\n      invalid\n    tag_22:\n        /* \"ExceptionExample.sol\":154:376  function receiveMoney() public payable {\r... */\n      jump\t// out\n        /* \"ExceptionExample.sol\":96:145  mapping(address => uint64) public balanceReceived */\n    tag_14:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c63f38afdf58432e1a0b30c8f36eda0d33329a435cf0f50eeeaa03ca1829e2bd64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061028c806100206000396000f3fe6080604052600436106100345760003560e01c80630ad19aeb146100395780636d26ec181461007e578063d18a42e114610086575b600080fd5b34801561004557600080fd5b5061007c6004803603604081101561005c57600080fd5b5080356001600160a01b0316906020013567ffffffffffffffff166100d6565b005b61007c6101e3565b34801561009257600080fd5b506100b9600480360360208110156100a957600080fd5b50356001600160a01b031661023a565b6040805167ffffffffffffffff9092168252519081900360200190f35b3360009081526020819052604090205467ffffffffffffffff9081169082161115610148576040805162461bcd60e51b815260206004820152601a60248201527f4e6f7420456e6f7567682046756e64732c2061626f7274696e67000000000000604482015290519081900360640190fd5b3360009081526020819052604090205467ffffffffffffffff908116828103909116101561017257fe5b33600090815260208190526040808220805467ffffffffffffffff19811667ffffffffffffffff91821686900382161790915590516001600160a01b038516926108fc928516801593909302929190818181858888f193505050501580156101de573d6000803e3d6000fd5b505050565b3467ffffffffffffffff1634146101f657fe5b336000908152602081905260409020805467ffffffffffffffff1981163467ffffffffffffffff92831681018316919091179283905581169116101561023857fe5b565b60006020819052908152604090205467ffffffffffffffff168156fea2646970667358221220c63f38afdf58432e1a0b30c8f36eda0d33329a435cf0f50eeeaa03ca1829e2bd64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD19AEB EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xD18A42E1 EQ PUSH2 0x86 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x1E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND GT ISZERO PUSH2 0x148 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420456E6F7567682046756E64732C2061626F7274696E67000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 DUP2 SUB SWAP1 SWAP2 AND LT ISZERO PUSH2 0x172 JUMPI INVALID JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP7 SWAP1 SUB DUP3 AND OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH2 0x8FC SWAP3 DUP6 AND DUP1 ISZERO SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST CALLVALUE PUSH8 0xFFFFFFFFFFFFFFFF AND CALLVALUE EQ PUSH2 0x1F6 JUMPI INVALID JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND CALLVALUE PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 ADD DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP3 DUP4 SWAP1 SSTORE DUP2 AND SWAP2 AND LT ISZERO PUSH2 0x238 JUMPI INVALID JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 EXTCODEHASH CODESIZE 0xAF 0xDF PC NUMBER 0x2E BYTE SIGNEXTEND ADDRESS 0xC8 RETURN PUSH15 0xDA0D33329A435CF0F50EEEAA03CA18 0x29 0xE2 0xBD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "61:661:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80630ad19aeb146100395780636d26ec181461007e578063d18a42e114610086575b600080fd5b34801561004557600080fd5b5061007c6004803603604081101561005c57600080fd5b5080356001600160a01b0316906020013567ffffffffffffffff166100d6565b005b61007c6101e3565b34801561009257600080fd5b506100b9600480360360208110156100a957600080fd5b50356001600160a01b031661023a565b6040805167ffffffffffffffff9092168252519081900360200190f35b3360009081526020819052604090205467ffffffffffffffff9081169082161115610148576040805162461bcd60e51b815260206004820152601a60248201527f4e6f7420456e6f7567682046756e64732c2061626f7274696e67000000000000604482015290519081900360640190fd5b3360009081526020819052604090205467ffffffffffffffff908116828103909116101561017257fe5b33600090815260208190526040808220805467ffffffffffffffff19811667ffffffffffffffff91821686900382161790915590516001600160a01b038516926108fc928516801593909302929190818181858888f193505050501580156101de573d6000803e3d6000fd5b505050565b3467ffffffffffffffff1634146101f657fe5b336000908152602081905260409020805467ffffffffffffffff1981163467ffffffffffffffff92831681018316919091179283905581169116101561023857fe5b565b60006020819052908152604090205467ffffffffffffffff168156fea2646970667358221220c63f38afdf58432e1a0b30c8f36eda0d33329a435cf0f50eeeaa03ca1829e2bd64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD19AEB EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xD18A42E1 EQ PUSH2 0x86 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x1E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND GT ISZERO PUSH2 0x148 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420456E6F7567682046756E64732C2061626F7274696E67000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 DUP2 SUB SWAP1 SWAP2 AND LT ISZERO PUSH2 0x172 JUMPI INVALID JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP7 SWAP1 SUB DUP3 AND OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH2 0x8FC SWAP3 DUP6 AND DUP1 ISZERO SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST CALLVALUE PUSH8 0xFFFFFFFFFFFFFFFF AND CALLVALUE EQ PUSH2 0x1F6 JUMPI INVALID JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND CALLVALUE PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 ADD DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP3 DUP4 SWAP1 SSTORE DUP2 AND SWAP2 AND LT ISZERO PUSH2 0x238 JUMPI INVALID JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 EXTCODEHASH CODESIZE 0xAF 0xDF PC NUMBER 0x2E BYTE SIGNEXTEND ADDRESS 0xC8 RETURN PUSH15 0xDA0D33329A435CF0F50EEEAA03CA18 0x29 0xE2 0xBD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "61:661:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;388:331;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:331:0;;-1:-1:-1;;;;;388:331:0;;;;;;;;:::i;:::-;;154:222;;;:::i;96:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;96:49:0;-1:-1:-1;;;;;96:49:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;388:331;501:10;485:15;:27;;;;;;;;;;;;;;;474:38;;;;;466:77;;;;;-1:-1:-1;;;466:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;608:10;592:15;:27;;;;;;;;;;;;;;;:37;;;561:68;;;-1:-1:-1;561:68:0;554:76;;;;657:10;641:15;:27;;;;;;;;;;;:38;;-1:-1:-1;;641:38:0;;;;;;;;;;;;;;;690:21;;-1:-1:-1;;;;;690:12:0;;;:21;;;;;;;;;;;;;;641:15;690:21;;:12;:21;;;;;;;;;;;;;;;;;;;;;388:331;;:::o;154:222::-;231:9;211:30;;:9;:30;204:38;;;;269:10;253:15;:27;;;;;;;;;;:48;;-1:-1:-1;;253:48:0;;291:9;253:48;;;;;;;;;;;;;;;;319;;:27;;:48;;312:56;;;;154:222::o;96:49::-;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130400",
								"executionCost": "177",
								"totalCost": "130577"
							},
							"external": {
								"balanceReceived(address)": "1164",
								"receiveMoney()": "21115",
								"withdrawMoney(address,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 722,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 722,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 722,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 722,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 722,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 722,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 722,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 722,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 722,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 722,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 722,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 722,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 722,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 722,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 722,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 722,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 722,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 722,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 722,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 722,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 722,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c63f38afdf58432e1a0b30c8f36eda0d33329a435cf0f50eeeaa03ca1829e2bd64736f6c634300060c0033",
									".code": [
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "AD19AEB"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "6D26EC18"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "D18A42E1"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 388,
											"end": 719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 388,
											"end": 719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 154,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 154,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 154,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 154,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 154,
											"end": 376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 96,
											"end": 145,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 96,
											"end": 145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 501,
											"end": 511,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 485,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 485,
											"end": 512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 485,
											"end": 512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 485,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 485,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 485,
											"end": 512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 485,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 485,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 485,
											"end": 512,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 485,
											"end": 512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 485,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 485,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 485,
											"end": 512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 485,
											"end": 512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 474,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 474,
											"end": 512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 474,
											"end": 512,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 474,
											"end": 512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 466,
											"end": 543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 466,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F7420456E6F7567682046756E64732C2061626F7274696E67000000000000"
										},
										{
											"begin": 466,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 466,
											"end": 543,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 466,
											"end": 543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 608,
											"end": 618,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 592,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 592,
											"end": 619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 592,
											"end": 629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 592,
											"end": 629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 561,
											"end": 629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 561,
											"end": 629,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 554,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 554,
											"end": 630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 554,
											"end": 630,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 554,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 554,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 657,
											"end": 667,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 641,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 641,
											"end": 668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 641,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 641,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 641,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 641,
											"end": 668,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 641,
											"end": 679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 641,
											"end": 679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 641,
											"end": 679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 690,
											"end": 702,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 690,
											"end": 702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 690,
											"end": 702,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 641,
											"end": 656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 690,
											"end": 702,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 719,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 154,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 154,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 240,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 211,
											"end": 241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 211,
											"end": 220,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 241,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 204,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 204,
											"end": 242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 204,
											"end": 242,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 204,
											"end": 242,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 204,
											"end": 242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 269,
											"end": 279,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 253,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 253,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 253,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 280,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 253,
											"end": 301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 291,
											"end": 300,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 253,
											"end": 301,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 301,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 319,
											"end": 367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 319,
											"end": 346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 319,
											"end": 367,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 319,
											"end": 367,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 312,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 312,
											"end": 368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 312,
											"end": 368,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 312,
											"end": 368,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 312,
											"end": 368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 154,
											"end": 376,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 96,
											"end": 145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 96,
											"end": 145,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceReceived(address)": "d18a42e1",
							"receiveMoney()": "6d26ec18",
							"withdrawMoney(address,uint64)": "0ad19aeb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceReceived\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveMoney\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_amount\",\"type\":\"uint64\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExceptionExample.sol\":\"ExceptionExample\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ExceptionExample.sol\":{\"keccak256\":\"0xc204b6823999d381bb1b7ff91724e7ec64c94ba73d05466b6fc243bfe62cfb39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa7575d12b58cd0cff092b2e8dbb76392ddbf0121359d6dbf9e1a730a73d21f1\",\"dweb:/ipfs/QmUA3NgVpp9Ft6E1eMAPHmwmZqXNiE813dWZrKweA1dhsH\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ExceptionExample.sol": {
				"ast": {
					"absolutePath": "ExceptionExample.sol",
					"exportedSymbols": {
						"ExceptionExample": [
							90
						]
					},
					"id": 91,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "ExceptionExample",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d18a42e1",
									"id": 5,
									"mutability": "mutable",
									"name": "balanceReceived",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 90,
									"src": "96:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
										"typeString": "mapping(address => uint64)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "104:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "96:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
											"typeString": "mapping(address => uint64)"
										},
										"valueType": {
											"id": 3,
											"name": "uint64",
											"nodeType": "ElementaryTypeName",
											"src": "115:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "193:183:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 9,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "211:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "211:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 13,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "231:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 14,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "231:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 12,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "224:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 11,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "224:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "224:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "211:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 8,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "204:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "204:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "204:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 19,
															"name": "balanceReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "253:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																"typeString": "mapping(address => uint64)"
															}
														},
														"id": 22,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 20,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "269:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "269:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "253:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "291:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "291:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "284:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 23,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "284:6:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "284:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "253:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "253:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 31,
																	"name": "balanceReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "319:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																		"typeString": "mapping(address => uint64)"
																	}
																},
																"id": 34,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 32,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "335:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "335:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "319:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 37,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "357:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "357:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "350:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 35,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "350:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "350:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "319:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 30,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "312:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "312:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "312:56:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6d26ec18",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveMoney",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "193:0:0"
									},
									"scope": 90,
									"src": "154:222:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "455:264:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 52,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "474:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 53,
																	"name": "balanceReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "485:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																		"typeString": "mapping(address => uint64)"
																	}
																},
																"id": 56,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 54,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "501:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "501:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "485:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "474:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420456e6f7567682046756e64732c2061626f7274696e67",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "514:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f2fbb422158b9c9e2fcb796cc4e0e3f306018d47a95a6ec70bd4666c5998143",
																"typeString": "literal_string \"Not Enough Funds, aborting\""
															},
															"value": "Not Enough Funds, aborting"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f2fbb422158b9c9e2fcb796cc4e0e3f306018d47a95a6ec70bd4666c5998143",
																"typeString": "literal_string \"Not Enough Funds, aborting\""
															}
														],
														"id": 51,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "466:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "466:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "466:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 62,
																	"name": "balanceReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "561:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																		"typeString": "mapping(address => uint64)"
																	}
																},
																"id": 65,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "577:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "577:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "561:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 66,
																		"name": "balanceReceived",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "592:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																			"typeString": "mapping(address => uint64)"
																		}
																	},
																	"id": 69,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 67,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "608:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 68,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "608:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "592:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 70,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "622:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "592:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "561:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "554:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "554:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "554:76:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 75,
															"name": "balanceReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "641:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																"typeString": "mapping(address => uint64)"
															}
														},
														"id": 78,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "657:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "657:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "641:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 79,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "672:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "641:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "641:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 85,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "703:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 82,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "690:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "690:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "690:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "690:21:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0ad19aeb",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawMoney",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "411:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "432:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 47,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "432:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:37:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:0:0"
									},
									"scope": 90,
									"src": "388:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 91,
							"src": "61:661:0"
						}
					],
					"src": "34:688:0"
				},
				"id": 0
			}
		}
	}
}